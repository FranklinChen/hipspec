[[4.0e-6,{"Started":[]}],[1.55306,{"FileProcessed":[]}],[2.532856,{"QuickSpecDone":{"eqs":853,"classes":2549}}],[3.196988,{"PlainProof":{"prop_name":"elem y [] == elem x []","lemmas":[]}}],[4.029092,{"InductiveProof":{"prop_name":"xs++[] == xs","lemmas":[]}}],[4.081599,{"PlainProof":{"prop_name":"insert x [] == x:[]","lemmas":[]}}],[4.10392,{"PlainProof":{"prop_name":"count y [] == count x []","lemmas":[]}}],[4.143449,{"PlainProof":{"prop_name":"[]++xs == xs","lemmas":[]}}],[4.143715,{"PlainProof":{"prop_name":"isort [] == []","lemmas":[]}}],[6.181871,{"FailedProof":{"prop_name":"elem x (ys++xs) == elem x (xs++ys)"}}],[7.224618,{"InductiveProof":{"prop_name":"elem x (insert y xs) == elem x (y:xs)","lemmas":[]}}],[9.240597,{"FailedProof":{"prop_name":"insert y (insert x xs) == insert x (insert y xs)"}}],[11.266094,{"FailedProof":{"prop_name":"count x (ys++xs) == count x (xs++ys)"}}],[12.314446,{"InductiveProof":{"prop_name":"count x (insert y xs) == count x (y:xs)","lemmas":[]}}],[14.298943,{"InductiveProof":{"prop_name":"(xs++ys)++zs == xs++(ys++zs)","lemmas":[]}}],[14.35975,{"PlainProof":{"prop_name":"(x:xs)++ys == x:(xs++ys)","lemmas":[]}}],[16.346675,{"FailedProof":{"prop_name":"sorted (insert x xs) == sorted xs"}}],[18.390721,{"FailedProof":{"prop_name":"isort (ys++xs) == isort (xs++ys)"}}],[19.413264,{"FailedProof":{"prop_name":"isort (insert x xs) == isort (x:xs)"}}],[20.537731,{"InductiveProof":{"prop_name":"elem x (x:xs) == sorted []","lemmas":[]}}],[21.582973,{"InductiveProof":{"prop_name":"elem x (isort xs) == elem x xs","lemmas":[]}}],[23.60013,{"FailedProof":{"prop_name":"elem x (xs++xs) == elem x xs"}}],[24.624767,{"FailedProof":{"prop_name":"insert x (x:xs) == x:(x:xs)"}}],[24.674001,{"PlainProof":{"prop_name":"insert x (isort xs) == isort (x:xs)","lemmas":[]}}],[25.720395,{"InductiveProof":{"prop_name":"count x (isort xs) == count x xs","lemmas":[]}}],[26.754004,{"FailedProof":{"prop_name":"sorted (isort xs) == sorted []"}}],[27.777301,{"FailedProof":{"prop_name":"isort (isort xs) == isort xs"}}],[29.792585,{"FailedProof":{"prop_name":"elem y (x:[]) == elem x (y:[])"}}],[30.93683,{"FailedProof":{"prop_name":"count y (x:[]) == count x (y:[])"}}],[31.063186,{"PlainProof":{"prop_name":"count y (y:[]) == count x (x:[])","lemmas":[]}}],[31.941536,{"InductiveProof":{"prop_name":"insert (count x []) xs == count x []:xs","lemmas":[]}}],[31.967166,{"Discard":{"discarded":["xs++[] == xs","[]++xs == xs","xs++[] == xs","[]++xs == xs","xs++[] == xs","[]++xs == xs","isort [] == []","[]++[] == []","[]++(xs++ys) == xs++ys","(xs++ys)++[] == xs++ys","[]++(xs++ys) == xs++ys","(xs++ys)++[] == xs++ys","[]++(xs++ys) == xs++ys","(xs++ys)++[] == xs++ys","[]++(xs++ys) == xs++ys","(xs++ys)++[] == xs++ys","[]++(xs++ys) == xs++ys","(xs++ys)++[] == xs++ys","[]++(xs++ys) == xs++ys","(xs++ys)++[] == xs++ys","elem x (isort xs) == elem x xs","elem x (xs++xs) == elem x xs","elem x (isort xs) == elem x xs","elem x (xs++xs) == elem x xs","elem x (isort xs) == elem x xs","elem x (xs++xs) == elem x xs","elem x (isort xs) == elem x xs","elem x (xs++xs) == elem x xs","elem x (isort xs) == elem x xs","elem x (xs++xs) == elem x xs","elem x (isort xs) == elem x xs","elem x (xs++xs) == elem x xs","elem x (isort xs) == elem x xs","elem x (xs++xs) == elem x xs","elem x (isort xs) == elem x xs","elem x (xs++xs) == elem x xs","elem x (isort xs) == elem x xs","elem x (xs++xs) == elem x xs","[]++(x:xs) == x:xs","(x:xs)++[] == x:xs","(x:[])++xs == x:xs","[]++(x:xs) == x:xs","(x:xs)++[] == x:xs","(x:[])++xs == x:xs","[]++(x:xs) == x:xs","(x:xs)++[] == x:xs","(x:[])++xs == x:xs","[]++(x:xs) == x:xs","(x:xs)++[] == x:xs","(x:[])++xs == x:xs","[]++(x:xs) == x:xs","(x:xs)++[] == x:xs","(x:[])++xs == x:xs","[]++(x:xs) == x:xs","(x:xs)++[] == x:xs","(x:[])++xs == x:xs","[]++(x:xs) == x:xs","(x:xs)++[] == x:xs","(x:[])++xs == x:xs","[]++(x:xs) == x:xs","(x:xs)++[] == x:xs","(x:[])++xs == x:xs","[]++(x:xs) == x:xs","(x:xs)++[] == x:xs","(x:[])++xs == x:xs","[]++insert x xs == insert x xs","insert x xs++[] == insert x xs","[]++insert x xs == insert x xs","insert x xs++[] == insert x xs","[]++insert x xs == insert x xs","insert x xs++[] == insert x xs","[]++insert x xs == insert x xs","insert x xs++[] == insert x xs","[]++insert x xs == insert x xs","insert x xs++[] == insert x xs","[]++insert x xs == insert x xs","insert x xs++[] == insert x xs","[]++insert x xs == insert x xs","insert x xs++[] == insert x xs","[]++insert x xs == insert x xs","insert x xs++[] == insert x xs","[]++insert x xs == insert x xs","insert x xs++[] == insert x xs","count x (isort xs) == count x xs","count x (isort xs) == count x xs","count x (isort xs) == count x xs","count x (isort xs) == count x xs","count x (isort xs) == count x xs","count x (isort xs) == count x xs","count x (isort xs) == count x xs","count x (isort xs) == count x xs","count x (isort xs) == count x xs","sorted (insert x xs) == sorted xs","sorted (insert x xs) == sorted xs","sorted (insert x xs) == sorted xs","sorted (insert x xs) == sorted xs","sorted (insert x xs) == sorted xs","sorted (insert x xs) == sorted xs","sorted (insert x xs) == sorted xs","sorted (insert x xs) == sorted xs","sorted (insert x xs) == sorted xs","isort (isort xs) == isort xs","[]++isort xs == isort xs","isort xs++[] == isort xs","isort (isort xs) == isort xs","[]++isort xs == isort xs","isort xs++[] == isort xs","isort (isort xs) == isort xs","[]++isort xs == isort xs","isort xs++[] == isort xs","[]++(xs++xs) == xs++xs","(xs++xs)++[] == xs++xs","[]++(xs++xs) == xs++xs","(xs++xs)++[] == xs++xs","[]++(xs++xs) == xs++xs","(xs++xs)++[] == xs++xs","elem x [] == elem y []","elem x [] == elem y []","elem (count x xs) [] == elem x []","elem (count x xs) [] == elem x []","elem (count x xs) [] == elem x []","elem (count x xs) [] == elem y []","elem (count x xs) [] == elem y []","elem (count x xs) [] == elem y []","elem (count x xs) [] == elem y []","elem (count x xs) [] == elem y []","elem (count x xs) [] == elem y []","elem (count x []) [] == elem x []","insert x [] == x:[]","isort (x:[]) == x:[]","[]++(x:[]) == x:[]","(x:[])++[] == x:[]","insert x [] == x:[]","isort (x:[]) == x:[]","[]++(x:[]) == x:[]","(x:[])++[] == x:[]","insert x [] == x:[]","isort (x:[]) == x:[]","[]++(x:[]) == x:[]","(x:[])++[] == x:[]","count x [] == count y []","count x [] == count y []","count (count x xs) [] == count x []","count (count x xs) [] == count x []","count (count x xs) [] == count x []","count (count x xs) [] == count y []","count (count x xs) [] == count y []","count (count x xs) [] == count y []","count (count x xs) [] == count y []","count (count x xs) [] == count y []","count (count x xs) [] == count y []","count (count x []) [] == count x []","elem x (x:xs) == sorted []","elem x (x:xs) == sorted []","elem x (x:xs) == sorted []","elem x (insert x xs) == sorted []","elem x (insert x xs) == sorted []","elem x (insert x xs) == sorted []","elem x (x:xs) == sorted []","elem x (x:xs) == sorted []","elem x (x:xs) == sorted []","elem x (insert x xs) == sorted []","elem x (insert x xs) == sorted []","elem x (insert x xs) == sorted []","elem x (x:xs) == sorted []","elem x (x:xs) == sorted []","elem x (x:xs) == sorted []","elem x (insert x xs) == sorted []","elem x (insert x xs) == sorted []","elem x (insert x xs) == sorted []","sorted (isort xs) == sorted []","sorted (isort xs) == sorted []","sorted (isort xs) == sorted []","sorted (x:[]) == sorted []","sorted (x:[]) == sorted []","elem x (x:[]) == sorted []","elem x (x:[]) == sorted []","elem x (x:[]) == sorted []","(xs++ys)++zs == xs++(ys++zs)","(xs++ys)++zs == xs++(ys++zs)","(xs++ys)++zs == xs++(ys++zs)","(xs++ys)++zs == xs++(ys++zs)","(xs++ys)++zs == xs++(ys++zs)","(xs++ys)++zs == xs++(ys++zs)","elem x (xs++ys) == elem x (ys++xs)","elem x (xs++ys) == elem x (ys++xs)","elem x (xs++ys) == elem x (ys++xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (xs++ys) == elem x (ys++xs)","elem x (xs++ys) == elem x (ys++xs)","elem x (xs++ys) == elem x (ys++xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (xs++ys) == elem x (ys++xs)","elem x (xs++ys) == elem x (ys++xs)","elem x (xs++ys) == elem x (ys++xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","insert x (insert y xs) == insert y (insert x xs)","insert x (insert y xs) == insert y (insert x xs)","insert x (insert y xs) == insert y (insert x xs)","insert x (insert y xs) == insert y (insert x xs)","insert x (insert y xs) == insert y (insert x xs)","insert x (insert y xs) == insert y (insert x xs)","insert x (insert y xs) == insert y (insert x xs)","insert x (insert y xs) == insert y (insert x xs)","insert x (insert y xs) == insert y (insert x xs)","count x (xs++ys) == count x (ys++xs)","count x (xs++ys) == count x (ys++xs)","count x (xs++ys) == count x (ys++xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (xs++ys) == count x (ys++xs)","count x (xs++ys) == count x (ys++xs)","count x (xs++ys) == count x (ys++xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (xs++ys) == count x (ys++xs)","count x (xs++ys) == count x (ys++xs)","count x (xs++ys) == count x (ys++xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","elem (count x xs) (isort ys) == elem (count x xs) ys"]}}],[32.020676,{"PlainProof":{"prop_name":"sorted (x:[]) == sorted []","lemmas":[]}}],[34.047997,{"FailedProof":{"prop_name":"elem (count x xs) (ys++ys) == elem (count x xs) ys"}}],[34.048206,{"Discard":{"discarded":["elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","isort (xs++ys) == isort (ys++xs)","isort (xs++ys) == isort (ys++xs)","isort (xs++ys) == isort (ys++xs)","isort (insert x xs) == isort (x:xs)","insert x (isort xs) == isort (x:xs)","isort (insert x xs) == isort (x:xs)","insert x (isort xs) == isort (x:xs)","isort (insert x xs) == isort (x:xs)","insert x (isort xs) == isort (x:xs)","isort (insert x xs) == isort (x:xs)","insert x (isort xs) == isort (x:xs)","isort (insert x xs) == isort (x:xs)","insert x (isort xs) == isort (x:xs)","isort (insert x xs) == isort (x:xs)","insert x (isort xs) == isort (x:xs)","isort (insert x xs) == isort (x:xs)","insert x (isort xs) == isort (x:xs)","isort (insert x xs) == isort (x:xs)","insert x (isort xs) == isort (x:xs)","isort (insert x xs) == isort (x:xs)","insert x (isort xs) == isort (x:xs)","(xs++xs)++ys == xs++(xs++ys)","(xs++xs)++ys == xs++(xs++ys)","(xs++ys)++xs == xs++(ys++xs)","(xs++ys)++xs == xs++(ys++xs)","(xs++ys)++ys == xs++(ys++ys)","(xs++ys)++ys == xs++(ys++ys)","(xs++ys)++xs == xs++(ys++xs)","(xs++xs)++ys == xs++(xs++ys)","(xs++xs)++ys == xs++(xs++ys)","(xs++ys)++xs == xs++(ys++xs)","(xs++ys)++ys == xs++(ys++ys)","(xs++ys)++ys == xs++(ys++ys)","(xs++ys)++xs == xs++(ys++xs)","(xs++ys)++xs == xs++(ys++xs)","(xs++xs)++ys == xs++(xs++ys)","(xs++xs)++ys == xs++(xs++ys)","(xs++ys)++ys == xs++(ys++ys)","(xs++ys)++ys == xs++(ys++ys)","insert x (x:xs) == x:(x:xs)","(x:[])++(x:xs) == x:(x:xs)","insert x (x:xs) == x:(x:xs)","(x:[])++(x:xs) == x:(x:xs)","insert x (x:xs) == x:(x:xs)","(x:[])++(x:xs) == x:(x:xs)","(x:[])++insert x xs == x:insert x xs","(x:[])++insert x xs == x:insert x xs","(x:[])++insert x xs == x:insert x xs","(x:[])++isort xs == x:isort xs","(x:[])++isort xs == x:isort xs","(x:[])++isort xs == x:isort xs","(x:xs)++xs == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","(x:xs)++xs == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","(x:xs)++xs == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","insert x (x:xs) == x:(x:xs)","(x:[])++(x:xs) == x:(x:xs)","insert x (x:xs) == x:(x:xs)","(x:[])++(x:xs) == x:(x:xs)","insert x (x:xs) == x:(x:xs)","(x:[])++(x:xs) == x:(x:xs)","(x:[])++insert x xs == x:insert x xs","(x:[])++insert x xs == x:insert x xs","(x:[])++insert x xs == x:insert x xs","(x:[])++isort xs == x:isort xs","(x:[])++isort xs == x:isort xs","(x:[])++isort xs == x:isort xs","(x:xs)++xs == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","(x:xs)++xs == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","(x:xs)++xs == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","insert x (x:xs) == x:(x:xs)","(x:[])++(x:xs) == x:(x:xs)","insert x (x:xs) == x:(x:xs)","(x:[])++(x:xs) == x:(x:xs)","insert x (x:xs) == x:(x:xs)","(x:[])++(x:xs) == x:(x:xs)","(x:[])++insert x xs == x:insert x xs","(x:[])++insert x xs == x:insert x xs","(x:[])++insert x xs == x:insert x xs","(x:[])++isort xs == x:isort xs","(x:[])++isort xs == x:isort xs","(x:[])++isort xs == x:isort xs","(x:xs)++xs == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","(x:xs)++xs == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","(x:xs)++xs == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","count x (insert x xs) == count x (x:xs)","count x (insert x xs) == count x (x:xs)","count x (insert x xs) == count x (x:xs)","count x (insert x xs) == count x (x:xs)","count x (insert x xs) == count x (x:xs)","count x (insert x xs) == count x (x:xs)","count x (insert x xs) == count x (x:xs)","count x (insert x xs) == count x (x:xs)","count x (insert x xs) == count x (x:xs)","elem (count x xs) (isort xs) == elem (count x xs) xs"]}}],[36.091406,{"FailedProof":{"prop_name":"sorted (ys++xs) == sorted (xs++ys)"}}],[37.109508,{"FailedProof":{"prop_name":"elem (count x xs) (xs++xs) == elem (count x xs) xs"}}],[37.109608,{"Discard":{"discarded":["elem (count x xs) (isort xs) == elem (count x xs) xs","elem (count x xs) (xs++xs) == elem (count x xs) xs","elem (count x xs) (isort xs) == elem (count x xs) xs","elem (count x xs) (xs++xs) == elem (count x xs) xs","elem (count x xs) (isort xs) == elem (count x xs) xs","elem (count x xs) (xs++xs) == elem (count x xs) xs","elem (count x xs) (isort xs) == elem (count x xs) xs","elem (count x xs) (xs++xs) == elem (count x xs) xs","elem (count x xs) (isort xs) == elem (count x xs) xs","elem (count x xs) (xs++xs) == elem (count x xs) xs","elem (count x xs) (isort xs) == elem (count x xs) xs","elem (count x xs) (xs++xs) == elem (count x xs) xs","elem (count x xs) (isort xs) == elem (count x xs) xs","elem (count x xs) (xs++xs) == elem (count x xs) xs","elem (count x xs) (isort xs) == elem (count x xs) xs","elem (count x xs) (xs++xs) == elem (count x xs) xs","count (count x xs) (isort xs) == count (count x xs) xs","count (count x xs) (isort xs) == count (count x xs) xs","count (count x xs) (isort xs) == count (count x xs) xs","count (count x xs) (isort xs) == count (count x xs) xs","count (count x xs) (isort xs) == count (count x xs) xs","count (count x xs) (isort xs) == count (count x xs) xs","count (count x xs) (isort xs) == count (count x xs) xs","count (count x xs) (isort xs) == count (count x xs) xs","count (count x xs) (isort xs) == count (count x xs) xs","(xs++xs)++xs == xs++(xs++xs)","(xs++xs)++xs == xs++(xs++xs)","(xs++xs)++xs == xs++(xs++xs)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (ys++zs) == elem (count x xs) (zs++ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (ys++zs) == elem (count x xs) (zs++ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (ys++zs) == elem (count x xs) (zs++ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (ys++zs) == elem (count x xs) (zs++ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (ys++zs) == elem (count x xs) (zs++ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (ys++zs) == elem (count x xs) (zs++ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (ys++zs) == elem (count x xs) (zs++ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (ys++zs) == elem (count x xs) (zs++ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)"]}}],[40.152816,{"FailedProof":{"prop_name":"elem (count x xs) (zs++ys) == elem (count x xs) (ys++zs)"}}],[42.183203,{"FailedProof":{"prop_name":"count (count x xs) (zs++ys) == count (count x xs) (ys++zs)"}}],[42.183305,{"Discard":{"discarded":["count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (ys++zs) == count (count x xs) (zs++ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (ys++zs) == count (count x xs) (zs++ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (ys++zs) == count (count x xs) (zs++ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (ys++zs) == count (count x xs) (zs++ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (ys++zs) == count (count x xs) (zs++ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (ys++zs) == count (count x xs) (zs++ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (ys++zs) == count (count x xs) (zs++ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (ys++zs) == count (count x xs) (zs++ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","elem (count x xs) (ys++xs) == elem (count x xs) (xs++ys)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)"]}}],[44.232195,{"FailedProof":{"prop_name":"elem (count x xs) (ys++xs) == elem (count x xs) (xs++ys)"}}],[46.258798,{"FailedProof":{"prop_name":"elem (count x ys) (ys++xs) == elem (count x ys) (xs++ys)"}}],[46.258901,{"Discard":{"discarded":["elem (count x xs) (ys++xs) == elem (count x xs) (xs++ys)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (xs++ys) == elem (count x xs) (ys++xs)","elem (count x xs) (xs++ys) == elem (count x xs) (ys++xs)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (ys++xs) == elem (count x xs) (xs++ys)","elem (count x xs) (ys++xs) == elem (count x xs) (xs++ys)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (xs++ys) == elem (count x xs) (ys++xs)","elem (count x xs) (ys++xs) == elem (count x xs) (xs++ys)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (xs++ys) == elem (count x xs) (ys++xs)","elem (count x xs) (xs++ys) == elem (count x xs) (ys++xs)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (ys++xs) == elem (count x xs) (xs++ys)","elem (count x xs) (ys++xs) == elem (count x xs) (xs++ys)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (xs++ys) == elem (count x xs) (ys++xs)","elem (count x xs) (ys++xs) == elem (count x xs) (xs++ys)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (xs++ys) == elem (count x xs) (ys++xs)","elem (count x xs) (xs++ys) == elem (count x xs) (ys++xs)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","count (count x xs) (ys++xs) == count (count x xs) (xs++ys)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)"]}}],[48.300308,{"FailedProof":{"prop_name":"count (count x xs) (ys++xs) == count (count x xs) (xs++ys)"}}],[50.336183,{"FailedProof":{"prop_name":"count (count x ys) (ys++xs) == count (count x ys) (xs++ys)"}}],[50.336699,{"Discard":{"discarded":["count (count x xs) (ys++xs) == count (count x xs) (xs++ys)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (xs++ys) == count (count x xs) (ys++xs)","count (count x xs) (xs++ys) == count (count x xs) (ys++xs)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (ys++xs) == count (count x xs) (xs++ys)","count (count x xs) (ys++xs) == count (count x xs) (xs++ys)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (xs++ys) == count (count x xs) (ys++xs)","count (count x xs) (ys++xs) == count (count x xs) (xs++ys)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (xs++ys) == count (count x xs) (ys++xs)","count (count x xs) (xs++ys) == count (count x xs) (ys++xs)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (ys++xs) == count (count x xs) (xs++ys)","count (count x xs) (ys++xs) == count (count x xs) (xs++ys)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (xs++ys) == count (count x xs) (ys++xs)","count (count x xs) (ys++xs) == count (count x xs) (xs++ys)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (xs++ys) == count (count x xs) (ys++xs)","count (count x xs) (xs++ys) == count (count x xs) (ys++xs)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","elem x (y:[]) == elem y (x:[])","elem x (y:[]) == elem y (x:[])","elem x (y:[]) == elem y (x:[])","(x:[])++(y:[]) == x:(y:[])","(x:[])++(y:[]) == x:(y:[])","(x:[])++(y:[]) == x:(y:[])","(x:[])++(y:[]) == x:(y:[])","(x:[])++(y:[]) == x:(y:[])","(x:[])++(y:[]) == x:(y:[])","insert x (y:[]) == insert y (x:[])","insert x (y:[]) == insert y (x:[])","count x (y:[]) == count y (x:[])","count x (y:[]) == count y (x:[])","count x (y:[]) == count y (x:[])","elem (count x xs) (insert x xs) == elem (count x xs) (x:xs)","elem (count x xs) (insert x xs) == elem (count x xs) (x:xs)","elem (count x xs) (insert x xs) == elem (count x xs) (x:xs)","elem (count x xs) (insert x xs) == elem (count x xs) (x:xs)","elem (count x xs) (insert x xs) == elem (count x xs) (x:xs)","elem (count x xs) (insert x xs) == elem (count x xs) (x:xs)","elem (count x xs) (insert x xs) == elem (count x xs) (x:xs)","elem (count x xs) (insert x xs) == elem (count x xs) (x:xs)","elem (count x xs) (insert x xs) == elem (count x xs) (x:xs)","insert (count x xs) [] == count x xs:[]","insert (count x xs) [] == count x xs:[]","insert (count x xs) [] == count x xs:[]","insert (count x xs) [] == count x xs:[]","insert (count x xs) [] == count x xs:[]","insert (count x xs) [] == count x xs:[]","insert (count x xs) [] == count x xs:[]","insert (count x xs) [] == count x xs:[]","insert (count x xs) [] == count x xs:[]","count (count x xs) (insert x xs) == count (count x xs) (x:xs)","count (count x xs) (insert x xs) == count (count x xs) (x:xs)","count (count x xs) (insert x xs) == count (count x xs) (x:xs)","count (count x xs) (insert x xs) == count (count x xs) (x:xs)","count (count x xs) (insert x xs) == count (count x xs) (x:xs)","count (count x xs) (insert x xs) == count (count x xs) (x:xs)","count (count x xs) (insert x xs) == count (count x xs) (x:xs)","count (count x xs) (insert x xs) == count (count x xs) (x:xs)","count (count x xs) (insert x xs) == count (count x xs) (x:xs)","elem (count x []) (isort xs) == elem (count x []) xs"]}}],[52.356225,{"FailedProof":{"prop_name":"insert y (x:[]) == insert x (y:[])"}}],[53.382554,{"FailedProof":{"prop_name":"elem (count x []) (xs++xs) == elem (count x []) xs"}}],[53.382712,{"Discard":{"discarded":["elem (count x []) (isort xs) == elem (count x []) xs","elem (count x []) (xs++xs) == elem (count x []) xs","elem (count x []) (isort xs) == elem (count x []) xs","elem (count x []) (xs++xs) == elem (count x []) xs","insert (count x []) xs == count x []:xs","insert (count x []) xs == count x []:xs","insert (count x []) xs == count x []:xs","count (count x []) (isort xs) == count (count x []) xs","count (count x []) (isort xs) == count (count x []) xs","count (count x []) (isort xs) == count (count x []) xs","(x:[])++(x:[]) == x:(x:[])","insert x (x:[]) == x:(x:[])","(x:[])++(x:[]) == x:(x:[])","insert x (x:[]) == x:(x:[])","(x:[])++(x:[]) == x:(x:[])","count x (x:[]) == count y (y:[])","count x (x:[]) == count y (y:[])"]}}],[53.438111,{"PlainProof":{"prop_name":"insert x (x:[]) == x:(x:[])","lemmas":[]}}],[55.487722,{"FailedProof":{"prop_name":"elem (count x []) (ys++xs) == elem (count x []) (xs++ys)"}}],[55.487797,{"Discard":{"discarded":["elem (count x []) (xs++ys) == elem (count x []) (ys++xs)","elem (count x []) (xs++ys) == elem (count x []) (ys++xs)","elem (count x []) (insert y xs) == elem (count x []) (y:xs)","elem (count x []) (insert y xs) == elem (count x []) (y:xs)","elem (count x []) (insert y xs) == elem (count x []) (y:xs)","elem (count x []) (insert y xs) == elem (count x []) (y:xs)","elem (count x []) (insert y xs) == elem (count x []) (y:xs)","elem (count x []) (insert y xs) == elem (count x []) (y:xs)","insert (count x []) (xs++ys) == count x []:(xs++ys)","insert (count x []) (xs++ys) == count x []:(xs++ys)","insert (count x []) (xs++ys) == count x []:(xs++ys)","insert (count x []) (xs++ys) == count x []:(xs++ys)","insert (count x []) (xs++ys) == count x []:(xs++ys)","insert (count x []) (xs++ys) == count x []:(xs++ys)","insert (count x []) (y:xs) == count x []:(y:xs)","insert (count x []) (y:xs) == count x []:(y:xs)","insert (count x []) (y:xs) == count x []:(y:xs)","insert (count x []) (y:xs) == count x []:(y:xs)","insert (count x []) (y:xs) == count x []:(y:xs)","insert (count x []) (y:xs) == count x []:(y:xs)","insert (count x []) (insert y xs) == count x []:insert y xs","insert (count x []) (insert y xs) == count x []:insert y xs","insert (count x []) (insert y xs) == count x []:insert y xs","insert (count x []) (insert y xs) == count x []:insert y xs","insert (count x []) (insert y xs) == count x []:insert y xs","insert (count x []) (insert y xs) == count x []:insert y xs","count (count x []) (xs++ys) == count (count x []) (ys++xs)","count (count x []) (xs++ys) == count (count x []) (ys++xs)","count (count x []) (insert y xs) == count (count x []) (y:xs)","count (count x []) (insert y xs) == count (count x []) (y:xs)","count (count x []) (insert y xs) == count (count x []) (y:xs)","count (count x []) (insert y xs) == count (count x []) (y:xs)","count (count x []) (insert y xs) == count (count x []) (y:xs)","count (count x []) (insert y xs) == count (count x []) (y:xs)","elem (count x []) (insert x xs) == elem (count x []) (x:xs)","elem (count x []) (insert x xs) == elem (count x []) (x:xs)","elem (count x []) (insert x xs) == elem (count x []) (x:xs)","insert (count x []) (x:xs) == count x []:(x:xs)","insert (count x []) (x:xs) == count x []:(x:xs)","insert (count x []) (x:xs) == count x []:(x:xs)","insert (count x []) (insert x xs) == count x []:insert x xs","insert (count x []) (insert x xs) == count x []:insert x xs","insert (count x []) (insert x xs) == count x []:insert x xs","insert (count x []) (isort xs) == count x []:isort xs","insert (count x []) (isort xs) == count x []:isort xs","insert (count x []) (isort xs) == count x []:isort xs","insert (count x []) (xs++xs) == count x []:(xs++xs)","insert (count x []) (xs++xs) == count x []:(xs++xs)","insert (count x []) (xs++xs) == count x []:(xs++xs)","count (count x []) (insert x xs) == count (count x []) (x:xs)","count (count x []) (insert x xs) == count (count x []) (x:xs)","count (count x []) (insert x xs) == count (count x []) (x:xs)","insert (count x []) [] == count x []:[]","insert (count x []) (y:[]) == count x []:(y:[])","insert (count x []) (y:[]) == count x []:(y:[])","insert (count x []) (x:[]) == count x []:(x:[])"]}}],[57.540757,{"FailedProof":{"prop_name":"count (count x []) (ys++xs) == count (count x []) (xs++ys)"}}],[59.579391,{"FailedProof":{"prop_name":"elem x (ys++xs) == elem x (xs++ys)"}}],[61.589186,{"FailedProof":{"prop_name":"insert y (insert x xs) == insert x (insert y xs)"}}],[63.634649,{"FailedProof":{"prop_name":"count x (ys++xs) == count x (xs++ys)"}}],[65.646947,{"FailedProof":{"prop_name":"sorted (insert x xs) == sorted xs"}}],[67.685821,{"FailedProof":{"prop_name":"isort (ys++xs) == isort (xs++ys)"}}],[68.708278,{"FailedProof":{"prop_name":"isort (insert x xs) == isort (x:xs)"}}],[70.723169,{"FailedProof":{"prop_name":"elem x (xs++xs) == elem x xs"}}],[71.748064,{"FailedProof":{"prop_name":"insert x (x:xs) == x:(x:xs)"}}],[72.779122,{"FailedProof":{"prop_name":"sorted (isort xs) == sorted []"}}],[73.803232,{"FailedProof":{"prop_name":"isort (isort xs) == isort xs"}}],[75.816379,{"FailedProof":{"prop_name":"elem y (x:[]) == elem x (y:[])"}}],[76.952884,{"FailedProof":{"prop_name":"count y (x:[]) == count x (y:[])"}}],[78.984103,{"FailedProof":{"prop_name":"elem (count x xs) (ys++ys) == elem (count x xs) ys"}}],[80.994269,{"FailedProof":{"prop_name":"sorted (ys++xs) == sorted (xs++ys)"}}],[83.007892,{"FailedProof":{"prop_name":"elem (count x xs) (xs++xs) == elem (count x xs) xs"}}],[85.054129,{"FailedProof":{"prop_name":"elem (count x xs) (zs++ys) == elem (count x xs) (ys++zs)"}}],[88.104491,{"FailedProof":{"prop_name":"count (count x xs) (zs++ys) == count (count x xs) (ys++zs)"}}],[90.133769,{"FailedProof":{"prop_name":"elem (count x xs) (ys++xs) == elem (count x xs) (xs++ys)"}}],[92.177465,{"FailedProof":{"prop_name":"elem (count x ys) (ys++xs) == elem (count x ys) (xs++ys)"}}],[94.209413,{"FailedProof":{"prop_name":"count (count x xs) (ys++xs) == count (count x xs) (xs++ys)"}}],[96.253783,{"FailedProof":{"prop_name":"count (count x ys) (ys++xs) == count (count x ys) (xs++ys)"}}],[98.260236,{"FailedProof":{"prop_name":"insert y (x:[]) == insert x (y:[])"}}],[100.294513,{"FailedProof":{"prop_name":"elem (count x []) (xs++xs) == elem (count x []) xs"}}],[102.345126,{"FailedProof":{"prop_name":"elem (count x []) (ys++xs) == elem (count x []) (xs++ys)"}}],[104.396463,{"FailedProof":{"prop_name":"count (count x []) (ys++xs) == count (count x []) (xs++ys)"}}],[104.396473,{"StartingUserLemmas":[]}],[105.431298,{"FailedProof":{"prop_name":"prop_T15"}}],[106.437471,{"FailedProof":{"prop_name":"prop_T1"}}],[109.462264,{"FailedProof":{"prop_name":"prop_T9"}}],[111.474376,{"FailedProof":{"prop_name":"prop_T8"}}],[113.485286,{"FailedProof":{"prop_name":"prop_T39"}}],[114.540764,{"InductiveProof":{"prop_name":"prop_T38","lemmas":[]}}],[116.567251,{"InductiveProof":{"prop_name":"prop_T37","lemmas":[]}}],[117.619384,{"InductiveProof":{"prop_name":"prop_T36","lemmas":[]}}],[119.602811,{"FailedProof":{"prop_name":"prop_T24"}}],[120.60757,{"FailedProof":{"prop_name":"prop_T16"}}],[121.631451,{"FailedProof":{"prop_name":"prop_T26"}}],[122.634179,{"FailedProof":{"prop_name":"prop_T13"}}],[122.662494,{"PlainProof":{"prop_name":"prop_T47","lemmas":[]}}],[122.704893,{"PlainProof":{"prop_name":"prop_T46","lemmas":[]}}],[122.733246,{"PlainProof":{"prop_name":"prop_T45","lemmas":[]}}],[124.771101,{"FailedProof":{"prop_name":"prop_T44"}}],[124.817487,{"PlainProof":{"prop_name":"prop_T50","lemmas":[]}}],[124.862997,{"PlainProof":{"prop_name":"prop_T49","lemmas":[]}}],[125.888256,{"FailedProof":{"prop_name":"prop_T48"}}],[126.913908,{"FailedProof":{"prop_name":"prop_T4"}}],[128.861089,{"FailedProof":{"prop_name":"prop_T3"}}],[129.951724,{"FailedProof":{"prop_name":"prop_T25"}}],[131.920877,{"FailedProof":{"prop_name":"prop_T23"}}],[133.012133,{"FailedProof":{"prop_name":"prop_T22"}}],[134.038013,{"FailedProof":{"prop_name":"prop_T20"}}],[135.992794,{"FailedProof":{"prop_name":"prop_T2"}}],[137.076838,{"FailedProof":{"prop_name":"prop_T34"}}],[139.004645,{"FailedProof":{"prop_name":"prop_T35"}}],[140.011975,{"FailedProof":{"prop_name":"prop_T33"}}],[141.122237,{"FailedProof":{"prop_name":"prop_T7"}}],[142.148617,{"FailedProof":{"prop_name":"prop_T31"}}],[144.027551,{"FailedProof":{"prop_name":"prop_T6"}}],[145.068093,{"FailedProof":{"prop_name":"prop_T5"}}],[146.101012,{"FailedProof":{"prop_name":"prop_T30"}}],[147.127715,{"FailedProof":{"prop_name":"prop_T29"}}],[148.155401,{"FailedProof":{"prop_name":"prop_T27"}}],[149.182912,{"FailedProof":{"prop_name":"prop_T19"}}],[151.205486,{"FailedProof":{"prop_name":"prop_T17"}}],[152.209858,{"InductiveProof":{"prop_name":"prop_T12","lemmas":[]}}],[153.236826,{"FailedProof":{"prop_name":"prop_T10"}}],[154.268692,{"FailedProof":{"prop_name":"prop_G6"}}],[155.292027,{"InductiveProof":{"prop_name":"prop_G5","lemmas":[]}}],[156.318374,{"FailedProof":{"prop_name":"prop_T32"}}],[157.328472,{"InductiveProof":{"prop_name":"prop_G9","lemmas":[]}}],[158.326175,{"InductiveProof":{"prop_name":"prop_T43","lemmas":[]}}],[160.334482,{"FailedProof":{"prop_name":"prop_T42"}}],[161.458925,{"FailedProof":{"prop_name":"prop_T41"}}],[163.371042,{"FailedProof":{"prop_name":"prop_T40"}}],[164.397034,{"FailedProof":{"prop_name":"prop_T14"}}],[164.397106,{"Finished":{"unproved":["prop_T15","prop_T1","prop_T9","prop_T8","prop_T39","prop_T24","prop_T16","prop_T26","prop_T13","prop_T44","prop_T48","prop_T4","prop_T3","prop_T25","prop_T23","prop_T22","prop_T20","prop_T2","prop_T34","prop_T35","prop_T33","prop_T7","prop_T31","prop_T6","prop_T5","prop_T30","prop_T29","prop_T27","prop_T19","prop_T17","prop_T10","prop_G6","prop_T32","prop_T42","prop_T41","prop_T40","prop_T14"],"proved":["prop_T38","prop_T37","prop_T36","prop_T12","prop_G5","prop_G9","prop_T43","prop_T47","prop_T46","prop_T45","prop_T50","prop_T49"],"qs_proved":["xs++[] == xs","elem x (insert y xs) == elem x (y:xs)","count x (insert y xs) == count x (y:xs)","(xs++ys)++zs == xs++(ys++zs)","elem x (x:xs) == sorted []","elem x (isort xs) == elem x xs","count x (isort xs) == count x xs","insert (count x []) xs == count x []:xs"],"qs_unproved":["elem x (xs++ys) == elem x (ys++xs)","insert x (insert y xs) == insert y (insert x xs)","count x (xs++ys) == count x (ys++xs)","sorted (insert x xs) == sorted xs","isort (xs++ys) == isort (ys++xs)","isort (insert x xs) == isort (x:xs)","elem x (xs++xs) == elem x xs","insert x (x:xs) == x:(x:xs)","sorted (isort xs) == sorted []","isort (isort xs) == isort xs","elem x (y:[]) == elem y (x:[])","count x (y:[]) == count y (x:[])","elem (count x xs) (ys++ys) == elem (count x xs) ys","sorted (xs++ys) == sorted (ys++xs)","elem (count x xs) (xs++xs) == elem (count x xs) xs","elem (count x xs) (ys++zs) == elem (count x xs) (zs++ys)","count (count x xs) (ys++zs) == count (count x xs) (zs++ys)","elem (count x xs) (ys++xs) == elem (count x xs) (xs++ys)","elem (count x xs) (xs++ys) == elem (count x xs) (ys++xs)","count (count x xs) (ys++xs) == count (count x xs) (xs++ys)","count (count x xs) (xs++ys) == count (count x xs) (ys++xs)","insert x (y:[]) == insert y (x:[])","elem (count x []) (xs++xs) == elem (count x []) xs","elem (count x []) (xs++ys) == elem (count x []) (ys++xs)","count (count x []) (xs++ys) == count (count x []) (ys++xs)"]}}]]