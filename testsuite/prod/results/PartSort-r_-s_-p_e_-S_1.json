[[3.0e-6,{"Started":[]}],[1.552573,{"FileProcessed":[]}],[2.500804,{"QuickSpecDone":{"eqs":852,"classes":2550}}],[3.108044,{"PlainProof":{"prop_name":"elem y [] == elem x []","lemmas":[]}}],[3.992408,{"InductiveProof":{"prop_name":"xs++[] == xs","lemmas":[]}}],[4.017527,{"PlainProof":{"prop_name":"insert x [] == x:[]","lemmas":[]}}],[4.026086,{"PlainProof":{"prop_name":"count y [] == count x []","lemmas":[]}}],[4.040209,{"PlainProof":{"prop_name":"[]++xs == xs","lemmas":[]}}],[4.040272,{"PlainProof":{"prop_name":"isort [] == []","lemmas":[]}}],[6.067392,{"FailedProof":{"prop_name":"elem x (ys++xs) == elem x (xs++ys)"}}],[8.078033,{"FailedProof":{"prop_name":"elem x (insert y xs) == elem x (y:xs)"}}],[10.093461,{"FailedProof":{"prop_name":"insert y (insert x xs) == insert x (insert y xs)"}}],[12.108733,{"FailedProof":{"prop_name":"count x (ys++xs) == count x (xs++ys)"}}],[14.124227,{"FailedProof":{"prop_name":"count x (insert y xs) == count x (y:xs)"}}],[16.138198,{"InductiveProof":{"prop_name":"(xs++ys)++zs == xs++(ys++zs)","lemmas":[]}}],[16.165486,{"PlainProof":{"prop_name":"(x:xs)++ys == x:(xs++ys)","lemmas":[]}}],[18.168311,{"FailedProof":{"prop_name":"sorted (insert x xs) == sorted xs"}}],[20.197799,{"FailedProof":{"prop_name":"isort (ys++xs) == isort (xs++ys)"}}],[21.206286,{"FailedProof":{"prop_name":"isort (insert x xs) == isort (x:xs)"}}],[23.225513,{"FailedProof":{"prop_name":"elem x (x:xs) == sorted []"}}],[24.23354,{"FailedProof":{"prop_name":"elem x (isort xs) == elem x xs"}}],[26.244954,{"FailedProof":{"prop_name":"elem x (xs++xs) == elem x xs"}}],[27.257964,{"InductiveProof":{"prop_name":"insert x (x:xs) == x:(x:xs)","lemmas":[]}}],[27.276655,{"PlainProof":{"prop_name":"insert x (isort xs) == isort (x:xs)","lemmas":[]}}],[29.277672,{"FailedProof":{"prop_name":"count x (isort xs) == count x xs"}}],[30.294301,{"FailedProof":{"prop_name":"sorted (isort xs) == sorted []"}}],[31.311913,{"FailedProof":{"prop_name":"isort (isort xs) == isort xs"}}],[33.328914,{"FailedProof":{"prop_name":"elem y (x:[]) == elem x (y:[])"}}],[34.335054,{"FailedProof":{"prop_name":"count y (x:[]) == count x (y:[])"}}],[34.356912,{"PlainProof":{"prop_name":"insert (count x []) xs == count x []:xs","lemmas":[]}}],[36.37667,{"FailedProof":{"prop_name":"count y (y:[]) == count x (x:[])"}}],[36.40097,{"Discard":{"discarded":["xs++[] == xs","[]++xs == xs","xs++[] == xs","[]++xs == xs","xs++[] == xs","[]++xs == xs","isort [] == []","[]++[] == []","[]++(xs++ys) == xs++ys","(xs++ys)++[] == xs++ys","[]++(xs++ys) == xs++ys","(xs++ys)++[] == xs++ys","[]++(xs++ys) == xs++ys","(xs++ys)++[] == xs++ys","[]++(xs++ys) == xs++ys","(xs++ys)++[] == xs++ys","[]++(xs++ys) == xs++ys","(xs++ys)++[] == xs++ys","[]++(xs++ys) == xs++ys","(xs++ys)++[] == xs++ys","elem x (isort xs) == elem x xs","elem x (xs++xs) == elem x xs","elem x (isort xs) == elem x xs","elem x (xs++xs) == elem x xs","elem x (isort xs) == elem x xs","elem x (xs++xs) == elem x xs","elem x (isort xs) == elem x xs","elem x (xs++xs) == elem x xs","elem x (isort xs) == elem x xs","elem x (xs++xs) == elem x xs","elem x (isort xs) == elem x xs","elem x (xs++xs) == elem x xs","elem x (isort xs) == elem x xs","elem x (xs++xs) == elem x xs","elem x (isort xs) == elem x xs","elem x (xs++xs) == elem x xs","elem x (isort xs) == elem x xs","elem x (xs++xs) == elem x xs","[]++(x:xs) == x:xs","(x:xs)++[] == x:xs","(x:[])++xs == x:xs","[]++(x:xs) == x:xs","(x:xs)++[] == x:xs","(x:[])++xs == x:xs","[]++(x:xs) == x:xs","(x:xs)++[] == x:xs","(x:[])++xs == x:xs","[]++(x:xs) == x:xs","(x:xs)++[] == x:xs","(x:[])++xs == x:xs","[]++(x:xs) == x:xs","(x:xs)++[] == x:xs","(x:[])++xs == x:xs","[]++(x:xs) == x:xs","(x:xs)++[] == x:xs","(x:[])++xs == x:xs","[]++(x:xs) == x:xs","(x:xs)++[] == x:xs","(x:[])++xs == x:xs","[]++(x:xs) == x:xs","(x:xs)++[] == x:xs","(x:[])++xs == x:xs","[]++(x:xs) == x:xs","(x:xs)++[] == x:xs","(x:[])++xs == x:xs","[]++insert x xs == insert x xs","insert x xs++[] == insert x xs","[]++insert x xs == insert x xs","insert x xs++[] == insert x xs","[]++insert x xs == insert x xs","insert x xs++[] == insert x xs","[]++insert x xs == insert x xs","insert x xs++[] == insert x xs","[]++insert x xs == insert x xs","insert x xs++[] == insert x xs","[]++insert x xs == insert x xs","insert x xs++[] == insert x xs","[]++insert x xs == insert x xs","insert x xs++[] == insert x xs","[]++insert x xs == insert x xs","insert x xs++[] == insert x xs","[]++insert x xs == insert x xs","insert x xs++[] == insert x xs","count x (isort xs) == count x xs","count x (isort xs) == count x xs","count x (isort xs) == count x xs","count x (isort xs) == count x xs","count x (isort xs) == count x xs","count x (isort xs) == count x xs","count x (isort xs) == count x xs","count x (isort xs) == count x xs","count x (isort xs) == count x xs","sorted (insert x xs) == sorted xs","sorted (insert x xs) == sorted xs","sorted (insert x xs) == sorted xs","sorted (insert x xs) == sorted xs","sorted (insert x xs) == sorted xs","sorted (insert x xs) == sorted xs","sorted (insert x xs) == sorted xs","sorted (insert x xs) == sorted xs","sorted (insert x xs) == sorted xs","isort (isort xs) == isort xs","[]++isort xs == isort xs","isort xs++[] == isort xs","isort (isort xs) == isort xs","[]++isort xs == isort xs","isort xs++[] == isort xs","isort (isort xs) == isort xs","[]++isort xs == isort xs","isort xs++[] == isort xs","[]++(xs++xs) == xs++xs","(xs++xs)++[] == xs++xs","[]++(xs++xs) == xs++xs","(xs++xs)++[] == xs++xs","[]++(xs++xs) == xs++xs","(xs++xs)++[] == xs++xs","elem x [] == elem y []","elem x [] == elem y []","elem (count x xs) [] == elem x []","elem (count x xs) [] == elem x []","elem (count x xs) [] == elem x []","elem (count x xs) [] == elem y []","elem (count x xs) [] == elem y []","elem (count x xs) [] == elem y []","elem (count x xs) [] == elem y []","elem (count x xs) [] == elem y []","elem (count x xs) [] == elem y []","elem (count x []) [] == elem x []","insert x [] == x:[]","isort (x:[]) == x:[]","[]++(x:[]) == x:[]","(x:[])++[] == x:[]","insert x [] == x:[]","isort (x:[]) == x:[]","[]++(x:[]) == x:[]","(x:[])++[] == x:[]","insert x [] == x:[]","isort (x:[]) == x:[]","[]++(x:[]) == x:[]","(x:[])++[] == x:[]","count x [] == count y []","count x [] == count y []","count (count x xs) [] == count x []","count (count x xs) [] == count x []","count (count x xs) [] == count x []","count (count x xs) [] == count y []","count (count x xs) [] == count y []","count (count x xs) [] == count y []","count (count x xs) [] == count y []","count (count x xs) [] == count y []","count (count x xs) [] == count y []","count (count x []) [] == count x []","elem x (x:xs) == sorted []","elem x (x:xs) == sorted []","elem x (x:xs) == sorted []","elem x (insert x xs) == sorted []","elem x (insert x xs) == sorted []","elem x (x:xs) == sorted []","elem x (x:xs) == sorted []","elem x (x:xs) == sorted []","elem x (insert x xs) == sorted []","elem x (insert x xs) == sorted []","elem x (insert x xs) == sorted []","elem x (x:xs) == sorted []","elem x (x:xs) == sorted []","elem x (x:xs) == sorted []","elem x (insert x xs) == sorted []","elem x (insert x xs) == sorted []","elem x (insert x xs) == sorted []","sorted (isort xs) == sorted []","sorted (isort xs) == sorted []","sorted (isort xs) == sorted []"]}}],[37.429672,{"PlainProof":{"prop_name":"sorted (x:[]) == sorted []","lemmas":[]}}],[38.41865,{"FailedProof":{"prop_name":"elem x (insert x xs) == sorted []"}}],[38.418738,{"Discard":{"discarded":["sorted (x:[]) == sorted []","sorted (x:[]) == sorted []","elem x (x:[]) == sorted []","elem x (x:[]) == sorted []","(xs++ys)++zs == xs++(ys++zs)","(xs++ys)++zs == xs++(ys++zs)","(xs++ys)++zs == xs++(ys++zs)","(xs++ys)++zs == xs++(ys++zs)","(xs++ys)++zs == xs++(ys++zs)","(xs++ys)++zs == xs++(ys++zs)","elem x (xs++ys) == elem x (ys++xs)","elem x (xs++ys) == elem x (ys++xs)","elem x (xs++ys) == elem x (ys++xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (xs++ys) == elem x (ys++xs)","elem x (xs++ys) == elem x (ys++xs)","elem x (xs++ys) == elem x (ys++xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (xs++ys) == elem x (ys++xs)","elem x (xs++ys) == elem x (ys++xs)","elem x (xs++ys) == elem x (ys++xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","insert x (insert y xs) == insert y (insert x xs)","insert x (insert y xs) == insert y (insert x xs)","insert x (insert y xs) == insert y (insert x xs)","insert x (insert y xs) == insert y (insert x xs)","insert x (insert y xs) == insert y (insert x xs)","insert x (insert y xs) == insert y (insert x xs)","insert x (insert y xs) == insert y (insert x xs)","insert x (insert y xs) == insert y (insert x xs)","insert x (insert y xs) == insert y (insert x xs)","count x (xs++ys) == count x (ys++xs)","count x (xs++ys) == count x (ys++xs)","count x (xs++ys) == count x (ys++xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (xs++ys) == count x (ys++xs)","count x (xs++ys) == count x (ys++xs)","count x (xs++ys) == count x (ys++xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (xs++ys) == count x (ys++xs)","count x (xs++ys) == count x (ys++xs)","count x (xs++ys) == count x (ys++xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)"]}}],[39.43013,{"InductiveProof":{"prop_name":"elem x (x:[]) == sorted []","lemmas":[]}}],[41.44745,{"FailedProof":{"prop_name":"elem (count x xs) (isort ys) == elem (count x xs) ys"}}],[41.447961,{"Discard":{"discarded":["elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys"]}}],[43.471329,{"FailedProof":{"prop_name":"elem (count x xs) (ys++ys) == elem (count x xs) ys"}}],[45.485396,{"FailedProof":{"prop_name":"count (count x xs) (isort ys) == count (count x xs) ys"}}],[45.485487,{"Discard":{"discarded":["count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","isort (xs++ys) == isort (ys++xs)","isort (xs++ys) == isort (ys++xs)","isort (xs++ys) == isort (ys++xs)","isort (insert x xs) == isort (x:xs)","insert x (isort xs) == isort (x:xs)","isort (insert x xs) == isort (x:xs)","insert x (isort xs) == isort (x:xs)","isort (insert x xs) == isort (x:xs)","insert x (isort xs) == isort (x:xs)","isort (insert x xs) == isort (x:xs)","insert x (isort xs) == isort (x:xs)","isort (insert x xs) == isort (x:xs)","insert x (isort xs) == isort (x:xs)","isort (insert x xs) == isort (x:xs)","insert x (isort xs) == isort (x:xs)","isort (insert x xs) == isort (x:xs)","insert x (isort xs) == isort (x:xs)","isort (insert x xs) == isort (x:xs)","insert x (isort xs) == isort (x:xs)","isort (insert x xs) == isort (x:xs)","insert x (isort xs) == isort (x:xs)","(xs++xs)++ys == xs++(xs++ys)","(xs++xs)++ys == xs++(xs++ys)","(xs++ys)++xs == xs++(ys++xs)","(xs++ys)++xs == xs++(ys++xs)","(xs++ys)++ys == xs++(ys++ys)","(xs++ys)++ys == xs++(ys++ys)","(xs++ys)++xs == xs++(ys++xs)","(xs++xs)++ys == xs++(xs++ys)","(xs++xs)++ys == xs++(xs++ys)","(xs++ys)++xs == xs++(ys++xs)","(xs++ys)++ys == xs++(ys++ys)","(xs++ys)++ys == xs++(ys++ys)","(xs++ys)++xs == xs++(ys++xs)","(xs++ys)++xs == xs++(ys++xs)","(xs++xs)++ys == xs++(xs++ys)","(xs++xs)++ys == xs++(xs++ys)","(xs++ys)++ys == xs++(ys++ys)","(xs++ys)++ys == xs++(ys++ys)","insert x (x:xs) == x:(x:xs)","(x:[])++(x:xs) == x:(x:xs)","insert x (x:xs) == x:(x:xs)","(x:[])++(x:xs) == x:(x:xs)","insert x (x:xs) == x:(x:xs)","(x:[])++(x:xs) == x:(x:xs)","(x:[])++insert x xs == x:insert x xs","(x:[])++insert x xs == x:insert x xs","(x:[])++insert x xs == x:insert x xs","(x:[])++isort xs == x:isort xs","(x:[])++isort xs == x:isort xs","(x:[])++isort xs == x:isort xs","(x:xs)++xs == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","(x:xs)++xs == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","(x:xs)++xs == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","insert x (x:xs) == x:(x:xs)","(x:[])++(x:xs) == x:(x:xs)","insert x (x:xs) == x:(x:xs)","(x:[])++(x:xs) == x:(x:xs)","insert x (x:xs) == x:(x:xs)","(x:[])++(x:xs) == x:(x:xs)","(x:[])++insert x xs == x:insert x xs","(x:[])++insert x xs == x:insert x xs","(x:[])++insert x xs == x:insert x xs","(x:[])++isort xs == x:isort xs","(x:[])++isort xs == x:isort xs","(x:[])++isort xs == x:isort xs","(x:xs)++xs == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","(x:xs)++xs == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","(x:xs)++xs == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","insert x (x:xs) == x:(x:xs)","(x:[])++(x:xs) == x:(x:xs)","insert x (x:xs) == x:(x:xs)","(x:[])++(x:xs) == x:(x:xs)","insert x (x:xs) == x:(x:xs)","(x:[])++(x:xs) == x:(x:xs)","(x:[])++insert x xs == x:insert x xs","(x:[])++insert x xs == x:insert x xs","(x:[])++insert x xs == x:insert x xs","(x:[])++isort xs == x:isort xs","(x:[])++isort xs == x:isort xs","(x:[])++isort xs == x:isort xs","(x:xs)++xs == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","(x:xs)++xs == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","(x:xs)++xs == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","count x (insert x xs) == count x (x:xs)","count x (insert x xs) == count x (x:xs)","count x (insert x xs) == count x (x:xs)","count x (insert x xs) == count x (x:xs)","count x (insert x xs) == count x (x:xs)","count x (insert x xs) == count x (x:xs)","count x (insert x xs) == count x (x:xs)","count x (insert x xs) == count x (x:xs)"]}}],[47.503177,{"FailedProof":{"prop_name":"count x (insert x xs) == count x (x:xs)"}}],[48.513579,{"FailedProof":{"prop_name":"elem (count x xs) (isort xs) == elem (count x xs) xs"}}],[48.513704,{"Discard":{"discarded":["elem (count x xs) (isort xs) == elem (count x xs) xs","elem (count x xs) (xs++xs) == elem (count x xs) xs","elem (count x xs) (isort xs) == elem (count x xs) xs","elem (count x xs) (xs++xs) == elem (count x xs) xs","elem (count x xs) (isort xs) == elem (count x xs) xs","elem (count x xs) (xs++xs) == elem (count x xs) xs","elem (count x xs) (isort xs) == elem (count x xs) xs","elem (count x xs) (xs++xs) == elem (count x xs) xs","elem (count x xs) (isort xs) == elem (count x xs) xs","elem (count x xs) (xs++xs) == elem (count x xs) xs","elem (count x xs) (isort xs) == elem (count x xs) xs","elem (count x xs) (xs++xs) == elem (count x xs) xs","elem (count x xs) (isort xs) == elem (count x xs) xs","elem (count x xs) (xs++xs) == elem (count x xs) xs","elem (count x xs) (isort xs) == elem (count x xs) xs","elem (count x xs) (xs++xs) == elem (count x xs) xs"]}}],[50.528139,{"FailedProof":{"prop_name":"elem (count x xs) (xs++xs) == elem (count x xs) xs"}}],[51.551515,{"FailedProof":{"prop_name":"count (count x xs) (isort xs) == count (count x xs) xs"}}],[51.551599,{"Discard":{"discarded":["count (count x xs) (isort xs) == count (count x xs) xs","count (count x xs) (isort xs) == count (count x xs) xs","count (count x xs) (isort xs) == count (count x xs) xs","count (count x xs) (isort xs) == count (count x xs) xs","count (count x xs) (isort xs) == count (count x xs) xs","count (count x xs) (isort xs) == count (count x xs) xs","count (count x xs) (isort xs) == count (count x xs) xs","count (count x xs) (isort xs) == count (count x xs) xs","(xs++xs)++xs == xs++(xs++xs)","(xs++xs)++xs == xs++(xs++xs)","(xs++xs)++xs == xs++(xs++xs)"]}}],[54.589831,{"FailedProof":{"prop_name":"elem (count x xs) (zs++ys) == elem (count x xs) (ys++zs)"}}],[56.604326,{"FailedProof":{"prop_name":"elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)"}}],[56.604405,{"Discard":{"discarded":["elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (ys++zs) == elem (count x xs) (zs++ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (ys++zs) == elem (count x xs) (zs++ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (ys++zs) == elem (count x xs) (zs++ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (ys++zs) == elem (count x xs) (zs++ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (ys++zs) == elem (count x xs) (zs++ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (ys++zs) == elem (count x xs) (zs++ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (ys++zs) == elem (count x xs) (zs++ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (ys++zs) == elem (count x xs) (zs++ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)"]}}],[59.640103,{"FailedProof":{"prop_name":"count (count x xs) (zs++ys) == count (count x xs) (ys++zs)"}}],[61.660287,{"FailedProof":{"prop_name":"count (count x xs) (insert y ys) == count (count x xs) (y:ys)"}}],[61.660364,{"Discard":{"discarded":["count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (ys++zs) == count (count x xs) (zs++ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (ys++zs) == count (count x xs) (zs++ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (ys++zs) == count (count x xs) (zs++ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (ys++zs) == count (count x xs) (zs++ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (ys++zs) == count (count x xs) (zs++ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (ys++zs) == count (count x xs) (zs++ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (ys++zs) == count (count x xs) (zs++ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (ys++zs) == count (count x xs) (zs++ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","elem (count x xs) (ys++xs) == elem (count x xs) (xs++ys)"]}}],[63.688049,{"FailedProof":{"prop_name":"elem (count x xs) (ys++xs) == elem (count x xs) (xs++ys)"}}],[65.703349,{"FailedProof":{"prop_name":"elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)"}}],[65.703866,{"Discard":{"discarded":["elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)"]}}],[67.729367,{"FailedProof":{"prop_name":"elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)"}}],[69.748312,{"FailedProof":{"prop_name":"elem (count x ys) (ys++xs) == elem (count x ys) (xs++ys)"}}],[69.748824,{"Discard":{"discarded":["elem (count x xs) (ys++xs) == elem (count x xs) (xs++ys)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (xs++ys) == elem (count x xs) (ys++xs)","elem (count x xs) (xs++ys) == elem (count x xs) (ys++xs)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (ys++xs) == elem (count x xs) (xs++ys)","elem (count x xs) (ys++xs) == elem (count x xs) (xs++ys)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (xs++ys) == elem (count x xs) (ys++xs)","elem (count x xs) (ys++xs) == elem (count x xs) (xs++ys)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (xs++ys) == elem (count x xs) (ys++xs)","elem (count x xs) (xs++ys) == elem (count x xs) (ys++xs)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (ys++xs) == elem (count x xs) (xs++ys)","elem (count x xs) (ys++xs) == elem (count x xs) (xs++ys)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (xs++ys) == elem (count x xs) (ys++xs)","elem (count x xs) (ys++xs) == elem (count x xs) (xs++ys)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (xs++ys) == elem (count x xs) (ys++xs)","elem (count x xs) (xs++ys) == elem (count x xs) (ys++xs)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","count (count x xs) (ys++xs) == count (count x xs) (xs++ys)"]}}],[71.789588,{"FailedProof":{"prop_name":"count (count x xs) (ys++xs) == count (count x xs) (xs++ys)"}}],[73.805305,{"FailedProof":{"prop_name":"count (count x xs) (insert x ys) == count (count x xs) (x:ys)"}}],[73.805398,{"Discard":{"discarded":["count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)"]}}],[75.831187,{"FailedProof":{"prop_name":"count (count x xs) (insert y xs) == count (count x xs) (y:xs)"}}],[77.846936,{"FailedProof":{"prop_name":"count (count x ys) (ys++xs) == count (count x ys) (xs++ys)"}}],[77.847032,{"Discard":{"discarded":["count (count x xs) (ys++xs) == count (count x xs) (xs++ys)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (xs++ys) == count (count x xs) (ys++xs)","count (count x xs) (xs++ys) == count (count x xs) (ys++xs)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (ys++xs) == count (count x xs) (xs++ys)","count (count x xs) (ys++xs) == count (count x xs) (xs++ys)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (xs++ys) == count (count x xs) (ys++xs)","count (count x xs) (ys++xs) == count (count x xs) (xs++ys)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (xs++ys) == count (count x xs) (ys++xs)","count (count x xs) (xs++ys) == count (count x xs) (ys++xs)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (ys++xs) == count (count x xs) (xs++ys)","count (count x xs) (ys++xs) == count (count x xs) (xs++ys)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (xs++ys) == count (count x xs) (ys++xs)","count (count x xs) (ys++xs) == count (count x xs) (xs++ys)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (xs++ys) == count (count x xs) (ys++xs)","count (count x xs) (xs++ys) == count (count x xs) (ys++xs)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","elem x (y:[]) == elem y (x:[])","elem x (y:[]) == elem y (x:[])","elem x (y:[]) == elem y (x:[])","(x:[])++(y:[]) == x:(y:[])","(x:[])++(y:[]) == x:(y:[])","(x:[])++(y:[]) == x:(y:[])","(x:[])++(y:[]) == x:(y:[])","(x:[])++(y:[]) == x:(y:[])","(x:[])++(y:[]) == x:(y:[])","insert x (y:[]) == insert y (x:[])","insert x (y:[]) == insert y (x:[])","count x (y:[]) == count y (x:[])","count x (y:[]) == count y (x:[])","count x (y:[]) == count y (x:[])"]}}],[79.867891,{"FailedProof":{"prop_name":"insert y (x:[]) == insert x (y:[])"}}],[80.880395,{"FailedProof":{"prop_name":"elem (count x xs) (insert x xs) == elem (count x xs) (x:xs)"}}],[80.880506,{"Discard":{"discarded":["elem (count x xs) (insert x xs) == elem (count x xs) (x:xs)","elem (count x xs) (insert x xs) == elem (count x xs) (x:xs)","elem (count x xs) (insert x xs) == elem (count x xs) (x:xs)","elem (count x xs) (insert x xs) == elem (count x xs) (x:xs)","elem (count x xs) (insert x xs) == elem (count x xs) (x:xs)","elem (count x xs) (insert x xs) == elem (count x xs) (x:xs)","elem (count x xs) (insert x xs) == elem (count x xs) (x:xs)","elem (count x xs) (insert x xs) == elem (count x xs) (x:xs)","insert (count x xs) [] == count x xs:[]","insert (count x xs) [] == count x xs:[]","insert (count x xs) [] == count x xs:[]","insert (count x xs) [] == count x xs:[]","insert (count x xs) [] == count x xs:[]","insert (count x xs) [] == count x xs:[]","insert (count x xs) [] == count x xs:[]","insert (count x xs) [] == count x xs:[]","insert (count x xs) [] == count x xs:[]","count (count x xs) (insert x xs) == count (count x xs) (x:xs)","count (count x xs) (insert x xs) == count (count x xs) (x:xs)","count (count x xs) (insert x xs) == count (count x xs) (x:xs)","count (count x xs) (insert x xs) == count (count x xs) (x:xs)","count (count x xs) (insert x xs) == count (count x xs) (x:xs)","count (count x xs) (insert x xs) == count (count x xs) (x:xs)","count (count x xs) (insert x xs) == count (count x xs) (x:xs)","count (count x xs) (insert x xs) == count (count x xs) (x:xs)"]}}],[82.898894,{"FailedProof":{"prop_name":"count (count x xs) (insert x xs) == count (count x xs) (x:xs)"}}],[83.917101,{"FailedProof":{"prop_name":"elem (count x []) (isort xs) == elem (count x []) xs"}}],[83.917672,{"Discard":{"discarded":["elem (count x []) (isort xs) == elem (count x []) xs","elem (count x []) (xs++xs) == elem (count x []) xs","elem (count x []) (isort xs) == elem (count x []) xs","elem (count x []) (xs++xs) == elem (count x []) xs","insert (count x []) xs == count x []:xs","insert (count x []) xs == count x []:xs","insert (count x []) xs == count x []:xs"]}}],[85.956482,{"FailedProof":{"prop_name":"elem (count x []) (xs++xs) == elem (count x []) xs"}}],[86.967081,{"FailedProof":{"prop_name":"count (count x []) (isort xs) == count (count x []) xs"}}],[86.967152,{"Discard":{"discarded":["count (count x []) (isort xs) == count (count x []) xs","count (count x []) (isort xs) == count (count x []) xs","insert x (x:[]) == x:(x:[])","(x:[])++(x:[]) == x:(x:[])","insert x (x:[]) == x:(x:[])","(x:[])++(x:[]) == x:(x:[])","insert x (x:[]) == x:(x:[])","(x:[])++(x:[]) == x:(x:[])","count x (x:[]) == count y (y:[])","count x (x:[]) == count y (y:[])","elem (count x []) (xs++ys) == elem (count x []) (ys++xs)","elem (count x []) (xs++ys) == elem (count x []) (ys++xs)"]}}],[89.019543,{"FailedProof":{"prop_name":"elem (count x []) (ys++xs) == elem (count x []) (xs++ys)"}}],[91.060611,{"FailedProof":{"prop_name":"elem (count x []) (insert y xs) == elem (count x []) (y:xs)"}}],[91.060676,{"Discard":{"discarded":["elem (count x []) (insert y xs) == elem (count x []) (y:xs)","elem (count x []) (insert y xs) == elem (count x []) (y:xs)","elem (count x []) (insert y xs) == elem (count x []) (y:xs)","elem (count x []) (insert y xs) == elem (count x []) (y:xs)","elem (count x []) (insert y xs) == elem (count x []) (y:xs)","insert (count x []) (xs++ys) == count x []:(xs++ys)","insert (count x []) (xs++ys) == count x []:(xs++ys)","insert (count x []) (xs++ys) == count x []:(xs++ys)","insert (count x []) (xs++ys) == count x []:(xs++ys)","insert (count x []) (xs++ys) == count x []:(xs++ys)","insert (count x []) (xs++ys) == count x []:(xs++ys)","insert (count x []) (y:xs) == count x []:(y:xs)","insert (count x []) (y:xs) == count x []:(y:xs)","insert (count x []) (y:xs) == count x []:(y:xs)","insert (count x []) (y:xs) == count x []:(y:xs)","insert (count x []) (y:xs) == count x []:(y:xs)","insert (count x []) (y:xs) == count x []:(y:xs)","insert (count x []) (insert y xs) == count x []:insert y xs","insert (count x []) (insert y xs) == count x []:insert y xs","insert (count x []) (insert y xs) == count x []:insert y xs","insert (count x []) (insert y xs) == count x []:insert y xs","insert (count x []) (insert y xs) == count x []:insert y xs","insert (count x []) (insert y xs) == count x []:insert y xs","count (count x []) (xs++ys) == count (count x []) (ys++xs)","count (count x []) (xs++ys) == count (count x []) (ys++xs)"]}}],[93.108689,{"FailedProof":{"prop_name":"count (count x []) (ys++xs) == count (count x []) (xs++ys)"}}],[95.150172,{"FailedProof":{"prop_name":"count (count x []) (insert y xs) == count (count x []) (y:xs)"}}],[95.15025,{"Discard":{"discarded":["count (count x []) (insert y xs) == count (count x []) (y:xs)","count (count x []) (insert y xs) == count (count x []) (y:xs)","count (count x []) (insert y xs) == count (count x []) (y:xs)","count (count x []) (insert y xs) == count (count x []) (y:xs)","count (count x []) (insert y xs) == count (count x []) (y:xs)","elem (count x []) (insert x xs) == elem (count x []) (x:xs)","elem (count x []) (insert x xs) == elem (count x []) (x:xs)","insert (count x []) (x:xs) == count x []:(x:xs)","insert (count x []) (x:xs) == count x []:(x:xs)","insert (count x []) (x:xs) == count x []:(x:xs)","insert (count x []) (insert x xs) == count x []:insert x xs","insert (count x []) (insert x xs) == count x []:insert x xs","insert (count x []) (insert x xs) == count x []:insert x xs","insert (count x []) (isort xs) == count x []:isort xs","insert (count x []) (isort xs) == count x []:isort xs","insert (count x []) (isort xs) == count x []:isort xs","insert (count x []) (xs++xs) == count x []:(xs++xs)","insert (count x []) (xs++xs) == count x []:(xs++xs)","insert (count x []) (xs++xs) == count x []:(xs++xs)"]}}],[97.16592,{"FailedProof":{"prop_name":"elem (count x []) (insert x xs) == elem (count x []) (x:xs)"}}],[98.179024,{"FailedProof":{"prop_name":"count (count x []) (insert x xs) == count (count x []) (x:xs)"}}],[98.179588,{"Discard":{"discarded":["count (count x []) (insert x xs) == count (count x []) (x:xs)","count (count x []) (insert x xs) == count (count x []) (x:xs)","insert (count x []) [] == count x []:[]","insert (count x []) (y:[]) == count x []:(y:[])","insert (count x []) (y:[]) == count x []:(y:[])","insert (count x []) (x:[]) == count x []:(x:[])"]}}],[100.204293,{"FailedProof":{"prop_name":"elem x (ys++xs) == elem x (xs++ys)"}}],[102.228168,{"FailedProof":{"prop_name":"elem x (insert y xs) == elem x (y:xs)"}}],[104.250255,{"FailedProof":{"prop_name":"insert y (insert x xs) == insert x (insert y xs)"}}],[106.26977,{"FailedProof":{"prop_name":"count x (ys++xs) == count x (xs++ys)"}}],[108.294882,{"FailedProof":{"prop_name":"count x (insert y xs) == count x (y:xs)"}}],[110.304491,{"FailedProof":{"prop_name":"sorted (insert x xs) == sorted xs"}}],[112.330758,{"FailedProof":{"prop_name":"isort (ys++xs) == isort (xs++ys)"}}],[113.340331,{"FailedProof":{"prop_name":"isort (insert x xs) == isort (x:xs)"}}],[115.356941,{"FailedProof":{"prop_name":"elem x (x:xs) == sorted []"}}],[116.369819,{"FailedProof":{"prop_name":"elem x (isort xs) == elem x xs"}}],[118.3841,{"FailedProof":{"prop_name":"elem x (xs++xs) == elem x xs"}}],[119.395718,{"FailedProof":{"prop_name":"count x (isort xs) == count x xs"}}],[120.410942,{"FailedProof":{"prop_name":"sorted (isort xs) == sorted []"}}],[121.421561,{"FailedProof":{"prop_name":"isort (isort xs) == isort xs"}}],[123.442333,{"FailedProof":{"prop_name":"elem y (x:[]) == elem x (y:[])"}}],[124.449369,{"FailedProof":{"prop_name":"count y (x:[]) == count x (y:[])"}}],[126.554953,{"FailedProof":{"prop_name":"count y (y:[]) == count x (x:[])"}}],[127.568569,{"FailedProof":{"prop_name":"elem x (insert x xs) == sorted []"}}],[129.587586,{"FailedProof":{"prop_name":"elem (count x xs) (isort ys) == elem (count x xs) ys"}}],[131.602702,{"FailedProof":{"prop_name":"elem (count x xs) (ys++ys) == elem (count x xs) ys"}}],[133.621772,{"FailedProof":{"prop_name":"count (count x xs) (isort ys) == count (count x xs) ys"}}],[135.62651,{"FailedProof":{"prop_name":"count x (insert x xs) == count x (x:xs)"}}],[137.639597,{"FailedProof":{"prop_name":"elem (count x xs) (isort xs) == elem (count x xs) xs"}}],[138.654957,{"FailedProof":{"prop_name":"elem (count x xs) (xs++xs) == elem (count x xs) xs"}}],[140.672607,{"FailedProof":{"prop_name":"count (count x xs) (isort xs) == count (count x xs) xs"}}],[142.77521,{"FailedProof":{"prop_name":"elem (count x xs) (zs++ys) == elem (count x xs) (ys++zs)"}}],[145.811131,{"FailedProof":{"prop_name":"elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)"}}],[147.83427,{"FailedProof":{"prop_name":"count (count x xs) (zs++ys) == count (count x xs) (ys++zs)"}}],[150.86262,{"FailedProof":{"prop_name":"count (count x xs) (insert y ys) == count (count x xs) (y:ys)"}}],[152.880963,{"FailedProof":{"prop_name":"elem (count x xs) (ys++xs) == elem (count x xs) (xs++ys)"}}],[154.902378,{"FailedProof":{"prop_name":"elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)"}}],[156.913932,{"FailedProof":{"prop_name":"elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)"}}],[158.940353,{"FailedProof":{"prop_name":"elem (count x ys) (ys++xs) == elem (count x ys) (xs++ys)"}}],[160.961551,{"FailedProof":{"prop_name":"count (count x xs) (ys++xs) == count (count x xs) (xs++ys)"}}],[162.982115,{"FailedProof":{"prop_name":"count (count x xs) (insert x ys) == count (count x xs) (x:ys)"}}],[165.000947,{"FailedProof":{"prop_name":"count (count x xs) (insert y xs) == count (count x xs) (y:xs)"}}],[167.02705,{"FailedProof":{"prop_name":"count (count x ys) (ys++xs) == count (count x ys) (xs++ys)"}}],[169.039902,{"FailedProof":{"prop_name":"insert y (x:[]) == insert x (y:[])"}}],[171.073003,{"FailedProof":{"prop_name":"elem (count x xs) (insert x xs) == elem (count x xs) (x:xs)"}}],[172.08532,{"FailedProof":{"prop_name":"count (count x xs) (insert x xs) == count (count x xs) (x:xs)"}}],[174.107477,{"FailedProof":{"prop_name":"elem (count x []) (isort xs) == elem (count x []) xs"}}],[175.12971,{"FailedProof":{"prop_name":"elem (count x []) (xs++xs) == elem (count x []) xs"}}],[177.15418,{"FailedProof":{"prop_name":"count (count x []) (isort xs) == count (count x []) xs"}}],[179.197677,{"FailedProof":{"prop_name":"elem (count x []) (ys++xs) == elem (count x []) (xs++ys)"}}],[181.24321,{"FailedProof":{"prop_name":"elem (count x []) (insert y xs) == elem (count x []) (y:xs)"}}],[183.283666,{"FailedProof":{"prop_name":"count (count x []) (ys++xs) == count (count x []) (xs++ys)"}}],[185.32936,{"FailedProof":{"prop_name":"count (count x []) (insert y xs) == count (count x []) (y:xs)"}}],[187.309842,{"FailedProof":{"prop_name":"elem (count x []) (insert x xs) == elem (count x []) (x:xs)"}}],[189.32239,{"FailedProof":{"prop_name":"count (count x []) (insert x xs) == count (count x []) (x:xs)"}}],[189.322395,{"StartingUserLemmas":[]}],[190.354108,{"FailedProof":{"prop_name":"prop_T15"}}],[191.363866,{"FailedProof":{"prop_name":"prop_T1"}}],[194.383383,{"FailedProof":{"prop_name":"prop_T9"}}],[196.406003,{"FailedProof":{"prop_name":"prop_T8"}}],[196.979037,{"InductiveProof":{"prop_name":"prop_T39","lemmas":[]}}],[198.890264,{"InductiveProof":{"prop_name":"prop_T38","lemmas":[]}}],[200.02585,{"InductiveProof":{"prop_name":"prop_T37","lemmas":[]}}],[201.960845,{"InductiveProof":{"prop_name":"prop_T36","lemmas":[]}}],[203.047886,{"FailedProof":{"prop_name":"prop_T24"}}],[204.052893,{"FailedProof":{"prop_name":"prop_T16"}}],[205.991089,{"FailedProof":{"prop_name":"prop_T26"}}],[206.997351,{"FailedProof":{"prop_name":"prop_T13"}}],[208.497279,{"InductiveProof":{"prop_name":"prop_T47","lemmas":[]}}],[209.535558,{"InductiveProof":{"prop_name":"prop_T46","lemmas":[]}}],[211.090271,{"FailedProof":{"prop_name":"prop_T45"}}],[213.108703,{"FailedProof":{"prop_name":"prop_T44"}}],[214.579319,{"FailedProof":{"prop_name":"prop_T50"}}],[216.132175,{"FailedProof":{"prop_name":"prop_T49"}}],[217.145099,{"FailedProof":{"prop_name":"prop_T48"}}],[218.158845,{"FailedProof":{"prop_name":"prop_T4"}}],[219.612849,{"FailedProof":{"prop_name":"prop_T3"}}],[221.183358,{"FailedProof":{"prop_name":"prop_T25"}}],[222.644591,{"FailedProof":{"prop_name":"prop_T23"}}],[224.215752,{"FailedProof":{"prop_name":"prop_T22"}}],[225.227062,{"FailedProof":{"prop_name":"prop_T20"}}],[226.680078,{"FailedProof":{"prop_name":"prop_T2"}}],[228.251761,{"FailedProof":{"prop_name":"prop_T34"}}],[229.698757,{"FailedProof":{"prop_name":"prop_T35"}}],[230.704029,{"FailedProof":{"prop_name":"prop_T33"}}],[232.283559,{"FailedProof":{"prop_name":"prop_T7"}}],[233.296628,{"FailedProof":{"prop_name":"prop_T31"}}],[234.725928,{"FailedProof":{"prop_name":"prop_T6"}}],[235.738474,{"FailedProof":{"prop_name":"prop_T5"}}],[236.751983,{"FailedProof":{"prop_name":"prop_T30"}}],[237.764944,{"FailedProof":{"prop_name":"prop_T29"}}],[238.777776,{"FailedProof":{"prop_name":"prop_T27"}}],[240.335542,{"FailedProof":{"prop_name":"prop_T19"}}],[241.822169,{"FailedProof":{"prop_name":"prop_T17"}}],[242.827864,{"InductiveProof":{"prop_name":"prop_T12","lemmas":[]}}],[243.840618,{"FailedProof":{"prop_name":"prop_T10"}}],[245.393707,{"FailedProof":{"prop_name":"prop_G6"}}],[246.399272,{"InductiveProof":{"prop_name":"prop_G5","lemmas":[]}}],[247.411888,{"FailedProof":{"prop_name":"prop_T32"}}],[248.417025,{"InductiveProof":{"prop_name":"prop_G9","lemmas":[]}}],[249.009457,{"InductiveProof":{"prop_name":"prop_T43","lemmas":[]}}],[251.020297,{"FailedProof":{"prop_name":"prop_T42"}}],[252.492044,{"FailedProof":{"prop_name":"prop_T41"}}],[253.497261,{"InductiveProof":{"prop_name":"prop_T40","lemmas":[]}}],[254.508192,{"FailedProof":{"prop_name":"prop_T14"}}],[254.508227,{"Finished":{"qs_proved":["xs++[] == xs","(xs++ys)++zs == xs++(ys++zs)","insert x (x:xs) == x:(x:xs)","elem x (x:[]) == sorted []"],"proved":["prop_T39","prop_T38","prop_T37","prop_T36","prop_T47","prop_T46","prop_T12","prop_G5","prop_G9","prop_T43","prop_T40"],"unproved":["prop_T15","prop_T1","prop_T9","prop_T8","prop_T24","prop_T16","prop_T26","prop_T13","prop_T45","prop_T44","prop_T50","prop_T49","prop_T48","prop_T4","prop_T3","prop_T25","prop_T23","prop_T22","prop_T20","prop_T2","prop_T34","prop_T35","prop_T33","prop_T7","prop_T31","prop_T6","prop_T5","prop_T30","prop_T29","prop_T27","prop_T19","prop_T17","prop_T10","prop_G6","prop_T32","prop_T42","prop_T41","prop_T14"],"qs_unproved":["elem x (xs++ys) == elem x (ys++xs)","elem x (insert y xs) == elem x (y:xs)","insert x (insert y xs) == insert y (insert x xs)","count x (xs++ys) == count x (ys++xs)","count x (insert y xs) == count x (y:xs)","sorted (insert x xs) == sorted xs","isort (xs++ys) == isort (ys++xs)","isort (insert x xs) == isort (x:xs)","elem x (x:xs) == sorted []","elem x (isort xs) == elem x xs","elem x (xs++xs) == elem x xs","count x (isort xs) == count x xs","sorted (isort xs) == sorted []","isort (isort xs) == isort xs","elem x (y:[]) == elem y (x:[])","count x (y:[]) == count y (x:[])","count x (x:[]) == count y (y:[])","elem x (insert x xs) == sorted []","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count x (insert x xs) == count x (x:xs)","elem (count x xs) (isort xs) == elem (count x xs) xs","elem (count x xs) (xs++xs) == elem (count x xs) xs","count (count x xs) (isort xs) == count (count x xs) xs","elem (count x xs) (ys++zs) == elem (count x xs) (zs++ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","count (count x xs) (ys++zs) == count (count x xs) (zs++ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","elem (count x xs) (ys++xs) == elem (count x xs) (xs++ys)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (xs++ys) == elem (count x xs) (ys++xs)","count (count x xs) (ys++xs) == count (count x xs) (xs++ys)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (xs++ys) == count (count x xs) (ys++xs)","insert x (y:[]) == insert y (x:[])","elem (count x xs) (insert x xs) == elem (count x xs) (x:xs)","count (count x xs) (insert x xs) == count (count x xs) (x:xs)","elem (count x []) (isort xs) == elem (count x []) xs","elem (count x []) (xs++xs) == elem (count x []) xs","count (count x []) (isort xs) == count (count x []) xs","elem (count x []) (xs++ys) == elem (count x []) (ys++xs)","elem (count x []) (insert y xs) == elem (count x []) (y:xs)","count (count x []) (xs++ys) == count (count x []) (ys++xs)","count (count x []) (insert y xs) == count (count x []) (y:xs)","elem (count x []) (insert x xs) == elem (count x []) (x:xs)","count (count x []) (insert x xs) == count (count x []) (x:xs)"]}}]]