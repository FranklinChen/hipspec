[[2.0e-6,{"Started":[]}],[8.344078,{"FileProcessed":[]}],[9.050877,{"QuickSpecDone":{"classes":1395,"eqs":565}}],[11.404796,{"FailedProof":{"prop_name":"y+x == x+y"}}],[12.407673,{"FailedProof":{"prop_name":"x+x == double x"}}],[13.413269,{"InductiveProof":{"prop_name":"xs++[] == xs","lemmas":[]}}],[13.426509,{"InductiveProof":{"prop_name":"x+Z == x","lemmas":[]}}],[13.466597,{"PlainProof":{"prop_name":"[]++xs == xs","lemmas":[]}}],[13.470688,{"PlainProof":{"prop_name":"length [] == Z","lemmas":[]}}],[13.514898,{"PlainProof":{"prop_name":"half Z == Z","lemmas":[]}}],[15.588907,{"FailedProof":{"prop_name":"y+(x+z) == x+(y+z)"}}],[16.656817,{"PlainProof":{"prop_name":"(x:xs)++ys == x:(xs++ys)","lemmas":[]}}],[17.629461,{"InductiveProof":{"prop_name":"(xs++ys)++zs == xs++(ys++zs)","lemmas":[]}}],[18.821306,{"PlainProof":{"prop_name":"length (y:xs) == length (x:xs)","lemmas":[]}}],[19.818698,{"FailedProof":{"prop_name":"length (ys++xs) == length (xs++ys)"}}],[20.920737,{"InductiveProof":{"prop_name":"x+S y == S (x+y)","lemmas":[]}}],[21.908402,{"InductiveProof":{"prop_name":"even (double x) == even Z","lemmas":[]}}],[21.985194,{"PlainProof":{"prop_name":"S (length xs) == length (x:xs)","lemmas":[]}}],[22.996563,{"FailedProof":{"prop_name":"double (length xs) == length (xs++xs)"}}],[24.030792,{"InductiveProof":{"prop_name":"half (double x) == x","lemmas":[]}}],[25.045282,{"InductiveProof":{"prop_name":"length xs+length ys == length (xs++ys)","lemmas":[]}}],[25.111486,{"Discard":{"discarded":["xs++[] == xs","[]++xs == xs","xs++[] == xs","[]++xs == xs","xs++[] == xs","[]++xs == xs","x+Z == x"]}}],[25.125335,{"PlainProof":{"prop_name":"half (S Z) == Z","lemmas":[]}}],[25.128659,{"PlainProof":{"prop_name":"Z+x == x","lemmas":[]}}],[25.186433,{"Candidates":{"candidates":["x+y == y+x","x+(y+z) == y+(x+z)"]}}],[26.199092,{"InductiveProof":{"prop_name":"y+x == x+y","lemmas":[]}}],[27.223602,{"InductiveProof":{"prop_name":"y+(x+z) == x+(y+z)","lemmas":[]}}],[27.2517,{"Discard":{"discarded":["half (double x) == x","x+Z == x","Z+x == x","half (double x) == x","x+Z == x","Z+x == x","half (double x) == x","[]++[] == []","length [] == Z","half Z == Z","Z+Z == Z","half (S Z) == Z","[]++(xs++ys) == xs++ys","(xs++ys)++[] == xs++ys","[]++(xs++ys) == xs++ys","(xs++ys)++[] == xs++ys","[]++(xs++ys) == xs++ys","(xs++ys)++[] == xs++ys","[]++(xs++ys) == xs++ys","(xs++ys)++[] == xs++ys","[]++(xs++ys) == xs++ys","(xs++ys)++[] == xs++ys","[]++(xs++ys) == xs++ys","(xs++ys)++[] == xs++ys","[]++(x:xs) == x:xs","(x:xs)++[] == x:xs","(x:[])++xs == x:xs","[]++(x:xs) == x:xs","(x:xs)++[] == x:xs","(x:[])++xs == x:xs","[]++(x:xs) == x:xs","(x:xs)++[] == x:xs","(x:[])++xs == x:xs","[]++(x:xs) == x:xs","(x:xs)++[] == x:xs","(x:[])++xs == x:xs","[]++(x:xs) == x:xs","(x:xs)++[] == x:xs","(x:[])++xs == x:xs","[]++(x:xs) == x:xs","(x:xs)++[] == x:xs","(x:[])++xs == x:xs","[]++(x:xs) == x:xs","(x:xs)++[] == x:xs","(x:[])++xs == x:xs","[]++(x:xs) == x:xs","(x:xs)++[] == x:xs","(x:[])++xs == x:xs","[]++(x:xs) == x:xs","(x:xs)++[] == x:xs","(x:[])++xs == x:xs","x+y == y+x","Z+(x+y) == x+y","(x+y)+Z == x+y","x+y == y+x","Z+(x+y) == x+y","(x+y)+Z == x+y","x+y == y+x","Z+(x+y) == x+y","(x+y)+Z == x+y","Z+length xs == length xs","length xs+Z == length xs","Z+length xs == length xs","length xs+Z == length xs","Z+length xs == length xs","length xs+Z == length xs","x+S Z == S x","Z+S x == S x","S x+Z == S x","S Z+x == S x","x+S Z == S x","Z+S x == S x","S x+Z == S x","S Z+x == S x","x+S Z == S x","Z+S x == S x","S x+Z == S x","S Z+x == S x","x+x == double x","Z+double x == double x","double x+Z == double x","x+x == double x","Z+double x == double x","double x+Z == double x","x+x == double x","Z+double x == double x","double x+Z == double x","Z+half x == half x","half x+Z == half x","Z+half x == half x","half x+Z == half x","Z+half x == half x","half x+Z == half x","[]++(xs++xs) == xs++xs","(xs++xs)++[] == xs++xs","[]++(xs++xs) == xs++xs","(xs++xs)++[] == xs++xs","[]++(xs++xs) == xs++xs","(xs++xs)++[] == xs++xs","[]++(x:[]) == x:[]","(x:[])++[] == x:[]","[]++(x:[]) == x:[]","(x:[])++[] == x:[]","[]++(x:[]) == x:[]","(x:[])++[] == x:[]","[]++(Z:xs) == Z:xs","(Z:xs)++[] == Z:xs","(Z:[])++xs == Z:xs","[]++(Z:xs) == Z:xs","(Z:xs)++[] == Z:xs","(Z:[])++xs == Z:xs","[]++(Z:xs) == Z:xs","(Z:xs)++[] == Z:xs","(Z:[])++xs == Z:xs","even (double x) == even Z","even (double x) == even Z","even (double x) == even Z","length (x:[]) == S Z","length (x:[]) == S Z","length (x:[]) == S Z","length (Z:[]) == S Z","Z+S Z == S Z","S Z+Z == S Z","[]++(Z:[]) == Z:[]","(Z:[])++[] == Z:[]","(xs++ys)++zs == xs++(ys++zs)","(xs++ys)++zs == xs++(ys++zs)","(xs++ys)++zs == xs++(ys++zs)","(xs++ys)++zs == xs++(ys++zs)","(xs++ys)++zs == xs++(ys++zs)","(xs++ys)++zs == xs++(ys++zs)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","x+(y+z) == y+(x+z)","x+(y+z) == y+(z+x)","(x+y)+z == x+(y+z)","(x+y)+z == x+(z+y)","(x+y)+z == z+(x+y)","length (xs++ys) == length (ys++xs)","length xs+length ys == length (xs++ys)","length xs+length ys == length (ys++xs)","length (xs++ys) == length (ys++xs)","length xs+length ys == length (xs++ys)","length xs+length ys == length (ys++xs)","length (xs++ys) == length (ys++xs)","length xs+length ys == length (xs++ys)","length xs+length ys == length (ys++xs)","length (x:xs) == length (y:xs)","length (x:xs) == length (y:xs)","S (length xs) == length (x:xs)","length (Z:xs) == length (x:xs)","length xs+S Z == length (x:xs)","S Z+length xs == length (x:xs)","length (x:xs) == length (y:xs)","length (x:xs) == length (y:xs)","S (length xs) == length (x:xs)","length (Z:xs) == length (x:xs)","length xs+S Z == length (x:xs)","S Z+length xs == length (x:xs)","length (x:xs) == length (y:xs)","length (x:xs) == length (y:xs)","S (length xs) == length (x:xs)","length (Z:xs) == length (x:xs)","length xs+S Z == length (x:xs)","S Z+length xs == length (x:xs)","x+S y == S (x+y)","x+S y == S (y+x)","S x+y == S (x+y)","S x+y == S (y+x)","(x+y)+S Z == S (x+y)","S Z+(x+y) == S (x+y)","x+S y == S (x+y)","x+S y == S (y+x)","S x+y == S (x+y)","S x+y == S (y+x)","(x+y)+S Z == S (x+y)","S Z+(x+y) == S (x+y)","x+S y == S (x+y)","x+S y == S (y+x)","S x+y == S (x+y)","S x+y == S (y+x)","(x+y)+S Z == S (x+y)","S Z+(x+y) == S (x+y)"]}}],[27.27342,{"PlainProof":{"prop_name":"double Z == Z","lemmas":[]}}],[29.575698,{"FailedProof":{"prop_name":"(x+y)+(x+y) == double (x+y)"}}],[29.618003,{"Candidates":{"candidates":["x+x == double x","double (length xs) == length (xs++xs)","(x+y)+(x+y) == double (x+y)"]}}],[30.950944,{"InductiveProof":{"prop_name":"x+x == double x","lemmas":[]}}],[30.989634,{"InductiveProof":{"prop_name":"double (length xs) == length (xs++xs)","lemmas":[]}}],[30.992098,{"Discard":{"discarded":["(x+y)+(x+y) == double (x+y)","double x+double y == double (x+y)","double x+double y == double (y+x)","(x+y)+(x+y) == double (x+y)","double x+double y == double (x+y)","double x+double y == double (y+x)","(x+y)+(x+y) == double (x+y)","double x+double y == double (x+y)","double x+double y == double (y+x)","(xs++xs)++ys == xs++(xs++ys)","(xs++xs)++ys == xs++(xs++ys)","(xs++ys)++xs == xs++(ys++xs)","(xs++ys)++xs == xs++(ys++xs)","(xs++ys)++ys == xs++(ys++ys)","(xs++ys)++ys == xs++(ys++ys)","(xs++ys)++xs == xs++(ys++xs)","(xs++xs)++ys == xs++(xs++ys)","(xs++xs)++ys == xs++(xs++ys)","(xs++ys)++xs == xs++(ys++xs)","(xs++ys)++ys == xs++(ys++ys)","(xs++ys)++ys == xs++(ys++ys)","(xs++ys)++xs == xs++(ys++xs)","(xs++ys)++xs == xs++(ys++xs)","(xs++xs)++ys == xs++(xs++ys)","(xs++xs)++ys == xs++(xs++ys)","(xs++ys)++ys == xs++(ys++ys)","(xs++ys)++ys == xs++(ys++ys)","(x:[])++(x:xs) == x:(x:xs)","(x:[])++(x:xs) == x:(x:xs)","(x:[])++(x:xs) == x:(x:xs)","(x:xs)++xs == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","(x:xs)++xs == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","(x:xs)++xs == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","(x:[])++(x:xs) == x:(x:xs)","(x:[])++(x:xs) == x:(x:xs)","(x:[])++(x:xs) == x:(x:xs)","(x:xs)++xs == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","(x:xs)++xs == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","(x:xs)++xs == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","(x:[])++(x:xs) == x:(x:xs)","(x:[])++(x:xs) == x:(x:xs)","(x:[])++(x:xs) == x:(x:xs)","(x:xs)++xs == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","(x:xs)++xs == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","(x:xs)++xs == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","x+double y == y+(y+x)","(x+y)+x == x+(x+y)","double x+y == x+(x+y)","x+double y == y+(y+x)","(x+y)+x == x+(x+y)","double x+y == x+(x+y)","length xs+x == x+length xs","length xs+x == x+length xs","length xs+x == x+length xs","x+(y+x) == y+double x","(x+y)+y == x+double y","double x+y == y+double x","x+(y+x) == y+double x","(x+y)+y == x+double y","double x+y == y+double x","half x+y == y+half x","half x+y == y+half x","x+double y == y+(y+x)","(x+y)+x == x+(x+y)","double x+y == x+(x+y)","length xs+x == x+length xs","length xs+x == x+length xs","length xs+x == x+length xs","x+(y+x) == y+double x","(x+y)+y == x+double y","double x+y == y+double x","half x+y == y+half x","half x+y == y+half x","length xs+x == x+length xs","length xs+x == x+length xs","length xs+x == x+length xs","half x+y == y+half x","half x+y == y+half x","double (length xs) == length (xs++xs)","length xs+length xs == length (xs++xs)","double (length xs) == length (xs++xs)","length xs+length xs == length (xs++xs)","double (length xs) == length (xs++xs)","length xs+length xs == length (xs++xs)","S x+S Z == S (S x)","S Z+S x == S (S x)","S x+S Z == S (S x)","S Z+S x == S (S x)","S x+S Z == S (S x)","S Z+S x == S (S x)","x+S x == S (double x)","S x+x == S (double x)","double x+S Z == S (double x)","S Z+double x == S (double x)","x+S x == S (double x)","S x+x == S (double x)","double x+S Z == S (double x)","S Z+double x == S (double x)","x+S x == S (double x)","S x+x == S (double x)","double x+S Z == S (double x)","S Z+double x == S (double x)","half x+S Z == S (half x)","S Z+half x == S (half x)","half x+S Z == S (half x)","S Z+half x == S (half x)","half x+S Z == S (half x)","S Z+half x == S (half x)","S x+S x == double (S x)","S x+S x == double (S x)","S x+S x == double (S x)","double x+double x == double (double x)","double x+double x == double (double x)","double x+double x == double (double x)","half x+half x == double (half x)","half x+half x == double (half x)","half x+half x == double (half x)","(xs++xs)++xs == xs++(xs++xs)","(xs++xs)++xs == xs++(xs++xs)","(xs++xs)++xs == xs++(xs++xs)","double x+x == x+double x","half x+x == x+half x","double x+x == x+double x","half x+x == x+half x","double x+x == x+double x","half x+x == x+half x","(x+y)+(x+z) == (x+z)+(x+y)","(x+y)+double z == (z+x)+(z+y)","double x+(y+z) == (x+y)+(x+z)","(x+y)+double z == (x+z)+(z+y)","(x+y)+(z+x) == (z+x)+(x+y)","double x+(y+z) == (y+x)+(x+z)","length xs+(x+y) == (x+y)+length xs","length xs+(x+y) == (x+y)+length xs","length xs+(x+y) == (x+y)+length xs","(x+y)+S z == (x+z)+S y","(x+y)+S z == (z+x)+S y","S x+(y+z) == (x+y)+S z","S x+(y+z) == (y+x)+S z","S x+(y+z) == (y+z)+S x","(x+y)+(z+y) == (x+z)+double y","(x+y)+(z+y) == (z+x)+double y","double x+(y+z) == (y+z)+double x","half x+(y+z) == (y+z)+half x","length xs+(x+y) == (x+y)+length xs","length xs+(x+y) == (x+y)+length xs","length xs+(x+y) == (x+y)+length xs","half x+(y+z) == (y+z)+half x","length xs+(x+y) == (x+y)+length xs","length xs+(x+y) == (x+y)+length xs","length xs+(x+y) == (x+y)+length xs","half x+(y+z) == (y+z)+half x","(x:[])++(y:[]) == x:(y:[])","(x:[])++(y:[]) == x:(y:[])","(x:[])++(Z:xs) == x:(Z:xs)","(x:[])++(Z:xs) == x:(Z:xs)","(x:[])++(Z:xs) == x:(Z:xs)","(x:[])++(y:[]) == x:(y:[])","(x:[])++(y:[]) == x:(y:[])","(x:[])++(Z:xs) == x:(Z:xs)","(x:[])++(Z:xs) == x:(Z:xs)","(x:[])++(Z:xs) == x:(Z:xs)","(x:[])++(y:[]) == x:(y:[])","(x:[])++(y:[]) == x:(y:[])","(x:[])++(Z:xs) == x:(Z:xs)","(x:[])++(Z:xs) == x:(Z:xs)","(x:[])++(Z:xs) == x:(Z:xs)","(Z:xs)++ys == Z:(xs++ys)","(Z:[])++(xs++ys) == Z:(xs++ys)","(Z:xs)++ys == Z:(xs++ys)","(Z:[])++(xs++ys) == Z:(xs++ys)","(Z:xs)++ys == Z:(xs++ys)","(Z:[])++(xs++ys) == Z:(xs++ys)","(Z:xs)++ys == Z:(xs++ys)","(Z:[])++(xs++ys) == Z:(xs++ys)","(Z:xs)++ys == Z:(xs++ys)","(Z:[])++(xs++ys) == Z:(xs++ys)","(Z:xs)++ys == Z:(xs++ys)","(Z:[])++(xs++ys) == Z:(xs++ys)","(Z:[])++(x:xs) == Z:(x:xs)","(Z:[])++(x:xs) == Z:(x:xs)","(Z:[])++(x:xs) == Z:(x:xs)","(Z:[])++(x:xs) == Z:(x:xs)","(Z:[])++(x:xs) == Z:(x:xs)","(Z:[])++(x:xs) == Z:(x:xs)","(Z:[])++(x:xs) == Z:(x:xs)","(Z:[])++(x:xs) == Z:(x:xs)","(Z:[])++(x:xs) == Z:(x:xs)","S x+(x+y) == (x+y)+S x","S x+double y == (y+x)+S y","double x+S y == (x+y)+S x","S x+double y == (x+y)+S y","S x+(y+x) == (y+x)+S x","double x+S y == (y+x)+S x","double x+(x+y) == (x+y)+double x","double x+(y+x) == (y+x)+double x","half x+(x+y) == (x+y)+half x","half x+(y+x) == (y+x)+half x","S x+(x+y) == (x+y)+S x","S x+double y == (y+x)+S y","double x+S y == (x+y)+S x","S x+double y == (x+y)+S y","S x+(y+x) == (y+x)+S x","double x+S y == (y+x)+S x","double x+(x+y) == (x+y)+double x","double x+(y+x) == (y+x)+double x","half x+(x+y) == (x+y)+half x","half x+(y+x) == (y+x)+half x","S x+(x+y) == (x+y)+S x","S x+double y == (y+x)+S y","double x+S y == (x+y)+S x","S x+double y == (x+y)+S y","S x+(y+x) == (y+x)+S x","double x+S y == (y+x)+S x","double x+(x+y) == (x+y)+double x","double x+(y+x) == (y+x)+double x","half x+(x+y) == (x+y)+half x","half x+(y+x) == (y+x)+half x","S x+length xs == length xs+S x","S x+length xs == length xs+S x","S x+length xs == length xs+S x","double x+length xs == length xs+double x","double x+length xs == length xs+double x","double x+length xs == length xs+double x","half x+length xs == length xs+half x","half x+length xs == length xs+half x","half x+length xs == length xs+half x","S x+length xs == length xs+S x","S x+length xs == length xs+S x","S x+length xs == length xs+S x","double x+length xs == length xs+double x","double x+length xs == length xs+double x","double x+length xs == length xs+double x","half x+length xs == length xs+half x","half x+length xs == length xs+half x","half x+length xs == length xs+half x","S x+length xs == length xs+S x","S x+length xs == length xs+S x","S x+length xs == length xs+S x","double x+length xs == length xs+double x","double x+length xs == length xs+double x","double x+length xs == length xs+double x","half x+length xs == length xs+half x","half x+length xs == length xs+half x","half x+length xs == length xs+half x","S x+S y == S y+S x","S x+S y == S y+S x","half x+S y == S y+half x","half x+S y == S y+half x","S x+S y == S y+S x","half x+S y == S y+half x","half x+S y == S y+half x","half x+S y == S y+half x","half x+S y == S y+half x","half x+double y == double y+half x","half x+double y == double y+half x","half x+double y == double y+half x","half x+double y == double y+half x","half x+double y == double y+half x","half x+double y == double y+half x","half x+half y == half y+half x","half x+half y == half y+half x","half x+half y == half y+half x","(x:[])++(x:[]) == x:(x:[])","(x:[])++(x:[]) == x:(x:[])","(x:[])++(x:[]) == x:(x:[])","(Z:xs)++xs == Z:(xs++xs)","(Z:[])++(xs++xs) == Z:(xs++xs)","(Z:xs)++xs == Z:(xs++xs)","(Z:[])++(xs++xs) == Z:(xs++xs)","(Z:xs)++xs == Z:(xs++xs)","(Z:[])++(xs++xs) == Z:(xs++xs)","double x+S x == S x+double x","half x+S x == S x+half x","double x+S x == S x+double x","half x+S x == S x+half x","double x+S x == S x+double x","half x+S x == S x+half x","half x+double x == double x+half x","half x+double x == double x+half x","half x+double x == double x+half x","double (S Z) == S (S Z)","S Z+S Z == S (S Z)","(x:[])++(Z:[]) == x:(Z:[])","(x:[])++(Z:[]) == x:(Z:[])","(x:[])++(Z:[]) == x:(Z:[])","(Z:[])++(x:[]) == Z:(x:[])","(Z:[])++(x:[]) == Z:(x:[])","(Z:[])++(x:[]) == Z:(x:[])","(Z:[])++(Z:xs) == Z:(Z:xs)","(Z:[])++(Z:xs) == Z:(Z:xs)","(Z:[])++(Z:xs) == Z:(Z:xs)","(Z:[])++(Z:[]) == Z:(Z:[])"]}}],[31.002959,{"Discard":{"discarded":["length (xs++ys) == length (ys++xs)"]}}],[31.003063,{"StartingUserLemmas":[]}],[31.077183,{"PlainProof":{"prop_name":"prop_T15","lemmas":[]}}],[31.105007,{"PlainProof":{"prop_name":"prop_T1","lemmas":[]}}],[34.607574,{"FailedProof":{"prop_name":"prop_T9"}}],[36.837245,{"FailedProof":{"prop_name":"prop_T8"}}],[38.781481,{"InductiveProof":{"prop_name":"prop_T39","lemmas":[]}}],[40.570808,{"InductiveProof":{"prop_name":"prop_T38","lemmas":[]}}],[41.87661,{"InductiveProof":{"prop_name":"prop_T37","lemmas":[]}}],[42.953399,{"PlainProof":{"prop_name":"prop_T24","lemmas":[]}}],[42.975674,{"PlainProof":{"prop_name":"prop_T16","lemmas":[]}}],[42.993968,{"PlainProof":{"prop_name":"prop_T26","lemmas":[]}}],[43.113524,{"PlainProof":{"prop_name":"prop_T13","lemmas":[]}}],[43.788412,{"InductiveProof":{"prop_name":"prop_T36","lemmas":[]}}],[45.833382,{"FailedProof":{"prop_name":"prop_T47"}}],[47.86317,{"FailedProof":{"prop_name":"prop_T46"}}],[49.164392,{"FailedProof":{"prop_name":"prop_T45"}}],[51.185609,{"FailedProof":{"prop_name":"prop_T44"}}],[52.916665,{"FailedProof":{"prop_name":"prop_T50"}}],[54.224323,{"FailedProof":{"prop_name":"prop_T49"}}],[54.971727,{"PlainProof":{"prop_name":"prop_T4","lemmas":[]}}],[54.997432,{"PlainProof":{"prop_name":"prop_T3","lemmas":[]}}],[55.024497,{"PlainProof":{"prop_name":"prop_T25","lemmas":[]}}],[55.057296,{"PlainProof":{"prop_name":"prop_T23","lemmas":[]}}],[55.093793,{"PlainProof":{"prop_name":"prop_T22","lemmas":[]}}],[55.123452,{"PlainProof":{"prop_name":"prop_T20","lemmas":[]}}],[55.160443,{"PlainProof":{"prop_name":"prop_T2","lemmas":[]}}],[55.239648,{"FailedProof":{"prop_name":"prop_T48"}}],[57.48735,{"FailedProof":{"prop_name":"prop_T34"}}],[58.49753,{"FailedProof":{"prop_name":"prop_T35"}}],[59.737199,{"FailedProof":{"prop_name":"prop_T33"}}],[60.854075,{"InductiveProof":{"prop_name":"prop_T7","lemmas":[]}}],[61.986376,{"FailedProof":{"prop_name":"prop_T31"}}],[64.086226,{"FailedProof":{"prop_name":"prop_T6"}}],[64.115341,{"InductiveProof":{"prop_name":"prop_T5","lemmas":[]}}],[65.13065,{"FailedProof":{"prop_name":"prop_T30"}}],[66.154406,{"FailedProof":{"prop_name":"prop_T29"}}],[67.183616,{"FailedProof":{"prop_name":"prop_T27"}}],[69.255272,{"FailedProof":{"prop_name":"prop_T19"}}],[70.357859,{"FailedProof":{"prop_name":"prop_T17"}}],[71.467055,{"InductiveProof":{"prop_name":"prop_T12","lemmas":[]}}],[72.53306,{"FailedProof":{"prop_name":"prop_T10"}}],[74.721554,{"FailedProof":{"prop_name":"prop_G6"}}],[75.722455,{"InductiveProof":{"prop_name":"prop_G5","lemmas":[]}}],[76.752665,{"FailedProof":{"prop_name":"prop_T32"}}],[77.917267,{"FailedProof":{"prop_name":"prop_G9"}}],[78.923485,{"InductiveProof":{"prop_name":"prop_T43","lemmas":[]}}],[80.94603,{"FailedProof":{"prop_name":"prop_T42"}}],[82.258777,{"FailedProof":{"prop_name":"prop_T41"}}],[83.972847,{"FailedProof":{"prop_name":"prop_T40"}}],[84.987758,{"FailedProof":{"prop_name":"prop_T14"}}],[84.987898,{"Finished":{"proved":["prop_T39","prop_T38","prop_T37","prop_T36","prop_T7","prop_T5","prop_T12","prop_G5","prop_T43","prop_T15","prop_T1","prop_T24","prop_T16","prop_T26","prop_T13","prop_T4","prop_T3","prop_T25","prop_T23","prop_T22","prop_T20","prop_T2"],"unproved":["prop_T9","prop_T8","prop_T47","prop_T46","prop_T45","prop_T44","prop_T50","prop_T49","prop_T48","prop_T34","prop_T35","prop_T33","prop_T31","prop_T6","prop_T30","prop_T29","prop_T27","prop_T19","prop_T17","prop_T10","prop_G6","prop_T32","prop_G9","prop_T42","prop_T41","prop_T40","prop_T14"],"qs_unproved":[],"qs_proved":["xs++[] == xs","x+Z == x","(xs++ys)++zs == xs++(ys++zs)","x+S y == S (x+y)","even (double x) == even Z","half (double x) == x","length xs+length ys == length (xs++ys)","y+x == x+y","y+(x+z) == x+(y+z)","x+x == double x","double (length xs) == length (xs++xs)"]}}]]