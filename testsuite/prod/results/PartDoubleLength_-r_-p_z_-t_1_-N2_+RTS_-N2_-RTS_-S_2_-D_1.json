[[2.0e-6,{"Started":[]}],[2.20133,{"FileProcessed":[]}],[2.408213,{"QuickSpecDone":{"eqs":69,"classes":157}}],[3.47168,{"InductiveProof":{"lemmas":[],"prop_name":"xs++[] == xs"}}],[5.4784,{"InductiveProof":{"lemmas":[],"prop_name":"(xs++ys)++zs == xs++(ys++zs)"}}],[7.512015,{"InductiveProof":{"lemmas":[],"prop_name":"length (ys++xs) == length (xs++ys)"}}],[8.538654,{"FailedProof":{"prop_name":"double (length xs) == length (xs++xs)"}}],[8.542451,{"Discard":{"discarded":["xs++[] == xs","xs++[] == xs","xs++[] == xs","(xs++ys)++zs == xs++(ys++zs)","(xs++ys)++zs == xs++(ys++zs)","(xs++ys)++zs == xs++(ys++zs)","(xs++ys)++zs == xs++(ys++zs)","(xs++ys)++zs == xs++(ys++zs)","(xs++ys)++zs == xs++(ys++zs)","length (xs++ys) == length (ys++xs)","length (xs++ys) == length (ys++xs)","length (xs++ys) == length (ys++xs)","(xs++ys)++xs == xs++(ys++xs)","(xs++ys)++ys == xs++(ys++ys)","(xs++ys)++xs == xs++(ys++xs)","(xs++ys)++ys == xs++(ys++ys)","(xs++ys)++ys == xs++(ys++ys)","(xs++ys)++xs == xs++(ys++xs)","(xs++ys)++xs == xs++(ys++xs)","(xs++ys)++ys == xs++(ys++ys)","(xs++ys)++ys == xs++(ys++ys)","(xs++ys)++xs == xs++(ys++xs)","(xs++ys)++ys == xs++(ys++ys)","(xs++ys)++xs == xs++(ys++xs)","(xs++xs)++ys == xs++(xs++ys)","(xs++xs)++ys == xs++(xs++ys)","(xs++xs)++ys == xs++(xs++ys)","(xs++xs)++ys == xs++(xs++ys)","(xs++xs)++ys == xs++(xs++ys)","(xs++xs)++ys == xs++(xs++ys)","double (length xs) == length (xs++xs)","double (length xs) == length (xs++xs)","double (length xs) == length (xs++xs)","(xs++xs)++xs == xs++(xs++xs)","(xs++xs)++xs == xs++(xs++xs)","(xs++xs)++xs == xs++(xs++xs)","(xs++ys)++[] == xs++ys","(xs++ys)++[] == xs++ys","(xs++ys)++[] == xs++ys","(xs++ys)++[] == xs++ys","(xs++ys)++[] == xs++ys","(xs++ys)++[] == xs++ys","(xs++xs)++[] == xs++xs","(xs++xs)++[] == xs++xs","(xs++xs)++[] == xs++xs"]}}],[9.546898,{"InductiveProof":{"lemmas":[],"prop_name":"double (length xs) == length (xs++xs)"}}],[9.54693,{"StartingUserLemmas":[]}],[9.577623,{"PlainProof":{"lemmas":[],"prop_name":"prop_T04"}}],[9.577691,{"Finished":{"qs_proved":["xs++[] == xs","(xs++ys)++zs == xs++(ys++zs)","length (ys++xs) == length (xs++ys)","double (length xs) == length (xs++xs)"],"proved":["prop_T04"],"qs_unproved":[],"unproved":[]}}]]