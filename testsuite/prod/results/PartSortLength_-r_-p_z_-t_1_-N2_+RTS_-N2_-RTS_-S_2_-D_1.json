[[3.0e-6,{"Started":[]}],[2.658499,{"FileProcessed":[]}],[2.926493,{"QuickSpecDone":{"eqs":196,"classes":731}}],[4.194762,{"PlainProof":{"lemmas":[],"prop_name":"insert Z xs == Z:xs"}}],[5.053373,{"InductiveProof":{"lemmas":[],"prop_name":"y\u003c=y == x\u003c=x"}}],[5.106232,{"PlainProof":{"lemmas":[],"prop_name":"Z\u003c=x == x\u003c=x"}}],[9.212109,{"FailedProof":{"prop_name":"insert y (insert x xs) == insert x (insert y xs)"}}],[11.306501,{"FailedProof":{"prop_name":"isort (insert x xs) == isort (x:xs)"}}],[12.357086,{"InductiveProof":{"lemmas":[],"prop_name":"length (insert x xs) == length (x:xs)"}}],[14.430577,{"FailedProof":{"prop_name":"insert x (x:xs) == x:(x:xs)"}}],[15.511462,{"FailedProof":{"prop_name":"isort (isort xs) == isort xs"}}],[16.548149,{"InductiveProof":{"lemmas":[],"prop_name":"length (isort xs) == length xs"}}],[16.641125,{"InductiveProof":{"lemmas":[],"prop_name":"x\u003c=S x == x\u003c=x"}}],[18.702594,{"InductiveProof":{"lemmas":[],"prop_name":"S y\u003c=y == S x\u003c=x"}}],[18.80171,{"InductiveProof":{"lemmas":[],"prop_name":"S x\u003c=Z == S x\u003c=x"}}],[18.805194,{"Discard":{"discarded":["x\u003c=x == y\u003c=y","x\u003c=x == y\u003c=y","insert Z xs == Z:xs","insert Z xs == Z:xs","insert Z xs == Z:xs","Z\u003c=x == x\u003c=x","Z\u003c=x == y\u003c=y","Z\u003c=x == y\u003c=y","Z\u003c=Z == x\u003c=x","insert x (insert y xs) == insert y (insert x xs)","insert x (insert y xs) == insert y (insert x xs)","insert x (insert y xs) == insert y (insert x xs)","insert x (insert y xs) == insert y (insert x xs)","insert x (insert y xs) == insert y (insert x xs)","insert x (insert y xs) == insert y (insert x xs)","insert x (insert y xs) == insert y (insert x xs)","insert x (insert y xs) == insert y (insert x xs)","insert x (insert y xs) == insert y (insert x xs)","isort (insert x xs) == isort (x:xs)","isort (insert x xs) == isort (x:xs)","isort (insert x xs) == isort (x:xs)","isort (insert x xs) == isort (x:xs)","isort (insert x xs) == isort (x:xs)","isort (insert x xs) == isort (x:xs)","isort (insert x xs) == isort (x:xs)","isort (insert x xs) == isort (x:xs)","isort (insert x xs) == isort (x:xs)","length (insert x xs) == length (x:xs)","length (insert x xs) == length (x:xs)","length (insert x xs) == length (x:xs)","length (insert x xs) == length (y:xs)","length (insert x xs) == length (y:xs)","length (insert x xs) == length (y:xs)","length (insert x xs) == length (y:xs)","length (insert x xs) == length (y:xs)","length (insert x xs) == length (y:xs)","insert x (x:xs) == x:(x:xs)","insert x (x:xs) == x:(x:xs)","insert x (x:xs) == x:(x:xs)","insert x (x:xs) == x:(x:xs)","insert x (x:xs) == x:(x:xs)","insert x (x:xs) == x:(x:xs)","insert x (x:xs) == x:(x:xs)","insert x (x:xs) == x:(x:xs)","insert x (x:xs) == x:(x:xs)","isort (isort xs) == isort xs","isort (isort xs) == isort xs","isort (isort xs) == isort xs","length (isort xs) == length xs","length (isort xs) == length xs","length (isort xs) == length xs","x\u003c=S x == x\u003c=x","x\u003c=S x == y\u003c=y","x\u003c=S x == y\u003c=y","S x\u003c=x == S y\u003c=y","S x\u003c=x == S y\u003c=y","insert x (y:[]) == insert y (x:[])","insert x (y:[]) == insert y (x:[])"]}}],[20.885277,{"InductiveProof":{"lemmas":[],"prop_name":"insert y (x:[]) == insert x (y:[])"}}],[22.020291,{"InductiveProof":{"lemmas":[],"prop_name":"Z:insert x xs == insert x (Z:xs)"}}],[22.026188,{"Discard":{"discarded":["Z:insert x xs == insert x (Z:xs)","Z:insert x xs == insert x (Z:xs)","Z:insert x xs == insert x (Z:xs)","Z:insert x xs == insert x (Z:xs)","Z:insert x xs == insert x (Z:xs)","Z:insert x xs == insert x (Z:xs)","Z:insert x xs == insert x (Z:xs)","Z:insert x xs == insert x (Z:xs)","insert Z (x:xs) == Z:(x:xs)","insert Z (x:xs) == Z:(x:xs)","insert Z (x:xs) == Z:(x:xs)","insert Z (x:xs) == Z:(x:xs)","insert Z (x:xs) == Z:(x:xs)","insert Z (x:xs) == Z:(x:xs)","insert Z (x:xs) == Z:(x:xs)","insert Z (x:xs) == Z:(x:xs)","insert Z (x:xs) == Z:(x:xs)","insert Z (insert x xs) == insert x (Z:xs)","insert Z (insert x xs) == insert x (Z:xs)","insert Z (insert x xs) == insert x (Z:xs)","insert Z (insert x xs) == insert x (Z:xs)","insert Z (insert x xs) == insert x (Z:xs)","insert Z (insert x xs) == insert x (Z:xs)","insert Z (insert x xs) == insert x (Z:xs)","insert Z (insert x xs) == insert x (Z:xs)","insert Z (insert x xs) == insert x (Z:xs)","insert x (x:[]) == x:(x:[])","insert x (x:[]) == x:(x:[])","Z:isort xs == isort (Z:xs)","Z:isort xs == isort (Z:xs)","Z:isort xs == isort (Z:xs)","Z\u003c=length xs == x\u003c=x","Z\u003c=length xs == x\u003c=x","Z\u003c=length xs == x\u003c=x","Z\u003c=S x == x\u003c=x","Z\u003c=S x == y\u003c=y","Z\u003c=S x == y\u003c=y","length xs\u003c=length xs == x\u003c=x","length xs\u003c=length xs == x\u003c=x","length xs\u003c=length xs == x\u003c=x","S x\u003c=Z == S x\u003c=x","S x\u003c=Z == S y\u003c=y","S x\u003c=S x == y\u003c=y","S x\u003c=Z == S y\u003c=y","S x\u003c=S x == y\u003c=y","Z:(x:[]) == insert x (Z:[])","Z:(x:[]) == insert x (Z:[])","Z:(x:[]) == insert x (Z:[])","insert Z (x:[]) == insert x (Z:[])","insert Z (x:[]) == insert x (Z:[])","insert Z (x:[]) == insert x (Z:[])","insert Z (Z:xs) == Z:(Z:xs)","insert Z (Z:xs) == Z:(Z:xs)","insert Z (Z:xs) == Z:(Z:xs)","S Z\u003c=S x == x\u003c=x","S Z\u003c=S x == y\u003c=y","S Z\u003c=S x == y\u003c=y","Z\u003c=S Z == x\u003c=x","S Z\u003c=Z == S x\u003c=x","insert Z (Z:[]) == Z:(Z:[])","S Z\u003c=S Z == x\u003c=x"]}}],[22.10704,{"PlainProof":{"lemmas":[],"prop_name":"insert x (x:[]) == x:(x:[])"}}],[26.161502,{"FailedProof":{"prop_name":"insert y (insert x xs) == insert x (insert y xs)"}}],[28.249276,{"FailedProof":{"prop_name":"isort (insert x xs) == isort (x:xs)"}}],[30.350817,{"FailedProof":{"prop_name":"insert x (x:xs) == x:(x:xs)"}}],[31.380628,{"FailedProof":{"prop_name":"isort (isort xs) == isort xs"}}],[31.38066,{"StartingUserLemmas":[]}],[31.440037,{"PlainProof":{"lemmas":[],"prop_name":"prop_T48"}}],[31.440064,{"Finished":{"qs_proved":["y\u003c=y == x\u003c=x","length (insert x xs) == length (x:xs)","length (isort xs) == length xs","x\u003c=S x == x\u003c=x","S y\u003c=y == S x\u003c=x","S x\u003c=Z == S x\u003c=x","insert y (x:[]) == insert x (y:[])","Z:insert x xs == insert x (Z:xs)"],"proved":["prop_T48"],"qs_unproved":["insert x (insert y xs) == insert y (insert x xs)","isort (insert x xs) == isort (x:xs)","insert x (x:xs) == x:(x:xs)","isort (isort xs) == isort xs"],"unproved":[]}}]]