[[1.0e-6,{"Started":[]}],[6.222593,{"FileProcessed":[]}],[7.279715,{"QuickSpecDone":{"eqs":852,"classes":2550}}],[8.055067,{"PlainProof":{"prop_name":"elem y [] == elem x []","lemmas":[]}}],[8.937085,{"InductiveProof":{"prop_name":"xs++[] == xs","lemmas":[]}}],[9.017674,{"PlainProof":{"prop_name":"insert x [] == x:[]","lemmas":[]}}],[9.048517,{"PlainProof":{"prop_name":"count y [] == count x []","lemmas":[]}}],[9.108789,{"PlainProof":{"prop_name":"[]++xs == xs","lemmas":[]}}],[9.110218,{"PlainProof":{"prop_name":"isort [] == []","lemmas":[]}}],[11.269819,{"InductiveProof":{"prop_name":"elem x (ys++xs) == elem x (xs++ys)","lemmas":[]}}],[12.337244,{"InductiveProof":{"prop_name":"elem x (insert y xs) == elem x (y:xs)","lemmas":[]}}],[16.374639,{"FailedProof":{"prop_name":"insert y (insert x xs) == insert x (insert y xs)"}}],[18.415136,{"InductiveProof":{"prop_name":"count x (ys++xs) == count x (xs++ys)","lemmas":[]}}],[19.503922,{"InductiveProof":{"prop_name":"count x (insert y xs) == count x (y:xs)","lemmas":[]}}],[21.644634,{"InductiveProof":{"prop_name":"(xs++ys)++zs == xs++(ys++zs)","lemmas":[]}}],[21.744208,{"PlainProof":{"prop_name":"(x:xs)++ys == x:(xs++ys)","lemmas":[]}}],[23.817973,{"FailedProof":{"prop_name":"sorted (insert x xs) == sorted xs"}}],[25.947289,{"FailedProof":{"prop_name":"isort (ys++xs) == isort (xs++ys)"}}],[28.025245,{"FailedProof":{"prop_name":"isort (insert x xs) == isort (x:xs)"}}],[29.237575,{"InductiveProof":{"prop_name":"elem x (x:xs) == sorted []","lemmas":[]}}],[30.311669,{"InductiveProof":{"prop_name":"elem x (isort xs) == elem x xs","lemmas":[]}}],[31.402193,{"InductiveProof":{"prop_name":"elem x (xs++xs) == elem x xs","lemmas":[]}}],[33.482555,{"FailedProof":{"prop_name":"insert x (x:xs) == x:(x:xs)"}}],[33.547926,{"PlainProof":{"prop_name":"insert x (isort xs) == isort (x:xs)","lemmas":[]}}],[34.625447,{"InductiveProof":{"prop_name":"count x (isort xs) == count x xs","lemmas":[]}}],[35.686758,{"FailedProof":{"prop_name":"sorted (isort xs) == sorted []"}}],[36.725238,{"FailedProof":{"prop_name":"isort (isort xs) == isort xs"}}],[38.752069,{"InductiveProof":{"prop_name":"elem y (x:[]) == elem x (y:[])","lemmas":[]}}],[40.205388,{"InductiveProof":{"prop_name":"count y (x:[]) == count x (y:[])","lemmas":[]}}],[40.420828,{"PlainProof":{"prop_name":"count y (y:[]) == count x (x:[])","lemmas":[]}}],[41.219224,{"InductiveProof":{"prop_name":"insert (count x []) xs == count x []:xs","lemmas":[]}}],[41.24864,{"Discard":{"discarded":["xs++[] == xs","xs++[] == xs","xs++[] == xs","elem x [] == elem y []","elem x [] == elem y []","insert x [] == x:[]","insert x [] == x:[]","insert x [] == x:[]","count x [] == count y []","count x [] == count y []","[]++xs == xs","[]++xs == xs","[]++xs == xs","isort [] == []","[]++[] == []","elem x (xs++ys) == elem x (ys++xs)","elem x (xs++ys) == elem x (ys++xs)","elem x (xs++ys) == elem x (ys++xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (xs++ys) == elem x (ys++xs)","elem x (xs++ys) == elem x (ys++xs)","elem x (xs++ys) == elem x (ys++xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (xs++ys) == elem x (ys++xs)","elem x (xs++ys) == elem x (ys++xs)","elem x (xs++ys) == elem x (ys++xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","insert x (insert y xs) == insert y (insert x xs)","insert x (insert y xs) == insert y (insert x xs)","insert x (insert y xs) == insert y (insert x xs)","insert x (insert y xs) == insert y (insert x xs)","insert x (insert y xs) == insert y (insert x xs)","insert x (insert y xs) == insert y (insert x xs)","insert x (insert y xs) == insert y (insert x xs)","insert x (insert y xs) == insert y (insert x xs)","insert x (insert y xs) == insert y (insert x xs)","count x (xs++ys) == count x (ys++xs)","count x (xs++ys) == count x (ys++xs)","count x (xs++ys) == count x (ys++xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (xs++ys) == count x (ys++xs)","count x (xs++ys) == count x (ys++xs)","count x (xs++ys) == count x (ys++xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (xs++ys) == count x (ys++xs)","count x (xs++ys) == count x (ys++xs)","count x (xs++ys) == count x (ys++xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","(xs++ys)++zs == xs++(ys++zs)","(xs++ys)++zs == xs++(ys++zs)","(xs++ys)++zs == xs++(ys++zs)","(xs++ys)++zs == xs++(ys++zs)","(xs++ys)++zs == xs++(ys++zs)","(xs++ys)++zs == xs++(ys++zs)","(x:xs)++ys == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","sorted (insert x xs) == sorted xs","sorted (insert x xs) == sorted xs","sorted (insert x xs) == sorted xs","sorted (insert x xs) == sorted xs","sorted (insert x xs) == sorted xs","sorted (insert x xs) == sorted xs","sorted (insert x xs) == sorted xs","sorted (insert x xs) == sorted xs","sorted (insert x xs) == sorted xs","isort (xs++ys) == isort (ys++xs)","isort (xs++ys) == isort (ys++xs)","isort (xs++ys) == isort (ys++xs)","isort (insert x xs) == isort (x:xs)","isort (insert x xs) == isort (x:xs)","isort (insert x xs) == isort (x:xs)","isort (insert x xs) == isort (x:xs)","isort (insert x xs) == isort (x:xs)","isort (insert x xs) == isort (x:xs)","isort (insert x xs) == isort (x:xs)","isort (insert x xs) == isort (x:xs)","isort (insert x xs) == isort (x:xs)","elem x (x:xs) == sorted []","elem x (x:xs) == sorted []","elem x (x:xs) == sorted []","elem x (insert x xs) == sorted []","elem x (insert x xs) == sorted []","elem x (insert x xs) == sorted []","elem x (isort xs) == elem x xs","elem x (isort xs) == elem x xs","elem x (isort xs) == elem x xs","elem x (xs++xs) == elem x xs","elem x (xs++xs) == elem x xs","elem x (xs++xs) == elem x xs","elem x (x:xs) == sorted []","elem x (x:xs) == sorted []","elem x (x:xs) == sorted []","elem x (insert x xs) == sorted []","elem x (insert x xs) == sorted []","elem x (insert x xs) == sorted []","elem x (isort xs) == elem x xs","elem x (isort xs) == elem x xs","elem x (isort xs) == elem x xs","elem x (xs++xs) == elem x xs","elem x (xs++xs) == elem x xs","elem x (xs++xs) == elem x xs","elem x (x:xs) == sorted []","elem x (x:xs) == sorted []","elem x (x:xs) == sorted []","elem x (insert x xs) == sorted []","elem x (insert x xs) == sorted []","elem x (insert x xs) == sorted []","elem x (isort xs) == elem x xs","elem x (isort xs) == elem x xs","elem x (isort xs) == elem x xs","elem x (xs++xs) == elem x xs","elem x (xs++xs) == elem x xs","elem x (xs++xs) == elem x xs","insert x (x:xs) == x:(x:xs)","insert x (x:xs) == x:(x:xs)","insert x (x:xs) == x:(x:xs)","insert x (isort xs) == isort (x:xs)","insert x (isort xs) == isort (x:xs)","insert x (isort xs) == isort (x:xs)","insert x (x:xs) == x:(x:xs)","insert x (x:xs) == x:(x:xs)","insert x (x:xs) == x:(x:xs)","insert x (isort xs) == isort (x:xs)","insert x (isort xs) == isort (x:xs)","insert x (isort xs) == isort (x:xs)","insert x (x:xs) == x:(x:xs)","insert x (x:xs) == x:(x:xs)","insert x (x:xs) == x:(x:xs)","insert x (isort xs) == isort (x:xs)","insert x (isort xs) == isort (x:xs)","insert x (isort xs) == isort (x:xs)","count x (insert x xs) == count x (x:xs)","count x (insert x xs) == count x (x:xs)","count x (insert x xs) == count x (x:xs)","count x (isort xs) == count x xs","count x (isort xs) == count x xs","count x (isort xs) == count x xs","count x (insert x xs) == count x (x:xs)","count x (insert x xs) == count x (x:xs)","count x (insert x xs) == count x (x:xs)","count x (isort xs) == count x xs","count x (isort xs) == count x xs","count x (isort xs) == count x xs","count x (insert x xs) == count x (x:xs)","count x (insert x xs) == count x (x:xs)","count x (insert x xs) == count x (x:xs)","count x (isort xs) == count x xs","count x (isort xs) == count x xs","count x (isort xs) == count x xs","(xs++ys)++xs == xs++(ys++xs)","(xs++ys)++ys == xs++(ys++ys)","(xs++ys)++xs == xs++(ys++xs)","(xs++ys)++ys == xs++(ys++ys)","(xs++ys)++ys == xs++(ys++ys)","(xs++ys)++xs == xs++(ys++xs)","(xs++ys)++xs == xs++(ys++xs)","(xs++ys)++ys == xs++(ys++ys)","(xs++ys)++ys == xs++(ys++ys)","(xs++ys)++xs == xs++(ys++xs)","(xs++ys)++ys == xs++(ys++ys)","(xs++ys)++xs == xs++(ys++xs)","(x:xs)++xs == x:(xs++xs)","(x:xs)++xs == x:(xs++xs)","(x:xs)++xs == x:(xs++xs)","(x:xs)++xs == x:(xs++xs)","(x:xs)++xs == x:(xs++xs)","(x:xs)++xs == x:(xs++xs)","(x:xs)++xs == x:(xs++xs)","(x:xs)++xs == x:(xs++xs)","(x:xs)++xs == x:(xs++xs)","(xs++xs)++ys == xs++(xs++ys)","(xs++xs)++ys == xs++(xs++ys)","(xs++xs)++ys == xs++(xs++ys)","(xs++xs)++ys == xs++(xs++ys)","(xs++xs)++ys == xs++(xs++ys)","(xs++xs)++ys == xs++(xs++ys)","sorted (isort xs) == sorted []","sorted (isort xs) == sorted []","sorted (isort xs) == sorted []","isort (isort xs) == isort xs","isort (isort xs) == isort xs","isort (isort xs) == isort xs","(xs++xs)++xs == xs++(xs++xs)","(xs++xs)++xs == xs++(xs++xs)","(xs++xs)++xs == xs++(xs++xs)","elem (count x xs) (ys++zs) == elem (count x xs) (zs++ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (ys++zs) == elem (count x xs) (zs++ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (ys++zs) == elem (count x xs) (zs++ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (ys++zs) == elem (count x xs) (zs++ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (ys++zs) == elem (count x xs) (zs++ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (ys++zs) == elem (count x xs) (zs++ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (ys++zs) == elem (count x xs) (zs++ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (ys++zs) == elem (count x xs) (zs++ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (ys++zs) == elem (count x xs) (zs++ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","count (count x xs) (ys++zs) == count (count x xs) (zs++ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (ys++zs) == count (count x xs) (zs++ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (ys++zs) == count (count x xs) (zs++ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (ys++zs) == count (count x xs) (zs++ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (ys++zs) == count (count x xs) (zs++ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (ys++zs) == count (count x xs) (zs++ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (ys++zs) == count (count x xs) (zs++ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (ys++zs) == count (count x xs) (zs++ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (ys++zs) == count (count x xs) (zs++ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","elem (count x xs) (ys++xs) == elem (count x xs) (xs++ys)","elem (count x xs) (ys++xs) == elem (count x xs) (xs++ys)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (xs++ys) == elem (count x xs) (ys++xs)","elem (count x xs) (ys++xs) == elem (count x xs) (xs++ys)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (xs++ys) == elem (count x xs) (ys++xs)","elem (count x xs) (xs++ys) == elem (count x xs) (ys++xs)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (ys++xs) == elem (count x xs) (xs++ys)","elem (count x xs) (ys++xs) == elem (count x xs) (xs++ys)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (xs++ys) == elem (count x xs) (ys++xs)","elem (count x xs) (ys++xs) == elem (count x xs) (xs++ys)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (xs++ys) == elem (count x xs) (ys++xs)","elem (count x xs) (xs++ys) == elem (count x xs) (ys++xs)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (ys++xs) == elem (count x xs) (xs++ys)","elem (count x xs) (ys++xs) == elem (count x xs) (xs++ys)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (xs++ys) == elem (count x xs) (ys++xs)","elem (count x xs) (ys++xs) == elem (count x xs) (xs++ys)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (xs++ys) == elem (count x xs) (ys++xs)","elem (count x xs) (xs++ys) == elem (count x xs) (ys++xs)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","count (count x xs) (ys++xs) == count (count x xs) (xs++ys)","count (count x xs) (ys++xs) == count (count x xs) (xs++ys)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (xs++ys) == count (count x xs) (ys++xs)","count (count x xs) (ys++xs) == count (count x xs) (xs++ys)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (xs++ys) == count (count x xs) (ys++xs)","count (count x xs) (xs++ys) == count (count x xs) (ys++xs)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (ys++xs) == count (count x xs) (xs++ys)","count (count x xs) (ys++xs) == count (count x xs) (xs++ys)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (xs++ys) == count (count x xs) (ys++xs)","count (count x xs) (ys++xs) == count (count x xs) (xs++ys)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (xs++ys) == count (count x xs) (ys++xs)","count (count x xs) (xs++ys) == count (count x xs) (ys++xs)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (ys++xs) == count (count x xs) (xs++ys)","count (count x xs) (ys++xs) == count (count x xs) (xs++ys)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (xs++ys) == count (count x xs) (ys++xs)","count (count x xs) (ys++xs) == count (count x xs) (xs++ys)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (xs++ys) == count (count x xs) (ys++xs)","count (count x xs) (xs++ys) == count (count x xs) (ys++xs)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","elem x (y:[]) == elem y (x:[])","elem x (y:[]) == elem y (x:[])","elem x (y:[]) == elem y (x:[])","insert x (y:[]) == insert y (x:[])","insert x (y:[]) == insert y (x:[])","count x (y:[]) == count y (x:[])","count x (y:[]) == count y (x:[])","count x (y:[]) == count y (x:[])","[]++(xs++ys) == xs++ys","[]++(xs++ys) == xs++ys","[]++(xs++ys) == xs++ys","[]++(xs++ys) == xs++ys","[]++(xs++ys) == xs++ys","[]++(xs++ys) == xs++ys","[]++(x:xs) == x:xs","[]++(x:xs) == x:xs","[]++(x:xs) == x:xs","[]++(x:xs) == x:xs","[]++(x:xs) == x:xs","[]++(x:xs) == x:xs","[]++(x:xs) == x:xs","[]++(x:xs) == x:xs","[]++(x:xs) == x:xs","[]++insert x xs == insert x xs","[]++insert x xs == insert x xs","[]++insert x xs == insert x xs","[]++insert x xs == insert x xs","[]++insert x xs == insert x xs","[]++insert x xs == insert x xs","[]++insert x xs == insert x xs","[]++insert x xs == insert x xs","[]++insert x xs == insert x xs","(xs++ys)++[] == xs++ys","(xs++ys)++[] == xs++ys","(xs++ys)++[] == xs++ys","(xs++ys)++[] == xs++ys","(xs++ys)++[] == xs++ys","(xs++ys)++[] == xs++ys","(x:xs)++[] == x:xs","(x:xs)++[] == x:xs","(x:xs)++[] == x:xs","(x:xs)++[] == x:xs","(x:xs)++[] == x:xs","(x:xs)++[] == x:xs","(x:xs)++[] == x:xs","(x:xs)++[] == x:xs","(x:xs)++[] == x:xs","insert x xs++[] == insert x xs","insert x xs++[] == insert x xs","insert x xs++[] == insert x xs","insert x xs++[] == insert x xs","insert x xs++[] == insert x xs","insert x xs++[] == insert x xs","insert x xs++[] == insert x xs","insert x xs++[] == insert x xs","insert x xs++[] == insert x xs","elem (count x xs) [] == elem x []","elem (count x xs) (insert x xs) == elem (count x xs) (x:xs)","elem (count x xs) (isort xs) == elem (count x xs) xs","elem (count x xs) (xs++xs) == elem (count x xs) xs","elem (count x xs) [] == elem x []","elem (count x xs) (insert x xs) == elem (count x xs) (x:xs)","elem (count x xs) (isort xs) == elem (count x xs) xs","elem (count x xs) (xs++xs) == elem (count x xs) xs","elem (count x xs) [] == elem x []","elem (count x xs) (insert x xs) == elem (count x xs) (x:xs)","elem (count x xs) (isort xs) == elem (count x xs) xs","elem (count x xs) (xs++xs) == elem (count x xs) xs","elem (count x xs) [] == elem y []","elem (count x xs) (insert x xs) == elem (count x xs) (x:xs)","elem (count x xs) (isort xs) == elem (count x xs) xs","elem (count x xs) (xs++xs) == elem (count x xs) xs","elem (count x xs) [] == elem y []","elem (count x xs) (insert x xs) == elem (count x xs) (x:xs)","elem (count x xs) (isort xs) == elem (count x xs) xs","elem (count x xs) (xs++xs) == elem (count x xs) xs","elem (count x xs) [] == elem y []","elem (count x xs) (insert x xs) == elem (count x xs) (x:xs)","elem (count x xs) (isort xs) == elem (count x xs) xs","elem (count x xs) (xs++xs) == elem (count x xs) xs","elem (count x xs) [] == elem y []","elem (count x xs) (insert x xs) == elem (count x xs) (x:xs)","elem (count x xs) (isort xs) == elem (count x xs) xs","elem (count x xs) (xs++xs) == elem (count x xs) xs","elem (count x xs) [] == elem y []","elem (count x xs) (insert x xs) == elem (count x xs) (x:xs)","elem (count x xs) (isort xs) == elem (count x xs) xs","elem (count x xs) (xs++xs) == elem (count x xs) xs","elem (count x xs) [] == elem y []","elem (count x xs) (insert x xs) == elem (count x xs) (x:xs)","elem (count x xs) (isort xs) == elem (count x xs) xs","elem (count x xs) (xs++xs) == elem (count x xs) xs","insert (count x xs) [] == count x xs:[]","insert (count x xs) [] == count x xs:[]","insert (count x xs) [] == count x xs:[]","insert (count x xs) [] == count x xs:[]","insert (count x xs) [] == count x xs:[]","insert (count x xs) [] == count x xs:[]","insert (count x xs) [] == count x xs:[]","insert (count x xs) [] == count x xs:[]","insert (count x xs) [] == count x xs:[]","count (count x xs) [] == count x []","count (count x xs) (insert x xs) == count (count x xs) (x:xs)","count (count x xs) (isort xs) == count (count x xs) xs","count (count x xs) [] == count x []","count (count x xs) (insert x xs) == count (count x xs) (x:xs)","count (count x xs) (isort xs) == count (count x xs) xs","count (count x xs) [] == count x []","count (count x xs) (insert x xs) == count (count x xs) (x:xs)","count (count x xs) (isort xs) == count (count x xs) xs","count (count x xs) [] == count y []","count (count x xs) (insert x xs) == count (count x xs) (x:xs)","count (count x xs) (isort xs) == count (count x xs) xs","count (count x xs) [] == count y []","count (count x xs) (insert x xs) == count (count x xs) (x:xs)","count (count x xs) (isort xs) == count (count x xs) xs","count (count x xs) [] == count y []","count (count x xs) (insert x xs) == count (count x xs) (x:xs)","count (count x xs) (isort xs) == count (count x xs) xs","count (count x xs) [] == count y []","count (count x xs) (insert x xs) == count (count x xs) (x:xs)","count (count x xs) (isort xs) == count (count x xs) xs","count (count x xs) [] == count y []","count (count x xs) (insert x xs) == count (count x xs) (x:xs)","count (count x xs) (isort xs) == count (count x xs) xs","count (count x xs) [] == count y []","count (count x xs) (insert x xs) == count (count x xs) (x:xs)","count (count x xs) (isort xs) == count (count x xs) xs","(x:[])++xs == x:xs","(x:[])++xs == x:xs","(x:[])++xs == x:xs","(x:[])++xs == x:xs","(x:[])++xs == x:xs","(x:[])++xs == x:xs","(x:[])++xs == x:xs","(x:[])++xs == x:xs","(x:[])++xs == x:xs","insert (count x []) xs == count x []:xs","insert (count x []) xs == count x []:xs","insert (count x []) xs == count x []:xs"]}}],[42.470391,{"PlainProof":{"prop_name":"sorted (x:[]) == sorted []","lemmas":[]}}],[43.275523,{"InductiveProof":{"prop_name":"insert y (x:[]) == insert x (y:[])","lemmas":[]}}],[43.277034,{"Discard":{"discarded":["sorted (x:[]) == sorted []","sorted (x:[]) == sorted []","isort (x:[]) == x:[]","isort (x:[]) == x:[]","isort (x:[]) == x:[]","elem x (x:[]) == sorted []","elem x (x:[]) == sorted []","elem x (x:[]) == sorted []","insert x (x:[]) == x:(x:[])","insert x (x:[]) == x:(x:[])","count x (x:[]) == count y (y:[])","count x (x:[]) == count y (y:[])","[]++isort xs == isort xs","[]++isort xs == isort xs","[]++isort xs == isort xs","[]++(xs++xs) == xs++xs","[]++(xs++xs) == xs++xs","[]++(xs++xs) == xs++xs","isort xs++[] == isort xs","isort xs++[] == isort xs","isort xs++[] == isort xs","(xs++xs)++[] == xs++xs","(xs++xs)++[] == xs++xs","(xs++xs)++[] == xs++xs","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","elem (count x []) (xs++ys) == elem (count x []) (ys++xs)","elem (count x []) (xs++ys) == elem (count x []) (ys++xs)","elem (count x []) (xs++ys) == elem (count x []) (ys++xs)","elem (count x []) (insert y xs) == elem (count x []) (y:xs)","elem (count x []) (insert y xs) == elem (count x []) (y:xs)","elem (count x []) (insert y xs) == elem (count x []) (y:xs)","elem (count x []) (insert y xs) == elem (count x []) (y:xs)","elem (count x []) (insert y xs) == elem (count x []) (y:xs)","elem (count x []) (insert y xs) == elem (count x []) (y:xs)","insert (count x []) (xs++ys) == count x []:(xs++ys)","insert (count x []) (xs++ys) == count x []:(xs++ys)","insert (count x []) (xs++ys) == count x []:(xs++ys)","insert (count x []) (xs++ys) == count x []:(xs++ys)","insert (count x []) (xs++ys) == count x []:(xs++ys)","insert (count x []) (xs++ys) == count x []:(xs++ys)","insert (count x []) (y:xs) == count x []:(y:xs)","insert (count x []) (y:xs) == count x []:(y:xs)","insert (count x []) (y:xs) == count x []:(y:xs)","insert (count x []) (y:xs) == count x []:(y:xs)","insert (count x []) (y:xs) == count x []:(y:xs)","insert (count x []) (y:xs) == count x []:(y:xs)","insert (count x []) (insert y xs) == count x []:insert y xs","insert (count x []) (insert y xs) == count x []:insert y xs","insert (count x []) (insert y xs) == count x []:insert y xs","insert (count x []) (insert y xs) == count x []:insert y xs","insert (count x []) (insert y xs) == count x []:insert y xs","insert (count x []) (insert y xs) == count x []:insert y xs","count (count x []) (xs++ys) == count (count x []) (ys++xs)","count (count x []) (xs++ys) == count (count x []) (ys++xs)","count (count x []) (xs++ys) == count (count x []) (ys++xs)","count (count x []) (insert y xs) == count (count x []) (y:xs)","count (count x []) (insert y xs) == count (count x []) (y:xs)","count (count x []) (insert y xs) == count (count x []) (y:xs)","count (count x []) (insert y xs) == count (count x []) (y:xs)","count (count x []) (insert y xs) == count (count x []) (y:xs)","count (count x []) (insert y xs) == count (count x []) (y:xs)","(x:[])++(x:xs) == x:(x:xs)","(x:[])++(x:xs) == x:(x:xs)","(x:[])++(x:xs) == x:(x:xs)","(x:[])++insert x xs == x:insert x xs","(x:[])++insert x xs == x:insert x xs","(x:[])++insert x xs == x:insert x xs","(x:[])++isort xs == x:isort xs","(x:[])++isort xs == x:isort xs","(x:[])++isort xs == x:isort xs","(x:[])++(xs++xs) == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","(x:[])++(x:xs) == x:(x:xs)","(x:[])++(x:xs) == x:(x:xs)","(x:[])++(x:xs) == x:(x:xs)","(x:[])++insert x xs == x:insert x xs","(x:[])++insert x xs == x:insert x xs","(x:[])++insert x xs == x:insert x xs","(x:[])++isort xs == x:isort xs","(x:[])++isort xs == x:isort xs","(x:[])++isort xs == x:isort xs","(x:[])++(xs++xs) == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","(x:[])++(x:xs) == x:(x:xs)","(x:[])++(x:xs) == x:(x:xs)","(x:[])++(x:xs) == x:(x:xs)","(x:[])++insert x xs == x:insert x xs","(x:[])++insert x xs == x:insert x xs","(x:[])++insert x xs == x:insert x xs","(x:[])++isort xs == x:isort xs","(x:[])++isort xs == x:isort xs","(x:[])++isort xs == x:isort xs","(x:[])++(xs++xs) == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","elem (count x []) (insert x xs) == elem (count x []) (x:xs)","elem (count x []) (insert x xs) == elem (count x []) (x:xs)","elem (count x []) (insert x xs) == elem (count x []) (x:xs)","elem (count x []) (isort xs) == elem (count x []) xs","elem (count x []) (isort xs) == elem (count x []) xs","elem (count x []) (isort xs) == elem (count x []) xs","elem (count x []) (xs++xs) == elem (count x []) xs","elem (count x []) (xs++xs) == elem (count x []) xs","elem (count x []) (xs++xs) == elem (count x []) xs","insert (count x []) (x:xs) == count x []:(x:xs)","insert (count x []) (x:xs) == count x []:(x:xs)","insert (count x []) (x:xs) == count x []:(x:xs)","insert (count x []) (insert x xs) == count x []:insert x xs","insert (count x []) (insert x xs) == count x []:insert x xs","insert (count x []) (insert x xs) == count x []:insert x xs","insert (count x []) (isort xs) == count x []:isort xs","insert (count x []) (isort xs) == count x []:isort xs","insert (count x []) (isort xs) == count x []:isort xs","insert (count x []) (xs++xs) == count x []:(xs++xs)","insert (count x []) (xs++xs) == count x []:(xs++xs)","insert (count x []) (xs++xs) == count x []:(xs++xs)","count (count x []) (insert x xs) == count (count x []) (x:xs)","count (count x []) (insert x xs) == count (count x []) (x:xs)","count (count x []) (insert x xs) == count (count x []) (x:xs)","count (count x []) (isort xs) == count (count x []) xs","count (count x []) (isort xs) == count (count x []) xs","count (count x []) (isort xs) == count (count x []) xs","[]++(x:[]) == x:[]","[]++(x:[]) == x:[]","[]++(x:[]) == x:[]","(x:[])++[] == x:[]","(x:[])++[] == x:[]","(x:[])++[] == x:[]","elem (count x []) [] == elem x []","insert (count x []) [] == count x []:[]","count (count x []) [] == count x []","(x:[])++(y:[]) == x:(y:[])","(x:[])++(y:[]) == x:(y:[])","(x:[])++(y:[]) == x:(y:[])","(x:[])++(y:[]) == x:(y:[])","(x:[])++(y:[]) == x:(y:[])","(x:[])++(y:[]) == x:(y:[])","insert (count x []) (y:[]) == count x []:(y:[])","insert (count x []) (y:[]) == count x []:(y:[])","(x:[])++(x:[]) == x:(x:[])","(x:[])++(x:[]) == x:(x:[])","(x:[])++(x:[]) == x:(x:[])","insert (count x []) (x:[]) == count x []:(x:[])"]}}],[43.356403,{"PlainProof":{"prop_name":"insert x (x:[]) == x:(x:[])","lemmas":[]}}],[47.413628,{"FailedProof":{"prop_name":"insert y (insert x xs) == insert x (insert y xs)"}}],[49.516203,{"FailedProof":{"prop_name":"sorted (insert x xs) == sorted xs"}}],[51.727309,{"FailedProof":{"prop_name":"isort (ys++xs) == isort (xs++ys)"}}],[53.804149,{"FailedProof":{"prop_name":"isort (insert x xs) == isort (x:xs)"}}],[55.900238,{"FailedProof":{"prop_name":"insert x (x:xs) == x:(x:xs)"}}],[56.94273,{"FailedProof":{"prop_name":"sorted (isort xs) == sorted []"}}],[57.986663,{"FailedProof":{"prop_name":"isort (isort xs) == isort xs"}}],[57.986667,{"StartingUserLemmas":[]}],[59.140503,{"FailedProof":{"prop_name":"prop_T15"}}],[60.151118,{"FailedProof":{"prop_name":"prop_T01"}}],[66.220904,{"FailedProof":{"prop_name":"prop_T09"}}],[69.273395,{"FailedProof":{"prop_name":"prop_T08"}}],[71.441371,{"InductiveProof":{"prop_name":"prop_T39","lemmas":[]}}],[72.300967,{"InductiveProof":{"prop_name":"prop_T38","lemmas":[]}}],[72.57138,{"InductiveProof":{"prop_name":"prop_T37","lemmas":[]}}],[73.431699,{"InductiveProof":{"prop_name":"prop_T36","lemmas":[]}}],[75.440645,{"FailedProof":{"prop_name":"prop_T24"}}],[76.44522,{"FailedProof":{"prop_name":"prop_T16"}}],[78.464319,{"FailedProof":{"prop_name":"prop_T26"}}],[78.829946,{"PlainProof":{"prop_name":"prop_T47","lemmas":[]}}],[78.911792,{"PlainProof":{"prop_name":"prop_T46","lemmas":[]}}],[78.995223,{"PlainProof":{"prop_name":"prop_T45","lemmas":[]}}],[79.46896,{"FailedProof":{"prop_name":"prop_T13"}}],[82.763374,{"PlainProof":{"prop_name":"prop_T50","lemmas":[]}}],[82.840626,{"PlainProof":{"prop_name":"prop_T49","lemmas":[]}}],[83.099601,{"FailedProof":{"prop_name":"prop_T44"}}],[84.1455,{"FailedProof":{"prop_name":"prop_T48"}}],[86.241466,{"FailedProof":{"prop_name":"prop_T25"}}],[88.345962,{"FailedProof":{"prop_name":"prop_T23"}}],[90.4621,{"FailedProof":{"prop_name":"prop_T22"}}],[91.506139,{"FailedProof":{"prop_name":"prop_T20"}}],[92.546944,{"FailedProof":{"prop_name":"prop_T04"}}],[93.94745,{"InductiveProof":{"prop_name":"prop_T03","lemmas":[]}}],[95.768013,{"InductiveProof":{"prop_name":"prop_T02","lemmas":[]}}],[97.779175,{"FailedProof":{"prop_name":"prop_T34"}}],[99.790354,{"FailedProof":{"prop_name":"prop_T35"}}],[100.799602,{"FailedProof":{"prop_name":"prop_T33"}}],[101.842428,{"FailedProof":{"prop_name":"prop_T31"}}],[103.927985,{"FailedProof":{"prop_name":"prop_T07"}}],[104.972009,{"FailedProof":{"prop_name":"prop_T30"}}],[106.016186,{"FailedProof":{"prop_name":"prop_T29"}}],[107.06282,{"FailedProof":{"prop_name":"prop_T27"}}],[109.147809,{"FailedProof":{"prop_name":"prop_T19"}}],[110.153508,{"InductiveProof":{"prop_name":"prop_T18","lemmas":[]}}],[112.316309,{"FailedProof":{"prop_name":"prop_T17"}}],[113.322048,{"InductiveProof":{"prop_name":"prop_T12","lemmas":[]}}],[115.375077,{"FailedProof":{"prop_name":"prop_T11"}}],[116.419807,{"FailedProof":{"prop_name":"prop_T10"}}],[118.467201,{"FailedProof":{"prop_name":"prop_T06"}}],[119.512617,{"FailedProof":{"prop_name":"prop_T05"}}],[120.567898,{"FailedProof":{"prop_name":"prop_T32"}}],[121.563019,{"InductiveProof":{"prop_name":"prop_T21","lemmas":[]}}],[121.695314,{"InductiveProof":{"prop_name":"prop_T43","lemmas":[]}}],[125.786456,{"FailedProof":{"prop_name":"prop_T42"}}],[127.88402,{"FailedProof":{"prop_name":"prop_T41"}}],[129.960082,{"FailedProof":{"prop_name":"prop_T40"}}],[130.981319,{"FailedProof":{"prop_name":"prop_T14"}}],[130.98137,{"Finished":{"qs_proved":["xs++[] == xs","elem x (ys++xs) == elem x (xs++ys)","elem x (insert y xs) == elem x (y:xs)","count x (ys++xs) == count x (xs++ys)","count x (insert y xs) == count x (y:xs)","(xs++ys)++zs == xs++(ys++zs)","elem x (x:xs) == sorted []","elem x (isort xs) == elem x xs","elem x (xs++xs) == elem x xs","count x (isort xs) == count x xs","elem y (x:[]) == elem x (y:[])","count y (x:[]) == count x (y:[])","insert (count x []) xs == count x []:xs","insert y (x:[]) == insert x (y:[])"],"unproved":["prop_T15","prop_T01","prop_T09","prop_T08","prop_T24","prop_T16","prop_T26","prop_T13","prop_T44","prop_T48","prop_T25","prop_T23","prop_T22","prop_T20","prop_T04","prop_T34","prop_T35","prop_T33","prop_T31","prop_T07","prop_T30","prop_T29","prop_T27","prop_T19","prop_T17","prop_T11","prop_T10","prop_T06","prop_T05","prop_T32","prop_T42","prop_T41","prop_T40","prop_T14"],"proved":["prop_T39","prop_T38","prop_T37","prop_T36","prop_T03","prop_T02","prop_T18","prop_T12","prop_T21","prop_T43","prop_T47","prop_T46","prop_T45","prop_T50","prop_T49"],"qs_unproved":["insert x (insert y xs) == insert y (insert x xs)","sorted (insert x xs) == sorted xs","isort (xs++ys) == isort (ys++xs)","isort (insert x xs) == isort (x:xs)","insert x (x:xs) == x:(x:xs)","sorted (isort xs) == sorted []","isort (isort xs) == isort xs"]}}]]