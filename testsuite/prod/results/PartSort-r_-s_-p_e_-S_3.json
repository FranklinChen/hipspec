[[3.0e-6,{"Started":[]}],[1.553009,{"FileProcessed":[]}],[2.509158,{"QuickSpecDone":{"classes":2550,"eqs":852}}],[3.02341,{"PlainProof":{"lemmas":[],"prop_name":"elem y [] == elem x []"}}],[4.000472,{"InductiveProof":{"lemmas":[],"prop_name":"xs++[] == xs"}}],[4.112112,{"PlainProof":{"lemmas":[],"prop_name":"insert x [] == x:[]"}}],[4.119332,{"PlainProof":{"lemmas":[],"prop_name":"count y [] == count x []"}}],[4.132613,{"PlainProof":{"lemmas":[],"prop_name":"[]++xs == xs"}}],[4.134226,{"PlainProof":{"lemmas":[],"prop_name":"isort [] == []"}}],[6.254802,{"InductiveProof":{"lemmas":[],"prop_name":"elem x (ys++xs) == elem x (xs++ys)"}}],[10.292171,{"FailedProof":{"prop_name":"elem x (insert y xs) == elem x (y:xs)"}}],[14.324208,{"FailedProof":{"prop_name":"insert y (insert x xs) == insert x (insert y xs)"}}],[18.389903,{"FailedProof":{"prop_name":"count x (ys++xs) == count x (xs++ys)"}}],[22.442076,{"FailedProof":{"prop_name":"count x (insert y xs) == count x (y:xs)"}}],[24.474806,{"InductiveProof":{"lemmas":[],"prop_name":"(xs++ys)++zs == xs++(ys++zs)"}}],[24.51341,{"PlainProof":{"lemmas":[],"prop_name":"(x:xs)++ys == x:(xs++ys)"}}],[26.535415,{"FailedProof":{"prop_name":"sorted (insert x xs) == sorted xs"}}],[28.591209,{"FailedProof":{"prop_name":"isort (ys++xs) == isort (xs++ys)"}}],[30.612601,{"FailedProof":{"prop_name":"isort (insert x xs) == isort (x:xs)"}}],[32.632256,{"FailedProof":{"prop_name":"elem x (x:xs) == sorted []"}}],[34.652666,{"FailedProof":{"prop_name":"elem x (isort xs) == elem x xs"}}],[36.67704,{"FailedProof":{"prop_name":"elem x (xs++xs) == elem x xs"}}],[38.745101,{"FailedProof":{"prop_name":"insert x (x:xs) == x:(x:xs)"}}],[38.766992,{"PlainProof":{"lemmas":[],"prop_name":"insert x (isort xs) == isort (x:xs)"}}],[40.788527,{"FailedProof":{"prop_name":"count x (isort xs) == count x xs"}}],[41.804865,{"FailedProof":{"prop_name":"sorted (isort xs) == sorted []"}}],[42.814493,{"FailedProof":{"prop_name":"isort (isort xs) == isort xs"}}],[44.834568,{"FailedProof":{"prop_name":"elem y (x:[]) == elem x (y:[])"}}],[46.849256,{"FailedProof":{"prop_name":"count y (x:[]) == count x (y:[])"}}],[46.87531,{"PlainProof":{"lemmas":[],"prop_name":"insert (count x []) xs == count x []:xs"}}],[48.911455,{"FailedProof":{"prop_name":"count y (y:[]) == count x (x:[])"}}],[48.936451,{"Discard":{"discarded":["xs++[] == xs","[]++xs == xs","xs++[] == xs","[]++xs == xs","xs++[] == xs","[]++xs == xs","isort [] == []","[]++[] == []","[]++(xs++ys) == xs++ys","(xs++ys)++[] == xs++ys","[]++(xs++ys) == xs++ys","(xs++ys)++[] == xs++ys","[]++(xs++ys) == xs++ys","(xs++ys)++[] == xs++ys","[]++(xs++ys) == xs++ys","(xs++ys)++[] == xs++ys","[]++(xs++ys) == xs++ys","(xs++ys)++[] == xs++ys","[]++(xs++ys) == xs++ys","(xs++ys)++[] == xs++ys","elem x (isort xs) == elem x xs","elem x (xs++xs) == elem x xs","elem x (isort xs) == elem x xs","elem x (xs++xs) == elem x xs","elem x (isort xs) == elem x xs","elem x (xs++xs) == elem x xs","elem x (isort xs) == elem x xs","elem x (xs++xs) == elem x xs","elem x (isort xs) == elem x xs","elem x (xs++xs) == elem x xs","elem x (isort xs) == elem x xs","elem x (xs++xs) == elem x xs","elem x (isort xs) == elem x xs","elem x (xs++xs) == elem x xs","elem x (isort xs) == elem x xs","elem x (xs++xs) == elem x xs","elem x (isort xs) == elem x xs","elem x (xs++xs) == elem x xs","[]++(x:xs) == x:xs","(x:xs)++[] == x:xs","(x:[])++xs == x:xs","[]++(x:xs) == x:xs","(x:xs)++[] == x:xs","(x:[])++xs == x:xs","[]++(x:xs) == x:xs","(x:xs)++[] == x:xs","(x:[])++xs == x:xs","[]++(x:xs) == x:xs","(x:xs)++[] == x:xs","(x:[])++xs == x:xs","[]++(x:xs) == x:xs","(x:xs)++[] == x:xs","(x:[])++xs == x:xs","[]++(x:xs) == x:xs","(x:xs)++[] == x:xs","(x:[])++xs == x:xs","[]++(x:xs) == x:xs","(x:xs)++[] == x:xs","(x:[])++xs == x:xs","[]++(x:xs) == x:xs","(x:xs)++[] == x:xs","(x:[])++xs == x:xs","[]++(x:xs) == x:xs","(x:xs)++[] == x:xs","(x:[])++xs == x:xs","[]++insert x xs == insert x xs","insert x xs++[] == insert x xs","[]++insert x xs == insert x xs","insert x xs++[] == insert x xs","[]++insert x xs == insert x xs","insert x xs++[] == insert x xs","[]++insert x xs == insert x xs","insert x xs++[] == insert x xs","[]++insert x xs == insert x xs","insert x xs++[] == insert x xs","[]++insert x xs == insert x xs","insert x xs++[] == insert x xs","[]++insert x xs == insert x xs","insert x xs++[] == insert x xs","[]++insert x xs == insert x xs","insert x xs++[] == insert x xs","[]++insert x xs == insert x xs","insert x xs++[] == insert x xs","count x (isort xs) == count x xs","count x (isort xs) == count x xs","count x (isort xs) == count x xs","count x (isort xs) == count x xs","count x (isort xs) == count x xs","count x (isort xs) == count x xs","count x (isort xs) == count x xs","count x (isort xs) == count x xs","count x (isort xs) == count x xs","sorted (insert x xs) == sorted xs","sorted (insert x xs) == sorted xs","sorted (insert x xs) == sorted xs","sorted (insert x xs) == sorted xs","sorted (insert x xs) == sorted xs","sorted (insert x xs) == sorted xs","sorted (insert x xs) == sorted xs","sorted (insert x xs) == sorted xs","sorted (insert x xs) == sorted xs","isort (isort xs) == isort xs","[]++isort xs == isort xs","isort xs++[] == isort xs","isort (isort xs) == isort xs","[]++isort xs == isort xs","isort xs++[] == isort xs","isort (isort xs) == isort xs","[]++isort xs == isort xs","isort xs++[] == isort xs","[]++(xs++xs) == xs++xs","(xs++xs)++[] == xs++xs","[]++(xs++xs) == xs++xs","(xs++xs)++[] == xs++xs","[]++(xs++xs) == xs++xs","(xs++xs)++[] == xs++xs","elem x [] == elem y []","elem x [] == elem y []","elem (count x xs) [] == elem x []","elem (count x xs) [] == elem x []","elem (count x xs) [] == elem x []","elem (count x xs) [] == elem y []","elem (count x xs) [] == elem y []","elem (count x xs) [] == elem y []","elem (count x xs) [] == elem y []","elem (count x xs) [] == elem y []","elem (count x xs) [] == elem y []","elem (count x []) [] == elem x []","insert x [] == x:[]","isort (x:[]) == x:[]","[]++(x:[]) == x:[]","(x:[])++[] == x:[]","insert x [] == x:[]","isort (x:[]) == x:[]","[]++(x:[]) == x:[]","(x:[])++[] == x:[]","insert x [] == x:[]","isort (x:[]) == x:[]","[]++(x:[]) == x:[]","(x:[])++[] == x:[]","count x [] == count y []","count x [] == count y []","count (count x xs) [] == count x []","count (count x xs) [] == count x []","count (count x xs) [] == count x []","count (count x xs) [] == count y []","count (count x xs) [] == count y []","count (count x xs) [] == count y []","count (count x xs) [] == count y []","count (count x xs) [] == count y []","count (count x xs) [] == count y []","count (count x []) [] == count x []","elem x (x:xs) == sorted []","elem x (x:xs) == sorted []","elem x (x:xs) == sorted []","elem x (insert x xs) == sorted []","elem x (insert x xs) == sorted []","elem x (x:xs) == sorted []","elem x (x:xs) == sorted []","elem x (x:xs) == sorted []","elem x (insert x xs) == sorted []","elem x (insert x xs) == sorted []","elem x (insert x xs) == sorted []","elem x (x:xs) == sorted []","elem x (x:xs) == sorted []","elem x (x:xs) == sorted []","elem x (insert x xs) == sorted []","elem x (insert x xs) == sorted []","elem x (insert x xs) == sorted []","sorted (isort xs) == sorted []","sorted (isort xs) == sorted []","sorted (isort xs) == sorted []"]}}],[50.964363,{"FailedProof":{"prop_name":"elem x (insert x xs) == sorted []"}}],[50.973012,{"PlainProof":{"lemmas":[],"prop_name":"sorted (x:[]) == sorted []"}}],[50.973125,{"Discard":{"discarded":["sorted (x:[]) == sorted []","sorted (x:[]) == sorted []","elem x (x:[]) == sorted []","elem x (x:[]) == sorted []","(xs++ys)++zs == xs++(ys++zs)","(xs++ys)++zs == xs++(ys++zs)","(xs++ys)++zs == xs++(ys++zs)","(xs++ys)++zs == xs++(ys++zs)","(xs++ys)++zs == xs++(ys++zs)","(xs++ys)++zs == xs++(ys++zs)","elem x (xs++ys) == elem x (ys++xs)","elem x (xs++ys) == elem x (ys++xs)","elem x (xs++ys) == elem x (ys++xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (xs++ys) == elem x (ys++xs)","elem x (xs++ys) == elem x (ys++xs)","elem x (xs++ys) == elem x (ys++xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (xs++ys) == elem x (ys++xs)","elem x (xs++ys) == elem x (ys++xs)","elem x (xs++ys) == elem x (ys++xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","insert x (insert y xs) == insert y (insert x xs)","insert x (insert y xs) == insert y (insert x xs)","insert x (insert y xs) == insert y (insert x xs)","insert x (insert y xs) == insert y (insert x xs)","insert x (insert y xs) == insert y (insert x xs)","insert x (insert y xs) == insert y (insert x xs)","insert x (insert y xs) == insert y (insert x xs)","insert x (insert y xs) == insert y (insert x xs)","insert x (insert y xs) == insert y (insert x xs)","count x (xs++ys) == count x (ys++xs)","count x (xs++ys) == count x (ys++xs)","count x (xs++ys) == count x (ys++xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (xs++ys) == count x (ys++xs)","count x (xs++ys) == count x (ys++xs)","count x (xs++ys) == count x (ys++xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (xs++ys) == count x (ys++xs)","count x (xs++ys) == count x (ys++xs)","count x (xs++ys) == count x (ys++xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)"]}}],[51.987415,{"InductiveProof":{"lemmas":[],"prop_name":"elem x (x:[]) == sorted []"}}],[56.066111,{"FailedProof":{"prop_name":"elem (count x xs) (isort ys) == elem (count x xs) ys"}}],[56.066289,{"Discard":{"discarded":["elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys"]}}],[60.156089,{"FailedProof":{"prop_name":"elem (count x xs) (ys++ys) == elem (count x xs) ys"}}],[64.22692,{"FailedProof":{"prop_name":"count (count x xs) (isort ys) == count (count x xs) ys"}}],[64.227023,{"Discard":{"discarded":["count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","isort (xs++ys) == isort (ys++xs)","isort (xs++ys) == isort (ys++xs)","isort (xs++ys) == isort (ys++xs)","isort (insert x xs) == isort (x:xs)","insert x (isort xs) == isort (x:xs)","isort (insert x xs) == isort (x:xs)","insert x (isort xs) == isort (x:xs)","isort (insert x xs) == isort (x:xs)","insert x (isort xs) == isort (x:xs)","isort (insert x xs) == isort (x:xs)","insert x (isort xs) == isort (x:xs)","isort (insert x xs) == isort (x:xs)","insert x (isort xs) == isort (x:xs)","isort (insert x xs) == isort (x:xs)","insert x (isort xs) == isort (x:xs)","isort (insert x xs) == isort (x:xs)","insert x (isort xs) == isort (x:xs)","isort (insert x xs) == isort (x:xs)","insert x (isort xs) == isort (x:xs)","isort (insert x xs) == isort (x:xs)","insert x (isort xs) == isort (x:xs)","(xs++xs)++ys == xs++(xs++ys)","(xs++xs)++ys == xs++(xs++ys)","(xs++ys)++xs == xs++(ys++xs)","(xs++ys)++xs == xs++(ys++xs)","(xs++ys)++ys == xs++(ys++ys)","(xs++ys)++ys == xs++(ys++ys)","(xs++ys)++xs == xs++(ys++xs)","(xs++xs)++ys == xs++(xs++ys)","(xs++xs)++ys == xs++(xs++ys)","(xs++ys)++xs == xs++(ys++xs)","(xs++ys)++ys == xs++(ys++ys)","(xs++ys)++ys == xs++(ys++ys)","(xs++ys)++xs == xs++(ys++xs)","(xs++ys)++xs == xs++(ys++xs)","(xs++xs)++ys == xs++(xs++ys)","(xs++xs)++ys == xs++(xs++ys)","(xs++ys)++ys == xs++(ys++ys)","(xs++ys)++ys == xs++(ys++ys)","insert x (x:xs) == x:(x:xs)","(x:[])++(x:xs) == x:(x:xs)","insert x (x:xs) == x:(x:xs)","(x:[])++(x:xs) == x:(x:xs)","insert x (x:xs) == x:(x:xs)","(x:[])++(x:xs) == x:(x:xs)","(x:[])++insert x xs == x:insert x xs","(x:[])++insert x xs == x:insert x xs","(x:[])++insert x xs == x:insert x xs","(x:[])++isort xs == x:isort xs","(x:[])++isort xs == x:isort xs","(x:[])++isort xs == x:isort xs","(x:xs)++xs == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","(x:xs)++xs == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","(x:xs)++xs == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","insert x (x:xs) == x:(x:xs)","(x:[])++(x:xs) == x:(x:xs)","insert x (x:xs) == x:(x:xs)","(x:[])++(x:xs) == x:(x:xs)","insert x (x:xs) == x:(x:xs)","(x:[])++(x:xs) == x:(x:xs)","(x:[])++insert x xs == x:insert x xs","(x:[])++insert x xs == x:insert x xs","(x:[])++insert x xs == x:insert x xs","(x:[])++isort xs == x:isort xs","(x:[])++isort xs == x:isort xs","(x:[])++isort xs == x:isort xs","(x:xs)++xs == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","(x:xs)++xs == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","(x:xs)++xs == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","insert x (x:xs) == x:(x:xs)","(x:[])++(x:xs) == x:(x:xs)","insert x (x:xs) == x:(x:xs)","(x:[])++(x:xs) == x:(x:xs)","insert x (x:xs) == x:(x:xs)","(x:[])++(x:xs) == x:(x:xs)","(x:[])++insert x xs == x:insert x xs","(x:[])++insert x xs == x:insert x xs","(x:[])++insert x xs == x:insert x xs","(x:[])++isort xs == x:isort xs","(x:[])++isort xs == x:isort xs","(x:[])++isort xs == x:isort xs","(x:xs)++xs == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","(x:xs)++xs == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","(x:xs)++xs == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","count x (insert x xs) == count x (x:xs)","count x (insert x xs) == count x (x:xs)","count x (insert x xs) == count x (x:xs)","count x (insert x xs) == count x (x:xs)","count x (insert x xs) == count x (x:xs)","count x (insert x xs) == count x (x:xs)","count x (insert x xs) == count x (x:xs)","count x (insert x xs) == count x (x:xs)"]}}],[66.261465,{"FailedProof":{"prop_name":"count x (insert x xs) == count x (x:xs)"}}],[68.28428,{"FailedProof":{"prop_name":"elem (count x xs) (isort xs) == elem (count x xs) xs"}}],[68.284408,{"Discard":{"discarded":["elem (count x xs) (isort xs) == elem (count x xs) xs","elem (count x xs) (xs++xs) == elem (count x xs) xs","elem (count x xs) (isort xs) == elem (count x xs) xs","elem (count x xs) (xs++xs) == elem (count x xs) xs","elem (count x xs) (isort xs) == elem (count x xs) xs","elem (count x xs) (xs++xs) == elem (count x xs) xs","elem (count x xs) (isort xs) == elem (count x xs) xs","elem (count x xs) (xs++xs) == elem (count x xs) xs","elem (count x xs) (isort xs) == elem (count x xs) xs","elem (count x xs) (xs++xs) == elem (count x xs) xs","elem (count x xs) (isort xs) == elem (count x xs) xs","elem (count x xs) (xs++xs) == elem (count x xs) xs","elem (count x xs) (isort xs) == elem (count x xs) xs","elem (count x xs) (xs++xs) == elem (count x xs) xs","elem (count x xs) (isort xs) == elem (count x xs) xs","elem (count x xs) (xs++xs) == elem (count x xs) xs"]}}],[70.318448,{"FailedProof":{"prop_name":"elem (count x xs) (xs++xs) == elem (count x xs) xs"}}],[72.344942,{"FailedProof":{"prop_name":"count (count x xs) (isort xs) == count (count x xs) xs"}}],[72.345027,{"Discard":{"discarded":["count (count x xs) (isort xs) == count (count x xs) xs","count (count x xs) (isort xs) == count (count x xs) xs","count (count x xs) (isort xs) == count (count x xs) xs","count (count x xs) (isort xs) == count (count x xs) xs","count (count x xs) (isort xs) == count (count x xs) xs","count (count x xs) (isort xs) == count (count x xs) xs","count (count x xs) (isort xs) == count (count x xs) xs","count (count x xs) (isort xs) == count (count x xs) xs","(xs++xs)++xs == xs++(xs++xs)","(xs++xs)++xs == xs++(xs++xs)","(xs++xs)++xs == xs++(xs++xs)","elem (count x xs) (ys++zs) == elem (count x xs) (zs++ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (ys++zs) == elem (count x xs) (zs++ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (ys++zs) == elem (count x xs) (zs++ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (ys++zs) == elem (count x xs) (zs++ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (ys++zs) == elem (count x xs) (zs++ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (ys++zs) == elem (count x xs) (zs++ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (ys++zs) == elem (count x xs) (zs++ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (ys++zs) == elem (count x xs) (zs++ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (ys++zs) == elem (count x xs) (zs++ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)"]}}],[80.496054,{"FailedProof":{"prop_name":"elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)"}}],[87.655837,{"FailedProof":{"prop_name":"count (count x xs) (zs++ys) == count (count x xs) (ys++zs)"}}],[87.655947,{"Discard":{"discarded":["count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (ys++zs) == count (count x xs) (zs++ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (ys++zs) == count (count x xs) (zs++ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (ys++zs) == count (count x xs) (zs++ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (ys++zs) == count (count x xs) (zs++ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (ys++zs) == count (count x xs) (zs++ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (ys++zs) == count (count x xs) (zs++ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (ys++zs) == count (count x xs) (zs++ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (ys++zs) == count (count x xs) (zs++ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","elem (count x xs) (ys++xs) == elem (count x xs) (xs++ys)","elem (count x xs) (ys++xs) == elem (count x xs) (xs++ys)"]}}],[95.876366,{"FailedProof":{"prop_name":"count (count x xs) (insert y ys) == count (count x xs) (y:ys)"}}],[99.931922,{"FailedProof":{"prop_name":"elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)"}}],[99.932014,{"Discard":{"discarded":["elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (xs++ys) == elem (count x xs) (ys++xs)","elem (count x xs) (ys++xs) == elem (count x xs) (xs++ys)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (xs++ys) == elem (count x xs) (ys++xs)","elem (count x xs) (xs++ys) == elem (count x xs) (ys++xs)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (ys++xs) == elem (count x xs) (xs++ys)","elem (count x xs) (ys++xs) == elem (count x xs) (xs++ys)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (xs++ys) == elem (count x xs) (ys++xs)","elem (count x xs) (ys++xs) == elem (count x xs) (xs++ys)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (xs++ys) == elem (count x xs) (ys++xs)","elem (count x xs) (xs++ys) == elem (count x xs) (ys++xs)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (ys++xs) == elem (count x xs) (xs++ys)","elem (count x xs) (ys++xs) == elem (count x xs) (xs++ys)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (xs++ys) == elem (count x xs) (ys++xs)","elem (count x xs) (ys++xs) == elem (count x xs) (xs++ys)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (xs++ys) == elem (count x xs) (ys++xs)","elem (count x xs) (xs++ys) == elem (count x xs) (ys++xs)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)"]}}],[104.004322,{"FailedProof":{"prop_name":"elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)"}}],[108.081631,{"FailedProof":{"prop_name":"count (count x xs) (ys++xs) == count (count x xs) (xs++ys)"}}],[108.081704,{"Discard":{"discarded":["count (count x xs) (ys++xs) == count (count x xs) (xs++ys)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)"]}}],[112.25242,{"FailedProof":{"prop_name":"count (count x xs) (insert x ys) == count (count x xs) (x:ys)"}}],[116.302474,{"FailedProof":{"prop_name":"count (count x xs) (insert y xs) == count (count x xs) (y:xs)"}}],[116.302563,{"Discard":{"discarded":["count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (ys++xs) == count (count x xs) (xs++ys)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (xs++ys) == count (count x xs) (ys++xs)","count (count x xs) (xs++ys) == count (count x xs) (ys++xs)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (ys++xs) == count (count x xs) (xs++ys)","count (count x xs) (ys++xs) == count (count x xs) (xs++ys)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (xs++ys) == count (count x xs) (ys++xs)","count (count x xs) (ys++xs) == count (count x xs) (xs++ys)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (xs++ys) == count (count x xs) (ys++xs)","count (count x xs) (xs++ys) == count (count x xs) (ys++xs)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (ys++xs) == count (count x xs) (xs++ys)","count (count x xs) (ys++xs) == count (count x xs) (xs++ys)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (xs++ys) == count (count x xs) (ys++xs)","count (count x xs) (ys++xs) == count (count x xs) (xs++ys)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (xs++ys) == count (count x xs) (ys++xs)","count (count x xs) (xs++ys) == count (count x xs) (ys++xs)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","elem x (y:[]) == elem y (x:[])","elem x (y:[]) == elem y (x:[])","elem x (y:[]) == elem y (x:[])","(x:[])++(y:[]) == x:(y:[])","(x:[])++(y:[]) == x:(y:[])","(x:[])++(y:[]) == x:(y:[])","(x:[])++(y:[]) == x:(y:[])","(x:[])++(y:[]) == x:(y:[])","(x:[])++(y:[]) == x:(y:[])"]}}],[120.395023,{"FailedProof":{"prop_name":"count (count x ys) (ys++xs) == count (count x ys) (xs++ys)"}}],[122.402974,{"FailedProof":{"prop_name":"insert y (x:[]) == insert x (y:[])"}}],[122.403041,{"Discard":{"discarded":["insert x (y:[]) == insert y (x:[])","insert x (y:[]) == insert y (x:[])","count x (y:[]) == count y (x:[])","count x (y:[]) == count y (x:[])","count x (y:[]) == count y (x:[])","elem (count x xs) (insert x xs) == elem (count x xs) (x:xs)","elem (count x xs) (insert x xs) == elem (count x xs) (x:xs)","elem (count x xs) (insert x xs) == elem (count x xs) (x:xs)","elem (count x xs) (insert x xs) == elem (count x xs) (x:xs)","elem (count x xs) (insert x xs) == elem (count x xs) (x:xs)","elem (count x xs) (insert x xs) == elem (count x xs) (x:xs)","elem (count x xs) (insert x xs) == elem (count x xs) (x:xs)","elem (count x xs) (insert x xs) == elem (count x xs) (x:xs)","insert (count x xs) [] == count x xs:[]","insert (count x xs) [] == count x xs:[]","insert (count x xs) [] == count x xs:[]","insert (count x xs) [] == count x xs:[]","insert (count x xs) [] == count x xs:[]","insert (count x xs) [] == count x xs:[]","insert (count x xs) [] == count x xs:[]","insert (count x xs) [] == count x xs:[]","insert (count x xs) [] == count x xs:[]"]}}],[124.434017,{"FailedProof":{"prop_name":"elem (count x xs) (insert x xs) == elem (count x xs) (x:xs)"}}],[126.457967,{"FailedProof":{"prop_name":"count (count x xs) (insert x xs) == count (count x xs) (x:xs)"}}],[126.458058,{"Discard":{"discarded":["count (count x xs) (insert x xs) == count (count x xs) (x:xs)","count (count x xs) (insert x xs) == count (count x xs) (x:xs)","count (count x xs) (insert x xs) == count (count x xs) (x:xs)","count (count x xs) (insert x xs) == count (count x xs) (x:xs)","count (count x xs) (insert x xs) == count (count x xs) (x:xs)","count (count x xs) (insert x xs) == count (count x xs) (x:xs)","count (count x xs) (insert x xs) == count (count x xs) (x:xs)","count (count x xs) (insert x xs) == count (count x xs) (x:xs)"]}}],[128.502659,{"FailedProof":{"prop_name":"elem (count x []) (isort xs) == elem (count x []) xs"}}],[130.511952,{"InductiveProof":{"lemmas":[],"prop_name":"elem (count x []) (xs++xs) == elem (count x []) xs"}}],[130.51202,{"Discard":{"discarded":["elem (count x []) (isort xs) == elem (count x []) xs","elem (count x []) (xs++xs) == elem (count x []) xs","elem (count x []) (isort xs) == elem (count x []) xs","elem (count x []) (xs++xs) == elem (count x []) xs","insert (count x []) xs == count x []:xs","insert (count x []) xs == count x []:xs","insert (count x []) xs == count x []:xs","count (count x []) (isort xs) == count (count x []) xs","count (count x []) (isort xs) == count (count x []) xs"]}}],[132.564375,{"FailedProof":{"prop_name":"count (count x []) (isort xs) == count (count x []) xs"}}],[133.549664,{"InductiveProof":{"lemmas":[],"prop_name":"insert x (x:[]) == x:(x:[])"}}],[133.549834,{"Discard":{"discarded":["(x:[])++(x:[]) == x:(x:[])","insert x (x:[]) == x:(x:[])","(x:[])++(x:[]) == x:(x:[])","insert x (x:[]) == x:(x:[])","(x:[])++(x:[]) == x:(x:[])","count x (x:[]) == count y (y:[])","count x (x:[]) == count y (y:[])","elem (count x []) (xs++ys) == elem (count x []) (ys++xs)","elem (count x []) (xs++ys) == elem (count x []) (ys++xs)","elem (count x []) (xs++ys) == elem (count x []) (ys++xs)","elem (count x []) (insert y xs) == elem (count x []) (y:xs)","elem (count x []) (insert y xs) == elem (count x []) (y:xs)","elem (count x []) (insert y xs) == elem (count x []) (y:xs)","elem (count x []) (insert y xs) == elem (count x []) (y:xs)","elem (count x []) (insert y xs) == elem (count x []) (y:xs)","insert (count x []) (xs++ys) == count x []:(xs++ys)","insert (count x []) (xs++ys) == count x []:(xs++ys)","insert (count x []) (xs++ys) == count x []:(xs++ys)","insert (count x []) (xs++ys) == count x []:(xs++ys)","insert (count x []) (xs++ys) == count x []:(xs++ys)","insert (count x []) (xs++ys) == count x []:(xs++ys)","insert (count x []) (y:xs) == count x []:(y:xs)","insert (count x []) (y:xs) == count x []:(y:xs)","insert (count x []) (y:xs) == count x []:(y:xs)","insert (count x []) (y:xs) == count x []:(y:xs)","insert (count x []) (y:xs) == count x []:(y:xs)","insert (count x []) (y:xs) == count x []:(y:xs)","insert (count x []) (insert y xs) == count x []:insert y xs","insert (count x []) (insert y xs) == count x []:insert y xs","insert (count x []) (insert y xs) == count x []:insert y xs","insert (count x []) (insert y xs) == count x []:insert y xs","insert (count x []) (insert y xs) == count x []:insert y xs","insert (count x []) (insert y xs) == count x []:insert y xs"]}}],[137.723482,{"FailedProof":{"prop_name":"elem (count x []) (insert y xs) == elem (count x []) (y:xs)"}}],[141.893896,{"FailedProof":{"prop_name":"count (count x []) (ys++xs) == count (count x []) (xs++ys)"}}],[141.893954,{"Discard":{"discarded":["count (count x []) (xs++ys) == count (count x []) (ys++xs)","count (count x []) (xs++ys) == count (count x []) (ys++xs)","count (count x []) (insert y xs) == count (count x []) (y:xs)","count (count x []) (insert y xs) == count (count x []) (y:xs)","count (count x []) (insert y xs) == count (count x []) (y:xs)","count (count x []) (insert y xs) == count (count x []) (y:xs)","count (count x []) (insert y xs) == count (count x []) (y:xs)"]}}],[146.062352,{"FailedProof":{"prop_name":"count (count x []) (insert y xs) == count (count x []) (y:xs)"}}],[148.08696,{"FailedProof":{"prop_name":"elem (count x []) (insert x xs) == elem (count x []) (x:xs)"}}],[148.087028,{"Discard":{"discarded":["elem (count x []) (insert x xs) == elem (count x []) (x:xs)","elem (count x []) (insert x xs) == elem (count x []) (x:xs)","insert (count x []) (x:xs) == count x []:(x:xs)","insert (count x []) (x:xs) == count x []:(x:xs)","insert (count x []) (x:xs) == count x []:(x:xs)","insert (count x []) (insert x xs) == count x []:insert x xs","insert (count x []) (insert x xs) == count x []:insert x xs","insert (count x []) (insert x xs) == count x []:insert x xs","insert (count x []) (isort xs) == count x []:isort xs","insert (count x []) (isort xs) == count x []:isort xs","insert (count x []) (isort xs) == count x []:isort xs","insert (count x []) (xs++xs) == count x []:(xs++xs)","insert (count x []) (xs++xs) == count x []:(xs++xs)","insert (count x []) (xs++xs) == count x []:(xs++xs)","count (count x []) (insert x xs) == count (count x []) (x:xs)","count (count x []) (insert x xs) == count (count x []) (x:xs)","insert (count x []) [] == count x []:[]","insert (count x []) (y:[]) == count x []:(y:[])","insert (count x []) (y:[]) == count x []:(y:[])","insert (count x []) (x:[]) == count x []:(x:[])"]}}],[150.115011,{"FailedProof":{"prop_name":"count (count x []) (insert x xs) == count (count x []) (x:xs)"}}],[154.176947,{"FailedProof":{"prop_name":"elem x (insert y xs) == elem x (y:xs)"}}],[158.194848,{"FailedProof":{"prop_name":"insert y (insert x xs) == insert x (insert y xs)"}}],[162.286471,{"FailedProof":{"prop_name":"count x (ys++xs) == count x (xs++ys)"}}],[166.335429,{"FailedProof":{"prop_name":"count x (insert y xs) == count x (y:xs)"}}],[168.366145,{"FailedProof":{"prop_name":"sorted (insert x xs) == sorted xs"}}],[170.407463,{"FailedProof":{"prop_name":"isort (ys++xs) == isort (xs++ys)"}}],[172.444057,{"FailedProof":{"prop_name":"isort (insert x xs) == isort (x:xs)"}}],[174.472941,{"FailedProof":{"prop_name":"elem x (x:xs) == sorted []"}}],[176.504606,{"FailedProof":{"prop_name":"elem x (isort xs) == elem x xs"}}],[178.527524,{"FailedProof":{"prop_name":"elem x (xs++xs) == elem x xs"}}],[180.559496,{"FailedProof":{"prop_name":"insert x (x:xs) == x:(x:xs)"}}],[182.581236,{"FailedProof":{"prop_name":"count x (isort xs) == count x xs"}}],[183.598832,{"FailedProof":{"prop_name":"sorted (isort xs) == sorted []"}}],[184.609082,{"FailedProof":{"prop_name":"isort (isort xs) == isort xs"}}],[186.632684,{"FailedProof":{"prop_name":"elem y (x:[]) == elem x (y:[])"}}],[188.649141,{"FailedProof":{"prop_name":"count y (x:[]) == count x (y:[])"}}],[190.683805,{"InductiveProof":{"lemmas":[],"prop_name":"count y (y:[]) == count x (x:[])"}}],[192.713104,{"FailedProof":{"prop_name":"elem x (insert x xs) == sorted []"}}],[196.871324,{"FailedProof":{"prop_name":"elem (count x xs) (isort ys) == elem (count x xs) ys"}}],[200.978918,{"FailedProof":{"prop_name":"elem (count x xs) (ys++ys) == elem (count x xs) ys"}}],[205.053618,{"FailedProof":{"prop_name":"count (count x xs) (isort ys) == count (count x xs) ys"}}],[207.076658,{"FailedProof":{"prop_name":"count x (insert x xs) == count x (x:xs)"}}],[209.106901,{"FailedProof":{"prop_name":"elem (count x xs) (isort xs) == elem (count x xs) xs"}}],[211.129396,{"FailedProof":{"prop_name":"elem (count x xs) (xs++xs) == elem (count x xs) xs"}}],[213.170264,{"FailedProof":{"prop_name":"count (count x xs) (isort xs) == count (count x xs) xs"}}],[221.292115,{"FailedProof":{"prop_name":"elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)"}}],[229.470893,{"FailedProof":{"prop_name":"count (count x xs) (zs++ys) == count (count x xs) (ys++zs)"}}],[236.644567,{"FailedProof":{"prop_name":"count (count x xs) (insert y ys) == count (count x xs) (y:ys)"}}],[240.706577,{"FailedProof":{"prop_name":"elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)"}}],[244.757106,{"FailedProof":{"prop_name":"elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)"}}],[248.854953,{"FailedProof":{"prop_name":"count (count x xs) (ys++xs) == count (count x xs) (xs++ys)"}}],[252.904762,{"FailedProof":{"prop_name":"count (count x xs) (insert x ys) == count (count x xs) (x:ys)"}}],[256.972656,{"FailedProof":{"prop_name":"count (count x xs) (insert y xs) == count (count x xs) (y:xs)"}}],[261.054585,{"FailedProof":{"prop_name":"count (count x ys) (ys++xs) == count (count x ys) (xs++ys)"}}],[263.079228,{"FailedProof":{"prop_name":"insert y (x:[]) == insert x (y:[])"}}],[265.103486,{"FailedProof":{"prop_name":"elem (count x xs) (insert x xs) == elem (count x xs) (x:xs)"}}],[267.136074,{"FailedProof":{"prop_name":"count (count x xs) (insert x xs) == count (count x xs) (x:xs)"}}],[269.176728,{"FailedProof":{"prop_name":"elem (count x []) (isort xs) == elem (count x []) xs"}}],[271.22531,{"FailedProof":{"prop_name":"count (count x []) (isort xs) == count (count x []) xs"}}],[275.390176,{"FailedProof":{"prop_name":"elem (count x []) (insert y xs) == elem (count x []) (y:xs)"}}],[279.588267,{"FailedProof":{"prop_name":"count (count x []) (ys++xs) == count (count x []) (xs++ys)"}}],[283.751381,{"FailedProof":{"prop_name":"count (count x []) (insert y xs) == count (count x []) (y:xs)"}}],[285.781418,{"FailedProof":{"prop_name":"elem (count x []) (insert x xs) == elem (count x []) (x:xs)"}}],[287.804995,{"FailedProof":{"prop_name":"count (count x []) (insert x xs) == count (count x []) (x:xs)"}}],[291.882057,{"FailedProof":{"prop_name":"elem x (insert y xs) == elem x (y:xs)"}}],[295.899356,{"FailedProof":{"prop_name":"insert y (insert x xs) == insert x (insert y xs)"}}],[299.989223,{"FailedProof":{"prop_name":"count x (ys++xs) == count x (xs++ys)"}}],[304.046727,{"FailedProof":{"prop_name":"count x (insert y xs) == count x (y:xs)"}}],[306.07682,{"FailedProof":{"prop_name":"sorted (insert x xs) == sorted xs"}}],[308.115035,{"FailedProof":{"prop_name":"isort (ys++xs) == isort (xs++ys)"}}],[310.147582,{"FailedProof":{"prop_name":"isort (insert x xs) == isort (x:xs)"}}],[312.189632,{"FailedProof":{"prop_name":"elem x (x:xs) == sorted []"}}],[314.22027,{"FailedProof":{"prop_name":"elem x (isort xs) == elem x xs"}}],[316.243002,{"FailedProof":{"prop_name":"elem x (xs++xs) == elem x xs"}}],[318.277434,{"FailedProof":{"prop_name":"insert x (x:xs) == x:(x:xs)"}}],[320.2996,{"FailedProof":{"prop_name":"count x (isort xs) == count x xs"}}],[321.329352,{"FailedProof":{"prop_name":"sorted (isort xs) == sorted []"}}],[322.342369,{"FailedProof":{"prop_name":"isort (isort xs) == isort xs"}}],[324.36582,{"FailedProof":{"prop_name":"elem y (x:[]) == elem x (y:[])"}}],[326.382154,{"FailedProof":{"prop_name":"count y (x:[]) == count x (y:[])"}}],[328.420075,{"FailedProof":{"prop_name":"elem x (insert x xs) == sorted []"}}],[332.49566,{"FailedProof":{"prop_name":"elem (count x xs) (isort ys) == elem (count x xs) ys"}}],[336.617465,{"FailedProof":{"prop_name":"elem (count x xs) (ys++ys) == elem (count x xs) ys"}}],[340.688391,{"FailedProof":{"prop_name":"count (count x xs) (isort ys) == count (count x xs) ys"}}],[342.716623,{"FailedProof":{"prop_name":"count x (insert x xs) == count x (x:xs)"}}],[344.740274,{"FailedProof":{"prop_name":"elem (count x xs) (isort xs) == elem (count x xs) xs"}}],[346.770563,{"FailedProof":{"prop_name":"elem (count x xs) (xs++xs) == elem (count x xs) xs"}}],[348.794225,{"FailedProof":{"prop_name":"count (count x xs) (isort xs) == count (count x xs) xs"}}],[356.965766,{"FailedProof":{"prop_name":"elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)"}}],[364.135971,{"FailedProof":{"prop_name":"count (count x xs) (zs++ys) == count (count x xs) (ys++zs)"}}],[372.298839,{"FailedProof":{"prop_name":"count (count x xs) (insert y ys) == count (count x xs) (y:ys)"}}],[376.340837,{"FailedProof":{"prop_name":"elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)"}}],[380.506653,{"FailedProof":{"prop_name":"elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)"}}],[384.586011,{"FailedProof":{"prop_name":"count (count x xs) (ys++xs) == count (count x xs) (xs++ys)"}}],[388.647116,{"FailedProof":{"prop_name":"count (count x xs) (insert x ys) == count (count x xs) (x:ys)"}}],[392.696791,{"FailedProof":{"prop_name":"count (count x xs) (insert y xs) == count (count x xs) (y:xs)"}}],[396.78419,{"FailedProof":{"prop_name":"count (count x ys) (ys++xs) == count (count x ys) (xs++ys)"}}],[398.792261,{"FailedProof":{"prop_name":"insert y (x:[]) == insert x (y:[])"}}],[400.825604,{"FailedProof":{"prop_name":"elem (count x xs) (insert x xs) == elem (count x xs) (x:xs)"}}],[402.849577,{"FailedProof":{"prop_name":"count (count x xs) (insert x xs) == count (count x xs) (x:xs)"}}],[404.900847,{"FailedProof":{"prop_name":"elem (count x []) (isort xs) == elem (count x []) xs"}}],[406.940586,{"FailedProof":{"prop_name":"count (count x []) (isort xs) == count (count x []) xs"}}],[411.118098,{"FailedProof":{"prop_name":"elem (count x []) (insert y xs) == elem (count x []) (y:xs)"}}],[415.292385,{"FailedProof":{"prop_name":"count (count x []) (ys++xs) == count (count x []) (xs++ys)"}}],[419.46446,{"FailedProof":{"prop_name":"count (count x []) (insert y xs) == count (count x []) (y:xs)"}}],[421.48887,{"FailedProof":{"prop_name":"elem (count x []) (insert x xs) == elem (count x []) (x:xs)"}}],[423.513102,{"FailedProof":{"prop_name":"count (count x []) (insert x xs) == count (count x []) (x:xs)"}}],[423.513106,{"StartingUserLemmas":[]}],[424.613074,{"FailedProof":{"prop_name":"prop_T15"}}],[425.622142,{"FailedProof":{"prop_name":"prop_T1"}}],[434.514948,{"FailedProof":{"prop_name":"prop_T9"}}],[438.588226,{"FailedProof":{"prop_name":"prop_T8"}}],[439.020216,{"InductiveProof":{"lemmas":[],"prop_name":"prop_T39"}}],[440.019219,{"InductiveProof":{"lemmas":[],"prop_name":"prop_T38"}}],[440.427167,{"InductiveProof":{"lemmas":[],"prop_name":"prop_T37"}}],[441.36136,{"InductiveProof":{"lemmas":[],"prop_name":"prop_T36"}}],[443.37281,{"FailedProof":{"prop_name":"prop_T24"}}],[444.378379,{"FailedProof":{"prop_name":"prop_T16"}}],[446.390177,{"FailedProof":{"prop_name":"prop_T26"}}],[447.396646,{"FailedProof":{"prop_name":"prop_T13"}}],[452.232233,{"FailedProof":{"prop_name":"prop_T47"}}],[453.227295,{"InductiveProof":{"lemmas":[],"prop_name":"prop_T46"}}],[455.26886,{"FailedProof":{"prop_name":"prop_T45"}}],[459.430746,{"FailedProof":{"prop_name":"prop_T44"}}],[461.356009,{"FailedProof":{"prop_name":"prop_T50"}}],[463.382843,{"FailedProof":{"prop_name":"prop_T49"}}],[464.412804,{"FailedProof":{"prop_name":"prop_T48"}}],[465.426676,{"FailedProof":{"prop_name":"prop_T4"}}],[467.477476,{"FailedProof":{"prop_name":"prop_T3"}}],[469.496025,{"FailedProof":{"prop_name":"prop_T25"}}],[471.536782,{"FailedProof":{"prop_name":"prop_T23"}}],[473.568227,{"FailedProof":{"prop_name":"prop_T22"}}],[474.580798,{"FailedProof":{"prop_name":"prop_T20"}}],[476.616408,{"FailedProof":{"prop_name":"prop_T2"}}],[478.610467,{"FailedProof":{"prop_name":"prop_T34"}}],[480.623731,{"FailedProof":{"prop_name":"prop_T35"}}],[481.629855,{"FailedProof":{"prop_name":"prop_T33"}}],[483.665657,{"FailedProof":{"prop_name":"prop_T7"}}],[484.684484,{"FailedProof":{"prop_name":"prop_T31"}}],[486.707382,{"FailedProof":{"prop_name":"prop_T6"}}],[487.724952,{"FailedProof":{"prop_name":"prop_T5"}}],[488.734622,{"FailedProof":{"prop_name":"prop_T30"}}],[489.745429,{"FailedProof":{"prop_name":"prop_T29"}}],[490.754929,{"FailedProof":{"prop_name":"prop_T27"}}],[492.776482,{"FailedProof":{"prop_name":"prop_T19"}}],[494.853014,{"FailedProof":{"prop_name":"prop_T17"}}],[495.823525,{"InductiveProof":{"lemmas":[],"prop_name":"prop_T12"}}],[496.836936,{"FailedProof":{"prop_name":"prop_T10"}}],[498.855989,{"FailedProof":{"prop_name":"prop_G6"}}],[499.861357,{"InductiveProof":{"lemmas":[],"prop_name":"prop_G5"}}],[500.874607,{"FailedProof":{"prop_name":"prop_T32"}}],[501.880039,{"InductiveProof":{"lemmas":[],"prop_name":"prop_G9"}}],[502.091876,{"InductiveProof":{"lemmas":[],"prop_name":"prop_T43"}}],[506.254436,{"FailedProof":{"prop_name":"prop_T42"}}],[508.280699,{"FailedProof":{"prop_name":"prop_T41"}}],[509.285181,{"InductiveProof":{"lemmas":[],"prop_name":"prop_T40"}}],[510.296054,{"FailedProof":{"prop_name":"prop_T14"}}],[510.296083,{"Finished":{"unproved":["prop_T15","prop_T1","prop_T9","prop_T8","prop_T24","prop_T16","prop_T26","prop_T13","prop_T47","prop_T45","prop_T44","prop_T50","prop_T49","prop_T48","prop_T4","prop_T3","prop_T25","prop_T23","prop_T22","prop_T20","prop_T2","prop_T34","prop_T35","prop_T33","prop_T7","prop_T31","prop_T6","prop_T5","prop_T30","prop_T29","prop_T27","prop_T19","prop_T17","prop_T10","prop_G6","prop_T32","prop_T42","prop_T41","prop_T14"],"qs_unproved":["elem x (insert y xs) == elem x (y:xs)","insert x (insert y xs) == insert y (insert x xs)","count x (xs++ys) == count x (ys++xs)","count x (insert y xs) == count x (y:xs)","sorted (insert x xs) == sorted xs","isort (xs++ys) == isort (ys++xs)","isort (insert x xs) == isort (x:xs)","elem x (x:xs) == sorted []","elem x (isort xs) == elem x xs","elem x (xs++xs) == elem x xs","insert x (x:xs) == x:(x:xs)","count x (isort xs) == count x xs","sorted (isort xs) == sorted []","isort (isort xs) == isort xs","elem x (y:[]) == elem y (x:[])","count x (y:[]) == count y (x:[])","elem x (insert x xs) == sorted []","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count x (insert x xs) == count x (x:xs)","elem (count x xs) (isort xs) == elem (count x xs) xs","elem (count x xs) (xs++xs) == elem (count x xs) xs","count (count x xs) (isort xs) == count (count x xs) xs","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","count (count x xs) (ys++zs) == count (count x xs) (zs++ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","count (count x xs) (ys++xs) == count (count x xs) (xs++ys)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (xs++ys) == count (count x xs) (ys++xs)","insert x (y:[]) == insert y (x:[])","elem (count x xs) (insert x xs) == elem (count x xs) (x:xs)","count (count x xs) (insert x xs) == count (count x xs) (x:xs)","elem (count x []) (isort xs) == elem (count x []) xs","count (count x []) (isort xs) == count (count x []) xs","elem (count x []) (insert y xs) == elem (count x []) (y:xs)","count (count x []) (xs++ys) == count (count x []) (ys++xs)","count (count x []) (insert y xs) == count (count x []) (y:xs)","elem (count x []) (insert x xs) == elem (count x []) (x:xs)","count (count x []) (insert x xs) == count (count x []) (x:xs)"],"proved":["prop_T39","prop_T38","prop_T37","prop_T36","prop_T46","prop_T12","prop_G5","prop_G9","prop_T43","prop_T40"],"qs_proved":["xs++[] == xs","elem x (ys++xs) == elem x (xs++ys)","(xs++ys)++zs == xs++(ys++zs)","elem x (x:[]) == sorted []","elem (count x []) (xs++xs) == elem (count x []) xs","insert x (x:[]) == x:(x:[])","count y (y:[]) == count x (x:[])"]}}]]