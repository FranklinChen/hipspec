[[3.0e-6,{"Started":[]}],[1.558361,{"FileProcessed":[]}],[2.50168,{"QuickSpecDone":{"eqs":852,"classes":2550}}],[3.106551,{"PlainProof":{"lemmas":[],"prop_name":"elem y [] == elem x []"}}],[4.082599,{"InductiveProof":{"lemmas":[],"prop_name":"xs++[] == xs"}}],[4.109081,{"PlainProof":{"lemmas":[],"prop_name":"insert x [] == x:[]"}}],[4.119341,{"PlainProof":{"lemmas":[],"prop_name":"count y [] == count x []"}}],[4.132585,{"PlainProof":{"lemmas":[],"prop_name":"[]++xs == xs"}}],[4.1342,{"PlainProof":{"lemmas":[],"prop_name":"isort [] == []"}}],[6.265449,{"InductiveProof":{"lemmas":[],"prop_name":"elem x (ys++xs) == elem x (xs++ys)"}}],[10.304849,{"FailedProof":{"prop_name":"elem x (insert y xs) == elem x (y:xs)"}}],[14.336971,{"FailedProof":{"prop_name":"insert y (insert x xs) == insert x (insert y xs)"}}],[18.408097,{"FailedProof":{"prop_name":"count x (ys++xs) == count x (xs++ys)"}}],[22.463556,{"FailedProof":{"prop_name":"count x (insert y xs) == count x (y:xs)"}}],[24.497347,{"InductiveProof":{"lemmas":[],"prop_name":"(xs++ys)++zs == xs++(ys++zs)"}}],[24.539985,{"PlainProof":{"lemmas":[],"prop_name":"(x:xs)++ys == x:(xs++ys)"}}],[26.562942,{"FailedProof":{"prop_name":"sorted (insert x xs) == sorted xs"}}],[28.613124,{"FailedProof":{"prop_name":"isort (ys++xs) == isort (xs++ys)"}}],[30.63431,{"FailedProof":{"prop_name":"isort (insert x xs) == isort (x:xs)"}}],[32.65587,{"FailedProof":{"prop_name":"elem x (x:xs) == sorted []"}}],[34.676433,{"FailedProof":{"prop_name":"elem x (isort xs) == elem x xs"}}],[36.702828,{"FailedProof":{"prop_name":"elem x (xs++xs) == elem x xs"}}],[38.775757,{"FailedProof":{"prop_name":"insert x (x:xs) == x:(x:xs)"}}],[38.796128,{"PlainProof":{"lemmas":[],"prop_name":"insert x (isort xs) == isort (x:xs)"}}],[40.817525,{"FailedProof":{"prop_name":"count x (isort xs) == count x xs"}}],[41.836781,{"FailedProof":{"prop_name":"sorted (isort xs) == sorted []"}}],[42.846344,{"FailedProof":{"prop_name":"isort (isort xs) == isort xs"}}],[44.865878,{"FailedProof":{"prop_name":"elem y (x:[]) == elem x (y:[])"}}],[46.88264,{"FailedProof":{"prop_name":"count y (x:[]) == count x (y:[])"}}],[46.918259,{"PlainProof":{"lemmas":[],"prop_name":"insert (count x []) xs == count x []:xs"}}],[48.954869,{"FailedProof":{"prop_name":"count y (y:[]) == count x (x:[])"}}],[48.980074,{"Discard":{"discarded":["xs++[] == xs","[]++xs == xs","xs++[] == xs","[]++xs == xs","xs++[] == xs","[]++xs == xs","isort [] == []","[]++[] == []","[]++(xs++ys) == xs++ys","(xs++ys)++[] == xs++ys","[]++(xs++ys) == xs++ys","(xs++ys)++[] == xs++ys","[]++(xs++ys) == xs++ys","(xs++ys)++[] == xs++ys","[]++(xs++ys) == xs++ys","(xs++ys)++[] == xs++ys","[]++(xs++ys) == xs++ys","(xs++ys)++[] == xs++ys","[]++(xs++ys) == xs++ys","(xs++ys)++[] == xs++ys","elem x (isort xs) == elem x xs","elem x (xs++xs) == elem x xs","elem x (isort xs) == elem x xs","elem x (xs++xs) == elem x xs","elem x (isort xs) == elem x xs","elem x (xs++xs) == elem x xs","elem x (isort xs) == elem x xs","elem x (xs++xs) == elem x xs","elem x (isort xs) == elem x xs","elem x (xs++xs) == elem x xs","elem x (isort xs) == elem x xs","elem x (xs++xs) == elem x xs","elem x (isort xs) == elem x xs","elem x (xs++xs) == elem x xs","elem x (isort xs) == elem x xs","elem x (xs++xs) == elem x xs","elem x (isort xs) == elem x xs","elem x (xs++xs) == elem x xs","[]++(x:xs) == x:xs","(x:xs)++[] == x:xs","(x:[])++xs == x:xs","[]++(x:xs) == x:xs","(x:xs)++[] == x:xs","(x:[])++xs == x:xs","[]++(x:xs) == x:xs","(x:xs)++[] == x:xs","(x:[])++xs == x:xs","[]++(x:xs) == x:xs","(x:xs)++[] == x:xs","(x:[])++xs == x:xs","[]++(x:xs) == x:xs","(x:xs)++[] == x:xs","(x:[])++xs == x:xs","[]++(x:xs) == x:xs","(x:xs)++[] == x:xs","(x:[])++xs == x:xs","[]++(x:xs) == x:xs","(x:xs)++[] == x:xs","(x:[])++xs == x:xs","[]++(x:xs) == x:xs","(x:xs)++[] == x:xs","(x:[])++xs == x:xs","[]++(x:xs) == x:xs","(x:xs)++[] == x:xs","(x:[])++xs == x:xs","[]++insert x xs == insert x xs","insert x xs++[] == insert x xs","[]++insert x xs == insert x xs","insert x xs++[] == insert x xs","[]++insert x xs == insert x xs","insert x xs++[] == insert x xs","[]++insert x xs == insert x xs","insert x xs++[] == insert x xs","[]++insert x xs == insert x xs","insert x xs++[] == insert x xs","[]++insert x xs == insert x xs","insert x xs++[] == insert x xs","[]++insert x xs == insert x xs","insert x xs++[] == insert x xs","[]++insert x xs == insert x xs","insert x xs++[] == insert x xs","[]++insert x xs == insert x xs","insert x xs++[] == insert x xs","count x (isort xs) == count x xs","count x (isort xs) == count x xs","count x (isort xs) == count x xs","count x (isort xs) == count x xs","count x (isort xs) == count x xs","count x (isort xs) == count x xs","count x (isort xs) == count x xs","count x (isort xs) == count x xs","count x (isort xs) == count x xs","sorted (insert x xs) == sorted xs","sorted (insert x xs) == sorted xs","sorted (insert x xs) == sorted xs","sorted (insert x xs) == sorted xs","sorted (insert x xs) == sorted xs","sorted (insert x xs) == sorted xs","sorted (insert x xs) == sorted xs","sorted (insert x xs) == sorted xs","sorted (insert x xs) == sorted xs","isort (isort xs) == isort xs","[]++isort xs == isort xs","isort xs++[] == isort xs","isort (isort xs) == isort xs","[]++isort xs == isort xs","isort xs++[] == isort xs","isort (isort xs) == isort xs","[]++isort xs == isort xs","isort xs++[] == isort xs","[]++(xs++xs) == xs++xs","(xs++xs)++[] == xs++xs","[]++(xs++xs) == xs++xs","(xs++xs)++[] == xs++xs","[]++(xs++xs) == xs++xs","(xs++xs)++[] == xs++xs","elem x [] == elem y []","elem x [] == elem y []","elem (count x xs) [] == elem x []","elem (count x xs) [] == elem x []","elem (count x xs) [] == elem x []","elem (count x xs) [] == elem y []","elem (count x xs) [] == elem y []","elem (count x xs) [] == elem y []","elem (count x xs) [] == elem y []","elem (count x xs) [] == elem y []","elem (count x xs) [] == elem y []","elem (count x []) [] == elem x []","insert x [] == x:[]","isort (x:[]) == x:[]","[]++(x:[]) == x:[]","(x:[])++[] == x:[]","insert x [] == x:[]","isort (x:[]) == x:[]","[]++(x:[]) == x:[]","(x:[])++[] == x:[]","insert x [] == x:[]","isort (x:[]) == x:[]","[]++(x:[]) == x:[]","(x:[])++[] == x:[]","count x [] == count y []","count x [] == count y []","count (count x xs) [] == count x []","count (count x xs) [] == count x []","count (count x xs) [] == count x []","count (count x xs) [] == count y []","count (count x xs) [] == count y []","count (count x xs) [] == count y []","count (count x xs) [] == count y []","count (count x xs) [] == count y []","count (count x xs) [] == count y []","count (count x []) [] == count x []","elem x (x:xs) == sorted []","elem x (x:xs) == sorted []","elem x (x:xs) == sorted []","elem x (insert x xs) == sorted []","elem x (insert x xs) == sorted []","elem x (x:xs) == sorted []","elem x (x:xs) == sorted []","elem x (x:xs) == sorted []","elem x (insert x xs) == sorted []","elem x (insert x xs) == sorted []","elem x (insert x xs) == sorted []","elem x (x:xs) == sorted []","elem x (x:xs) == sorted []","elem x (x:xs) == sorted []","elem x (insert x xs) == sorted []","elem x (insert x xs) == sorted []","elem x (insert x xs) == sorted []","sorted (isort xs) == sorted []","sorted (isort xs) == sorted []","sorted (isort xs) == sorted []"]}}],[51.003567,{"FailedProof":{"prop_name":"elem x (insert x xs) == sorted []"}}],[51.017255,{"PlainProof":{"lemmas":[],"prop_name":"sorted (x:[]) == sorted []"}}],[51.017355,{"Discard":{"discarded":["sorted (x:[]) == sorted []","sorted (x:[]) == sorted []","elem x (x:[]) == sorted []","elem x (x:[]) == sorted []","(xs++ys)++zs == xs++(ys++zs)","(xs++ys)++zs == xs++(ys++zs)","(xs++ys)++zs == xs++(ys++zs)","(xs++ys)++zs == xs++(ys++zs)","(xs++ys)++zs == xs++(ys++zs)","(xs++ys)++zs == xs++(ys++zs)","elem x (xs++ys) == elem x (ys++xs)","elem x (xs++ys) == elem x (ys++xs)","elem x (xs++ys) == elem x (ys++xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (xs++ys) == elem x (ys++xs)","elem x (xs++ys) == elem x (ys++xs)","elem x (xs++ys) == elem x (ys++xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (xs++ys) == elem x (ys++xs)","elem x (xs++ys) == elem x (ys++xs)","elem x (xs++ys) == elem x (ys++xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","insert x (insert y xs) == insert y (insert x xs)","insert x (insert y xs) == insert y (insert x xs)","insert x (insert y xs) == insert y (insert x xs)","insert x (insert y xs) == insert y (insert x xs)","insert x (insert y xs) == insert y (insert x xs)","insert x (insert y xs) == insert y (insert x xs)","insert x (insert y xs) == insert y (insert x xs)","insert x (insert y xs) == insert y (insert x xs)","insert x (insert y xs) == insert y (insert x xs)","count x (xs++ys) == count x (ys++xs)","count x (xs++ys) == count x (ys++xs)","count x (xs++ys) == count x (ys++xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (xs++ys) == count x (ys++xs)","count x (xs++ys) == count x (ys++xs)","count x (xs++ys) == count x (ys++xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (xs++ys) == count x (ys++xs)","count x (xs++ys) == count x (ys++xs)","count x (xs++ys) == count x (ys++xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)"]}}],[52.032969,{"InductiveProof":{"lemmas":[],"prop_name":"elem x (x:[]) == sorted []"}}],[56.113162,{"FailedProof":{"prop_name":"elem (count x xs) (isort ys) == elem (count x xs) ys"}}],[56.113702,{"Discard":{"discarded":["elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys"]}}],[60.209253,{"FailedProof":{"prop_name":"elem (count x xs) (ys++ys) == elem (count x xs) ys"}}],[64.276282,{"FailedProof":{"prop_name":"count (count x xs) (isort ys) == count (count x xs) ys"}}],[64.276378,{"Discard":{"discarded":["count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","isort (xs++ys) == isort (ys++xs)","isort (xs++ys) == isort (ys++xs)","isort (xs++ys) == isort (ys++xs)","isort (insert x xs) == isort (x:xs)","insert x (isort xs) == isort (x:xs)","isort (insert x xs) == isort (x:xs)","insert x (isort xs) == isort (x:xs)","isort (insert x xs) == isort (x:xs)","insert x (isort xs) == isort (x:xs)","isort (insert x xs) == isort (x:xs)","insert x (isort xs) == isort (x:xs)","isort (insert x xs) == isort (x:xs)","insert x (isort xs) == isort (x:xs)","isort (insert x xs) == isort (x:xs)","insert x (isort xs) == isort (x:xs)","isort (insert x xs) == isort (x:xs)","insert x (isort xs) == isort (x:xs)","isort (insert x xs) == isort (x:xs)","insert x (isort xs) == isort (x:xs)","isort (insert x xs) == isort (x:xs)","insert x (isort xs) == isort (x:xs)","(xs++xs)++ys == xs++(xs++ys)","(xs++xs)++ys == xs++(xs++ys)","(xs++ys)++xs == xs++(ys++xs)","(xs++ys)++xs == xs++(ys++xs)","(xs++ys)++ys == xs++(ys++ys)","(xs++ys)++ys == xs++(ys++ys)","(xs++ys)++xs == xs++(ys++xs)","(xs++xs)++ys == xs++(xs++ys)","(xs++xs)++ys == xs++(xs++ys)","(xs++ys)++xs == xs++(ys++xs)","(xs++ys)++ys == xs++(ys++ys)","(xs++ys)++ys == xs++(ys++ys)","(xs++ys)++xs == xs++(ys++xs)","(xs++ys)++xs == xs++(ys++xs)","(xs++xs)++ys == xs++(xs++ys)","(xs++xs)++ys == xs++(xs++ys)","(xs++ys)++ys == xs++(ys++ys)","(xs++ys)++ys == xs++(ys++ys)","insert x (x:xs) == x:(x:xs)","(x:[])++(x:xs) == x:(x:xs)","insert x (x:xs) == x:(x:xs)","(x:[])++(x:xs) == x:(x:xs)","insert x (x:xs) == x:(x:xs)","(x:[])++(x:xs) == x:(x:xs)","(x:[])++insert x xs == x:insert x xs","(x:[])++insert x xs == x:insert x xs","(x:[])++insert x xs == x:insert x xs","(x:[])++isort xs == x:isort xs","(x:[])++isort xs == x:isort xs","(x:[])++isort xs == x:isort xs","(x:xs)++xs == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","(x:xs)++xs == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","(x:xs)++xs == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","insert x (x:xs) == x:(x:xs)","(x:[])++(x:xs) == x:(x:xs)","insert x (x:xs) == x:(x:xs)","(x:[])++(x:xs) == x:(x:xs)","insert x (x:xs) == x:(x:xs)","(x:[])++(x:xs) == x:(x:xs)","(x:[])++insert x xs == x:insert x xs","(x:[])++insert x xs == x:insert x xs","(x:[])++insert x xs == x:insert x xs","(x:[])++isort xs == x:isort xs","(x:[])++isort xs == x:isort xs","(x:[])++isort xs == x:isort xs","(x:xs)++xs == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","(x:xs)++xs == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","(x:xs)++xs == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","insert x (x:xs) == x:(x:xs)","(x:[])++(x:xs) == x:(x:xs)","insert x (x:xs) == x:(x:xs)","(x:[])++(x:xs) == x:(x:xs)","insert x (x:xs) == x:(x:xs)","(x:[])++(x:xs) == x:(x:xs)","(x:[])++insert x xs == x:insert x xs","(x:[])++insert x xs == x:insert x xs","(x:[])++insert x xs == x:insert x xs","(x:[])++isort xs == x:isort xs","(x:[])++isort xs == x:isort xs","(x:[])++isort xs == x:isort xs","(x:xs)++xs == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","(x:xs)++xs == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","(x:xs)++xs == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","count x (insert x xs) == count x (x:xs)","count x (insert x xs) == count x (x:xs)","count x (insert x xs) == count x (x:xs)","count x (insert x xs) == count x (x:xs)","count x (insert x xs) == count x (x:xs)","count x (insert x xs) == count x (x:xs)","count x (insert x xs) == count x (x:xs)","count x (insert x xs) == count x (x:xs)"]}}],[66.308628,{"FailedProof":{"prop_name":"count x (insert x xs) == count x (x:xs)"}}],[68.334748,{"FailedProof":{"prop_name":"elem (count x xs) (isort xs) == elem (count x xs) xs"}}],[68.334886,{"Discard":{"discarded":["elem (count x xs) (isort xs) == elem (count x xs) xs","elem (count x xs) (xs++xs) == elem (count x xs) xs","elem (count x xs) (isort xs) == elem (count x xs) xs","elem (count x xs) (xs++xs) == elem (count x xs) xs","elem (count x xs) (isort xs) == elem (count x xs) xs","elem (count x xs) (xs++xs) == elem (count x xs) xs","elem (count x xs) (isort xs) == elem (count x xs) xs","elem (count x xs) (xs++xs) == elem (count x xs) xs","elem (count x xs) (isort xs) == elem (count x xs) xs","elem (count x xs) (xs++xs) == elem (count x xs) xs","elem (count x xs) (isort xs) == elem (count x xs) xs","elem (count x xs) (xs++xs) == elem (count x xs) xs","elem (count x xs) (isort xs) == elem (count x xs) xs","elem (count x xs) (xs++xs) == elem (count x xs) xs","elem (count x xs) (isort xs) == elem (count x xs) xs","elem (count x xs) (xs++xs) == elem (count x xs) xs"]}}],[70.363486,{"FailedProof":{"prop_name":"elem (count x xs) (xs++xs) == elem (count x xs) xs"}}],[72.386879,{"FailedProof":{"prop_name":"count (count x xs) (isort xs) == count (count x xs) xs"}}],[72.386965,{"Discard":{"discarded":["count (count x xs) (isort xs) == count (count x xs) xs","count (count x xs) (isort xs) == count (count x xs) xs","count (count x xs) (isort xs) == count (count x xs) xs","count (count x xs) (isort xs) == count (count x xs) xs","count (count x xs) (isort xs) == count (count x xs) xs","count (count x xs) (isort xs) == count (count x xs) xs","count (count x xs) (isort xs) == count (count x xs) xs","count (count x xs) (isort xs) == count (count x xs) xs","(xs++xs)++xs == xs++(xs++xs)","(xs++xs)++xs == xs++(xs++xs)","(xs++xs)++xs == xs++(xs++xs)","elem (count x xs) (ys++zs) == elem (count x xs) (zs++ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (ys++zs) == elem (count x xs) (zs++ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (ys++zs) == elem (count x xs) (zs++ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (ys++zs) == elem (count x xs) (zs++ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (ys++zs) == elem (count x xs) (zs++ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (ys++zs) == elem (count x xs) (zs++ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (ys++zs) == elem (count x xs) (zs++ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (ys++zs) == elem (count x xs) (zs++ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (ys++zs) == elem (count x xs) (zs++ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)"]}}],[80.551213,{"FailedProof":{"prop_name":"elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)"}}],[87.712982,{"FailedProof":{"prop_name":"count (count x xs) (zs++ys) == count (count x xs) (ys++zs)"}}],[87.713144,{"Discard":{"discarded":["count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (ys++zs) == count (count x xs) (zs++ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (ys++zs) == count (count x xs) (zs++ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (ys++zs) == count (count x xs) (zs++ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (ys++zs) == count (count x xs) (zs++ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (ys++zs) == count (count x xs) (zs++ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (ys++zs) == count (count x xs) (zs++ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (ys++zs) == count (count x xs) (zs++ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (ys++zs) == count (count x xs) (zs++ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","elem (count x xs) (ys++xs) == elem (count x xs) (xs++ys)","elem (count x xs) (ys++xs) == elem (count x xs) (xs++ys)"]}}],[95.946748,{"FailedProof":{"prop_name":"count (count x xs) (insert y ys) == count (count x xs) (y:ys)"}}],[99.987041,{"FailedProof":{"prop_name":"elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)"}}],[99.987133,{"Discard":{"discarded":["elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (xs++ys) == elem (count x xs) (ys++xs)","elem (count x xs) (ys++xs) == elem (count x xs) (xs++ys)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (xs++ys) == elem (count x xs) (ys++xs)","elem (count x xs) (xs++ys) == elem (count x xs) (ys++xs)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (ys++xs) == elem (count x xs) (xs++ys)","elem (count x xs) (ys++xs) == elem (count x xs) (xs++ys)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (xs++ys) == elem (count x xs) (ys++xs)","elem (count x xs) (ys++xs) == elem (count x xs) (xs++ys)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (xs++ys) == elem (count x xs) (ys++xs)","elem (count x xs) (xs++ys) == elem (count x xs) (ys++xs)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (ys++xs) == elem (count x xs) (xs++ys)","elem (count x xs) (ys++xs) == elem (count x xs) (xs++ys)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (xs++ys) == elem (count x xs) (ys++xs)","elem (count x xs) (ys++xs) == elem (count x xs) (xs++ys)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (xs++ys) == elem (count x xs) (ys++xs)","elem (count x xs) (xs++ys) == elem (count x xs) (ys++xs)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)"]}}],[104.051935,{"FailedProof":{"prop_name":"elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)"}}],[108.13061,{"FailedProof":{"prop_name":"count (count x xs) (ys++xs) == count (count x xs) (xs++ys)"}}],[108.130681,{"Discard":{"discarded":["count (count x xs) (ys++xs) == count (count x xs) (xs++ys)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)"]}}],[112.191277,{"FailedProof":{"prop_name":"count (count x xs) (insert x ys) == count (count x xs) (x:ys)"}}],[116.241113,{"FailedProof":{"prop_name":"count (count x xs) (insert y xs) == count (count x xs) (y:xs)"}}],[116.2412,{"Discard":{"discarded":["count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (ys++xs) == count (count x xs) (xs++ys)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (xs++ys) == count (count x xs) (ys++xs)","count (count x xs) (xs++ys) == count (count x xs) (ys++xs)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (ys++xs) == count (count x xs) (xs++ys)","count (count x xs) (ys++xs) == count (count x xs) (xs++ys)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (xs++ys) == count (count x xs) (ys++xs)","count (count x xs) (ys++xs) == count (count x xs) (xs++ys)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (xs++ys) == count (count x xs) (ys++xs)","count (count x xs) (xs++ys) == count (count x xs) (ys++xs)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (ys++xs) == count (count x xs) (xs++ys)","count (count x xs) (ys++xs) == count (count x xs) (xs++ys)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (xs++ys) == count (count x xs) (ys++xs)","count (count x xs) (ys++xs) == count (count x xs) (xs++ys)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (xs++ys) == count (count x xs) (ys++xs)","count (count x xs) (xs++ys) == count (count x xs) (ys++xs)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","elem x (y:[]) == elem y (x:[])","elem x (y:[]) == elem y (x:[])","elem x (y:[]) == elem y (x:[])","(x:[])++(y:[]) == x:(y:[])","(x:[])++(y:[]) == x:(y:[])","(x:[])++(y:[]) == x:(y:[])","(x:[])++(y:[]) == x:(y:[])","(x:[])++(y:[]) == x:(y:[])","(x:[])++(y:[]) == x:(y:[])"]}}],[120.336195,{"FailedProof":{"prop_name":"count (count x ys) (ys++xs) == count (count x ys) (xs++ys)"}}],[122.343915,{"FailedProof":{"prop_name":"insert y (x:[]) == insert x (y:[])"}}],[122.34398,{"Discard":{"discarded":["insert x (y:[]) == insert y (x:[])","insert x (y:[]) == insert y (x:[])","count x (y:[]) == count y (x:[])","count x (y:[]) == count y (x:[])","count x (y:[]) == count y (x:[])","elem (count x xs) (insert x xs) == elem (count x xs) (x:xs)","elem (count x xs) (insert x xs) == elem (count x xs) (x:xs)","elem (count x xs) (insert x xs) == elem (count x xs) (x:xs)","elem (count x xs) (insert x xs) == elem (count x xs) (x:xs)","elem (count x xs) (insert x xs) == elem (count x xs) (x:xs)","elem (count x xs) (insert x xs) == elem (count x xs) (x:xs)","elem (count x xs) (insert x xs) == elem (count x xs) (x:xs)","elem (count x xs) (insert x xs) == elem (count x xs) (x:xs)","insert (count x xs) [] == count x xs:[]","insert (count x xs) [] == count x xs:[]","insert (count x xs) [] == count x xs:[]","insert (count x xs) [] == count x xs:[]","insert (count x xs) [] == count x xs:[]","insert (count x xs) [] == count x xs:[]","insert (count x xs) [] == count x xs:[]","insert (count x xs) [] == count x xs:[]","insert (count x xs) [] == count x xs:[]"]}}],[124.373141,{"FailedProof":{"prop_name":"elem (count x xs) (insert x xs) == elem (count x xs) (x:xs)"}}],[126.396998,{"FailedProof":{"prop_name":"count (count x xs) (insert x xs) == count (count x xs) (x:xs)"}}],[126.397085,{"Discard":{"discarded":["count (count x xs) (insert x xs) == count (count x xs) (x:xs)","count (count x xs) (insert x xs) == count (count x xs) (x:xs)","count (count x xs) (insert x xs) == count (count x xs) (x:xs)","count (count x xs) (insert x xs) == count (count x xs) (x:xs)","count (count x xs) (insert x xs) == count (count x xs) (x:xs)","count (count x xs) (insert x xs) == count (count x xs) (x:xs)","count (count x xs) (insert x xs) == count (count x xs) (x:xs)","count (count x xs) (insert x xs) == count (count x xs) (x:xs)"]}}],[128.440876,{"FailedProof":{"prop_name":"elem (count x []) (isort xs) == elem (count x []) xs"}}],[130.46269,{"InductiveProof":{"lemmas":[],"prop_name":"elem (count x []) (xs++xs) == elem (count x []) xs"}}],[130.462752,{"Discard":{"discarded":["elem (count x []) (isort xs) == elem (count x []) xs","elem (count x []) (xs++xs) == elem (count x []) xs","elem (count x []) (isort xs) == elem (count x []) xs","elem (count x []) (xs++xs) == elem (count x []) xs","insert (count x []) xs == count x []:xs","insert (count x []) xs == count x []:xs","insert (count x []) xs == count x []:xs","count (count x []) (isort xs) == count (count x []) xs","count (count x []) (isort xs) == count (count x []) xs"]}}],[132.507646,{"FailedProof":{"prop_name":"count (count x []) (isort xs) == count (count x []) xs"}}],[133.490164,{"InductiveProof":{"lemmas":[],"prop_name":"insert x (x:[]) == x:(x:[])"}}],[133.49034,{"Discard":{"discarded":["(x:[])++(x:[]) == x:(x:[])","insert x (x:[]) == x:(x:[])","(x:[])++(x:[]) == x:(x:[])","insert x (x:[]) == x:(x:[])","(x:[])++(x:[]) == x:(x:[])","count x (x:[]) == count y (y:[])","count x (x:[]) == count y (y:[])","elem (count x []) (xs++ys) == elem (count x []) (ys++xs)","elem (count x []) (xs++ys) == elem (count x []) (ys++xs)","elem (count x []) (xs++ys) == elem (count x []) (ys++xs)","elem (count x []) (insert y xs) == elem (count x []) (y:xs)","elem (count x []) (insert y xs) == elem (count x []) (y:xs)","elem (count x []) (insert y xs) == elem (count x []) (y:xs)","elem (count x []) (insert y xs) == elem (count x []) (y:xs)","elem (count x []) (insert y xs) == elem (count x []) (y:xs)","insert (count x []) (xs++ys) == count x []:(xs++ys)","insert (count x []) (xs++ys) == count x []:(xs++ys)","insert (count x []) (xs++ys) == count x []:(xs++ys)","insert (count x []) (xs++ys) == count x []:(xs++ys)","insert (count x []) (xs++ys) == count x []:(xs++ys)","insert (count x []) (xs++ys) == count x []:(xs++ys)","insert (count x []) (y:xs) == count x []:(y:xs)","insert (count x []) (y:xs) == count x []:(y:xs)","insert (count x []) (y:xs) == count x []:(y:xs)","insert (count x []) (y:xs) == count x []:(y:xs)","insert (count x []) (y:xs) == count x []:(y:xs)","insert (count x []) (y:xs) == count x []:(y:xs)","insert (count x []) (insert y xs) == count x []:insert y xs","insert (count x []) (insert y xs) == count x []:insert y xs","insert (count x []) (insert y xs) == count x []:insert y xs","insert (count x []) (insert y xs) == count x []:insert y xs","insert (count x []) (insert y xs) == count x []:insert y xs","insert (count x []) (insert y xs) == count x []:insert y xs"]}}],[137.658926,{"FailedProof":{"prop_name":"elem (count x []) (insert y xs) == elem (count x []) (y:xs)"}}],[141.829109,{"FailedProof":{"prop_name":"count (count x []) (ys++xs) == count (count x []) (xs++ys)"}}],[141.829174,{"Discard":{"discarded":["count (count x []) (xs++ys) == count (count x []) (ys++xs)","count (count x []) (xs++ys) == count (count x []) (ys++xs)","count (count x []) (insert y xs) == count (count x []) (y:xs)","count (count x []) (insert y xs) == count (count x []) (y:xs)","count (count x []) (insert y xs) == count (count x []) (y:xs)","count (count x []) (insert y xs) == count (count x []) (y:xs)","count (count x []) (insert y xs) == count (count x []) (y:xs)"]}}],[146.010495,{"FailedProof":{"prop_name":"count (count x []) (insert y xs) == count (count x []) (y:xs)"}}],[148.034543,{"FailedProof":{"prop_name":"elem (count x []) (insert x xs) == elem (count x []) (x:xs)"}}],[148.034608,{"Discard":{"discarded":["elem (count x []) (insert x xs) == elem (count x []) (x:xs)","elem (count x []) (insert x xs) == elem (count x []) (x:xs)","insert (count x []) (x:xs) == count x []:(x:xs)","insert (count x []) (x:xs) == count x []:(x:xs)","insert (count x []) (x:xs) == count x []:(x:xs)","insert (count x []) (insert x xs) == count x []:insert x xs","insert (count x []) (insert x xs) == count x []:insert x xs","insert (count x []) (insert x xs) == count x []:insert x xs","insert (count x []) (isort xs) == count x []:isort xs","insert (count x []) (isort xs) == count x []:isort xs","insert (count x []) (isort xs) == count x []:isort xs","insert (count x []) (xs++xs) == count x []:(xs++xs)","insert (count x []) (xs++xs) == count x []:(xs++xs)","insert (count x []) (xs++xs) == count x []:(xs++xs)","count (count x []) (insert x xs) == count (count x []) (x:xs)","count (count x []) (insert x xs) == count (count x []) (x:xs)","insert (count x []) [] == count x []:[]","insert (count x []) (y:[]) == count x []:(y:[])","insert (count x []) (y:[]) == count x []:(y:[])","insert (count x []) (x:[]) == count x []:(x:[])"]}}],[150.066144,{"FailedProof":{"prop_name":"count (count x []) (insert x xs) == count (count x []) (x:xs)"}}],[154.135832,{"FailedProof":{"prop_name":"elem x (insert y xs) == elem x (y:xs)"}}],[158.154191,{"FailedProof":{"prop_name":"insert y (insert x xs) == insert x (insert y xs)"}}],[162.248217,{"FailedProof":{"prop_name":"count x (ys++xs) == count x (xs++ys)"}}],[166.297397,{"FailedProof":{"prop_name":"count x (insert y xs) == count x (y:xs)"}}],[168.327367,{"FailedProof":{"prop_name":"sorted (insert x xs) == sorted xs"}}],[170.365149,{"FailedProof":{"prop_name":"isort (ys++xs) == isort (xs++ys)"}}],[172.396227,{"FailedProof":{"prop_name":"isort (insert x xs) == isort (x:xs)"}}],[174.424954,{"FailedProof":{"prop_name":"elem x (x:xs) == sorted []"}}],[176.455693,{"FailedProof":{"prop_name":"elem x (isort xs) == elem x xs"}}],[178.478345,{"FailedProof":{"prop_name":"elem x (xs++xs) == elem x xs"}}],[180.510485,{"FailedProof":{"prop_name":"insert x (x:xs) == x:(x:xs)"}}],[182.532982,{"FailedProof":{"prop_name":"count x (isort xs) == count x xs"}}],[183.550248,{"FailedProof":{"prop_name":"sorted (isort xs) == sorted []"}}],[184.560641,{"FailedProof":{"prop_name":"isort (isort xs) == isort xs"}}],[186.589743,{"FailedProof":{"prop_name":"elem y (x:[]) == elem x (y:[])"}}],[188.60708,{"FailedProof":{"prop_name":"count y (x:[]) == count x (y:[])"}}],[190.63771,{"InductiveProof":{"lemmas":[],"prop_name":"count y (y:[]) == count x (x:[])"}}],[192.667641,{"FailedProof":{"prop_name":"elem x (insert x xs) == sorted []"}}],[196.836198,{"FailedProof":{"prop_name":"elem (count x xs) (isort ys) == elem (count x xs) ys"}}],[200.94346,{"FailedProof":{"prop_name":"elem (count x xs) (ys++ys) == elem (count x xs) ys"}}],[205.019171,{"FailedProof":{"prop_name":"count (count x xs) (isort ys) == count (count x xs) ys"}}],[207.042171,{"FailedProof":{"prop_name":"count x (insert x xs) == count x (x:xs)"}}],[209.072461,{"FailedProof":{"prop_name":"elem (count x xs) (isort xs) == elem (count x xs) xs"}}],[211.098967,{"FailedProof":{"prop_name":"elem (count x xs) (xs++xs) == elem (count x xs) xs"}}],[213.142905,{"FailedProof":{"prop_name":"count (count x xs) (isort xs) == count (count x xs) xs"}}],[221.267579,{"FailedProof":{"prop_name":"elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)"}}],[229.44606,{"FailedProof":{"prop_name":"count (count x xs) (zs++ys) == count (count x xs) (ys++zs)"}}],[236.613128,{"FailedProof":{"prop_name":"count (count x xs) (insert y ys) == count (count x xs) (y:ys)"}}],[240.674367,{"FailedProof":{"prop_name":"elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)"}}],[244.724766,{"FailedProof":{"prop_name":"elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)"}}],[248.820953,{"FailedProof":{"prop_name":"count (count x xs) (ys++xs) == count (count x xs) (xs++ys)"}}],[252.870681,{"FailedProof":{"prop_name":"count (count x xs) (insert x ys) == count (count x xs) (x:ys)"}}],[256.938177,{"FailedProof":{"prop_name":"count (count x xs) (insert y xs) == count (count x xs) (y:xs)"}}],[261.019801,{"FailedProof":{"prop_name":"count (count x ys) (ys++xs) == count (count x ys) (xs++ys)"}}],[263.043445,{"FailedProof":{"prop_name":"insert y (x:[]) == insert x (y:[])"}}],[265.067501,{"FailedProof":{"prop_name":"elem (count x xs) (insert x xs) == elem (count x xs) (x:xs)"}}],[267.099389,{"FailedProof":{"prop_name":"count (count x xs) (insert x xs) == count (count x xs) (x:xs)"}}],[269.139664,{"FailedProof":{"prop_name":"elem (count x []) (isort xs) == elem (count x []) xs"}}],[271.190701,{"FailedProof":{"prop_name":"count (count x []) (isort xs) == count (count x []) xs"}}],[275.355469,{"FailedProof":{"prop_name":"elem (count x []) (insert y xs) == elem (count x []) (y:xs)"}}],[279.545354,{"FailedProof":{"prop_name":"count (count x []) (ys++xs) == count (count x []) (xs++ys)"}}],[283.708904,{"FailedProof":{"prop_name":"count (count x []) (insert y xs) == count (count x []) (y:xs)"}}],[285.7405,{"FailedProof":{"prop_name":"elem (count x []) (insert x xs) == elem (count x []) (x:xs)"}}],[287.764,{"FailedProof":{"prop_name":"count (count x []) (insert x xs) == count (count x []) (x:xs)"}}],[291.824122,{"FailedProof":{"prop_name":"elem x (insert y xs) == elem x (y:xs)"}}],[295.841348,{"FailedProof":{"prop_name":"insert y (insert x xs) == insert x (insert y xs)"}}],[299.931699,{"FailedProof":{"prop_name":"count x (ys++xs) == count x (xs++ys)"}}],[303.980012,{"FailedProof":{"prop_name":"count x (insert y xs) == count x (y:xs)"}}],[306.008417,{"FailedProof":{"prop_name":"sorted (insert x xs) == sorted xs"}}],[308.046901,{"FailedProof":{"prop_name":"isort (ys++xs) == isort (xs++ys)"}}],[310.079555,{"FailedProof":{"prop_name":"isort (insert x xs) == isort (x:xs)"}}],[312.108166,{"FailedProof":{"prop_name":"elem x (x:xs) == sorted []"}}],[314.138572,{"FailedProof":{"prop_name":"elem x (isort xs) == elem x xs"}}],[316.160608,{"FailedProof":{"prop_name":"elem x (xs++xs) == elem x xs"}}],[318.193976,{"FailedProof":{"prop_name":"insert x (x:xs) == x:(x:xs)"}}],[320.216266,{"FailedProof":{"prop_name":"count x (isort xs) == count x xs"}}],[321.236931,{"FailedProof":{"prop_name":"sorted (isort xs) == sorted []"}}],[322.247104,{"FailedProof":{"prop_name":"isort (isort xs) == isort xs"}}],[324.268638,{"FailedProof":{"prop_name":"elem y (x:[]) == elem x (y:[])"}}],[326.283924,{"FailedProof":{"prop_name":"count y (x:[]) == count x (y:[])"}}],[328.325696,{"FailedProof":{"prop_name":"elem x (insert x xs) == sorted []"}}],[332.39482,{"FailedProof":{"prop_name":"elem (count x xs) (isort ys) == elem (count x xs) ys"}}],[336.517542,{"FailedProof":{"prop_name":"elem (count x xs) (ys++ys) == elem (count x xs) ys"}}],[340.586877,{"FailedProof":{"prop_name":"count (count x xs) (isort ys) == count (count x xs) ys"}}],[342.61785,{"FailedProof":{"prop_name":"count x (insert x xs) == count x (x:xs)"}}],[344.641021,{"FailedProof":{"prop_name":"elem (count x xs) (isort xs) == elem (count x xs) xs"}}],[346.670309,{"FailedProof":{"prop_name":"elem (count x xs) (xs++xs) == elem (count x xs) xs"}}],[348.694002,{"FailedProof":{"prop_name":"count (count x xs) (isort xs) == count (count x xs) xs"}}],[356.868103,{"FailedProof":{"prop_name":"elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)"}}],[364.039042,{"FailedProof":{"prop_name":"count (count x xs) (zs++ys) == count (count x xs) (ys++zs)"}}],[372.23077,{"FailedProof":{"prop_name":"count (count x xs) (insert y ys) == count (count x xs) (y:ys)"}}],[376.249619,{"FailedProof":{"prop_name":"elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)"}}],[380.403543,{"FailedProof":{"prop_name":"elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)"}}],[384.484094,{"FailedProof":{"prop_name":"count (count x xs) (ys++xs) == count (count x xs) (xs++ys)"}}],[388.556748,{"FailedProof":{"prop_name":"count (count x xs) (insert x ys) == count (count x xs) (x:ys)"}}],[392.606701,{"FailedProof":{"prop_name":"count (count x xs) (insert y xs) == count (count x xs) (y:xs)"}}],[396.717908,{"FailedProof":{"prop_name":"count (count x ys) (ys++xs) == count (count x ys) (xs++ys)"}}],[398.725811,{"FailedProof":{"prop_name":"insert y (x:[]) == insert x (y:[])"}}],[400.756933,{"FailedProof":{"prop_name":"elem (count x xs) (insert x xs) == elem (count x xs) (x:xs)"}}],[402.780663,{"FailedProof":{"prop_name":"count (count x xs) (insert x xs) == count (count x xs) (x:xs)"}}],[404.829918,{"FailedProof":{"prop_name":"elem (count x []) (isort xs) == elem (count x []) xs"}}],[406.869231,{"FailedProof":{"prop_name":"count (count x []) (isort xs) == count (count x []) xs"}}],[411.045196,{"FailedProof":{"prop_name":"elem (count x []) (insert y xs) == elem (count x []) (y:xs)"}}],[415.219056,{"FailedProof":{"prop_name":"count (count x []) (ys++xs) == count (count x []) (xs++ys)"}}],[419.392219,{"FailedProof":{"prop_name":"count (count x []) (insert y xs) == count (count x []) (y:xs)"}}],[421.416546,{"FailedProof":{"prop_name":"elem (count x []) (insert x xs) == elem (count x []) (x:xs)"}}],[423.44336,{"FailedProof":{"prop_name":"count (count x []) (insert x xs) == count (count x []) (x:xs)"}}],[423.443365,{"StartingUserLemmas":[]}],[424.541171,{"FailedProof":{"prop_name":"prop_T15"}}],[425.550937,{"FailedProof":{"prop_name":"prop_T1"}}],[434.416794,{"FailedProof":{"prop_name":"prop_T9"}}],[438.489698,{"FailedProof":{"prop_name":"prop_T8"}}],[438.946407,{"InductiveProof":{"lemmas":[],"prop_name":"prop_T39"}}],[439.92772,{"InductiveProof":{"lemmas":[],"prop_name":"prop_T38"}}],[440.354114,{"InductiveProof":{"lemmas":[],"prop_name":"prop_T37"}}],[441.283384,{"InductiveProof":{"lemmas":[],"prop_name":"prop_T36"}}],[443.294922,{"FailedProof":{"prop_name":"prop_T24"}}],[444.300336,{"FailedProof":{"prop_name":"prop_T16"}}],[446.312298,{"FailedProof":{"prop_name":"prop_T26"}}],[447.318297,{"FailedProof":{"prop_name":"prop_T13"}}],[452.158728,{"FailedProof":{"prop_name":"prop_T47"}}],[453.144592,{"InductiveProof":{"lemmas":[],"prop_name":"prop_T46"}}],[455.178422,{"FailedProof":{"prop_name":"prop_T45"}}],[459.243386,{"FailedProof":{"prop_name":"prop_T44"}}],[461.348939,{"FailedProof":{"prop_name":"prop_T50"}}],[463.369008,{"FailedProof":{"prop_name":"prop_T49"}}],[464.381271,{"FailedProof":{"prop_name":"prop_T48"}}],[465.390863,{"FailedProof":{"prop_name":"prop_T4"}}],[467.431132,{"FailedProof":{"prop_name":"prop_T3"}}],[469.434928,{"FailedProof":{"prop_name":"prop_T25"}}],[471.478583,{"FailedProof":{"prop_name":"prop_T23"}}],[473.504967,{"FailedProof":{"prop_name":"prop_T22"}}],[474.515252,{"FailedProof":{"prop_name":"prop_T20"}}],[476.562755,{"FailedProof":{"prop_name":"prop_T2"}}],[478.55268,{"FailedProof":{"prop_name":"prop_T34"}}],[480.56544,{"FailedProof":{"prop_name":"prop_T35"}}],[481.570171,{"FailedProof":{"prop_name":"prop_T33"}}],[483.598635,{"FailedProof":{"prop_name":"prop_T7"}}],[484.61605,{"FailedProof":{"prop_name":"prop_T31"}}],[486.637868,{"FailedProof":{"prop_name":"prop_T6"}}],[487.647333,{"FailedProof":{"prop_name":"prop_T5"}}],[488.65856,{"FailedProof":{"prop_name":"prop_T30"}}],[489.667783,{"FailedProof":{"prop_name":"prop_T29"}}],[490.677574,{"FailedProof":{"prop_name":"prop_T27"}}],[492.700248,{"FailedProof":{"prop_name":"prop_T19"}}],[494.736576,{"FailedProof":{"prop_name":"prop_T17"}}],[495.724741,{"InductiveProof":{"lemmas":[],"prop_name":"prop_T12"}}],[496.737749,{"FailedProof":{"prop_name":"prop_T10"}}],[498.756798,{"FailedProof":{"prop_name":"prop_G6"}}],[499.762789,{"InductiveProof":{"lemmas":[],"prop_name":"prop_G5"}}],[500.776579,{"FailedProof":{"prop_name":"prop_T32"}}],[501.781804,{"InductiveProof":{"lemmas":[],"prop_name":"prop_G9"}}],[501.97655,{"InductiveProof":{"lemmas":[],"prop_name":"prop_T43"}}],[506.138919,{"FailedProof":{"prop_name":"prop_T42"}}],[508.164398,{"FailedProof":{"prop_name":"prop_T41"}}],[509.169543,{"InductiveProof":{"lemmas":[],"prop_name":"prop_T40"}}],[510.179896,{"FailedProof":{"prop_name":"prop_T14"}}],[510.179936,{"Finished":{"qs_proved":["xs++[] == xs","elem x (ys++xs) == elem x (xs++ys)","(xs++ys)++zs == xs++(ys++zs)","elem x (x:[]) == sorted []","elem (count x []) (xs++xs) == elem (count x []) xs","insert x (x:[]) == x:(x:[])","count y (y:[]) == count x (x:[])"],"proved":["prop_T39","prop_T38","prop_T37","prop_T36","prop_T46","prop_T12","prop_G5","prop_G9","prop_T43","prop_T40"],"qs_unproved":["elem x (insert y xs) == elem x (y:xs)","insert x (insert y xs) == insert y (insert x xs)","count x (xs++ys) == count x (ys++xs)","count x (insert y xs) == count x (y:xs)","sorted (insert x xs) == sorted xs","isort (xs++ys) == isort (ys++xs)","isort (insert x xs) == isort (x:xs)","elem x (x:xs) == sorted []","elem x (isort xs) == elem x xs","elem x (xs++xs) == elem x xs","insert x (x:xs) == x:(x:xs)","count x (isort xs) == count x xs","sorted (isort xs) == sorted []","isort (isort xs) == isort xs","elem x (y:[]) == elem y (x:[])","count x (y:[]) == count y (x:[])","elem x (insert x xs) == sorted []","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count x (insert x xs) == count x (x:xs)","elem (count x xs) (isort xs) == elem (count x xs) xs","elem (count x xs) (xs++xs) == elem (count x xs) xs","count (count x xs) (isort xs) == count (count x xs) xs","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","count (count x xs) (ys++zs) == count (count x xs) (zs++ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","count (count x xs) (ys++xs) == count (count x xs) (xs++ys)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (xs++ys) == count (count x xs) (ys++xs)","insert x (y:[]) == insert y (x:[])","elem (count x xs) (insert x xs) == elem (count x xs) (x:xs)","count (count x xs) (insert x xs) == count (count x xs) (x:xs)","elem (count x []) (isort xs) == elem (count x []) xs","count (count x []) (isort xs) == count (count x []) xs","elem (count x []) (insert y xs) == elem (count x []) (y:xs)","count (count x []) (xs++ys) == count (count x []) (ys++xs)","count (count x []) (insert y xs) == count (count x []) (y:xs)","elem (count x []) (insert x xs) == elem (count x []) (x:xs)","count (count x []) (insert x xs) == count (count x []) (x:xs)"],"unproved":["prop_T15","prop_T1","prop_T9","prop_T8","prop_T24","prop_T16","prop_T26","prop_T13","prop_T47","prop_T45","prop_T44","prop_T50","prop_T49","prop_T48","prop_T4","prop_T3","prop_T25","prop_T23","prop_T22","prop_T20","prop_T2","prop_T34","prop_T35","prop_T33","prop_T7","prop_T31","prop_T6","prop_T5","prop_T30","prop_T29","prop_T27","prop_T19","prop_T17","prop_T10","prop_G6","prop_T32","prop_T42","prop_T41","prop_T14"]}}]]