[[6.0e-6,{"Started":[]}],[1.570909,{"FileProcessed":[]}],[2.527891,{"QuickSpecDone":{"classes":2550,"eqs":852}}],[3.131006,{"PlainProof":{"lemmas":[],"prop_name":"elem y [] == elem x []"}}],[4.104713,{"InductiveProof":{"lemmas":[],"prop_name":"xs++[] == xs"}}],[4.130335,{"PlainProof":{"lemmas":[],"prop_name":"insert x [] == x:[]"}}],[4.140606,{"PlainProof":{"lemmas":[],"prop_name":"count y [] == count x []"}}],[4.154884,{"PlainProof":{"lemmas":[],"prop_name":"[]++xs == xs"}}],[4.154936,{"PlainProof":{"lemmas":[],"prop_name":"isort [] == []"}}],[6.18208,{"FailedProof":{"prop_name":"elem x (ys++xs) == elem x (xs++ys)"}}],[8.193777,{"FailedProof":{"prop_name":"elem x (insert y xs) == elem x (y:xs)"}}],[10.209554,{"FailedProof":{"prop_name":"insert y (insert x xs) == insert x (insert y xs)"}}],[12.224064,{"FailedProof":{"prop_name":"count x (ys++xs) == count x (xs++ys)"}}],[14.239646,{"FailedProof":{"prop_name":"count x (insert y xs) == count x (y:xs)"}}],[16.253452,{"InductiveProof":{"lemmas":[],"prop_name":"(xs++ys)++zs == xs++(ys++zs)"}}],[16.282583,{"PlainProof":{"lemmas":[],"prop_name":"(x:xs)++ys == x:(xs++ys)"}}],[18.286025,{"FailedProof":{"prop_name":"sorted (insert x xs) == sorted xs"}}],[20.319051,{"FailedProof":{"prop_name":"isort (ys++xs) == isort (xs++ys)"}}],[21.328478,{"FailedProof":{"prop_name":"isort (insert x xs) == isort (x:xs)"}}],[23.347577,{"FailedProof":{"prop_name":"elem x (x:xs) == sorted []"}}],[24.356108,{"FailedProof":{"prop_name":"elem x (isort xs) == elem x xs"}}],[26.366989,{"FailedProof":{"prop_name":"elem x (xs++xs) == elem x xs"}}],[27.379926,{"InductiveProof":{"lemmas":[],"prop_name":"insert x (x:xs) == x:(x:xs)"}}],[27.39882,{"PlainProof":{"lemmas":[],"prop_name":"insert x (isort xs) == isort (x:xs)"}}],[29.401187,{"FailedProof":{"prop_name":"count x (isort xs) == count x xs"}}],[30.416317,{"FailedProof":{"prop_name":"sorted (isort xs) == sorted []"}}],[31.425133,{"FailedProof":{"prop_name":"isort (isort xs) == isort xs"}}],[33.442122,{"FailedProof":{"prop_name":"elem y (x:[]) == elem x (y:[])"}}],[34.448227,{"FailedProof":{"prop_name":"count y (x:[]) == count x (y:[])"}}],[34.469665,{"PlainProof":{"lemmas":[],"prop_name":"insert (count x []) xs == count x []:xs"}}],[36.488488,{"FailedProof":{"prop_name":"count y (y:[]) == count x (x:[])"}}],[36.514392,{"Discard":{"discarded":["xs++[] == xs","[]++xs == xs","xs++[] == xs","[]++xs == xs","xs++[] == xs","[]++xs == xs","isort [] == []","[]++[] == []","[]++(xs++ys) == xs++ys","(xs++ys)++[] == xs++ys","[]++(xs++ys) == xs++ys","(xs++ys)++[] == xs++ys","[]++(xs++ys) == xs++ys","(xs++ys)++[] == xs++ys","[]++(xs++ys) == xs++ys","(xs++ys)++[] == xs++ys","[]++(xs++ys) == xs++ys","(xs++ys)++[] == xs++ys","[]++(xs++ys) == xs++ys","(xs++ys)++[] == xs++ys","elem x (isort xs) == elem x xs","elem x (xs++xs) == elem x xs","elem x (isort xs) == elem x xs","elem x (xs++xs) == elem x xs","elem x (isort xs) == elem x xs","elem x (xs++xs) == elem x xs","elem x (isort xs) == elem x xs","elem x (xs++xs) == elem x xs","elem x (isort xs) == elem x xs","elem x (xs++xs) == elem x xs","elem x (isort xs) == elem x xs","elem x (xs++xs) == elem x xs","elem x (isort xs) == elem x xs","elem x (xs++xs) == elem x xs","elem x (isort xs) == elem x xs","elem x (xs++xs) == elem x xs","elem x (isort xs) == elem x xs","elem x (xs++xs) == elem x xs","[]++(x:xs) == x:xs","(x:xs)++[] == x:xs","(x:[])++xs == x:xs","[]++(x:xs) == x:xs","(x:xs)++[] == x:xs","(x:[])++xs == x:xs","[]++(x:xs) == x:xs","(x:xs)++[] == x:xs","(x:[])++xs == x:xs","[]++(x:xs) == x:xs","(x:xs)++[] == x:xs","(x:[])++xs == x:xs","[]++(x:xs) == x:xs","(x:xs)++[] == x:xs","(x:[])++xs == x:xs","[]++(x:xs) == x:xs","(x:xs)++[] == x:xs","(x:[])++xs == x:xs","[]++(x:xs) == x:xs","(x:xs)++[] == x:xs","(x:[])++xs == x:xs","[]++(x:xs) == x:xs","(x:xs)++[] == x:xs","(x:[])++xs == x:xs","[]++(x:xs) == x:xs","(x:xs)++[] == x:xs","(x:[])++xs == x:xs","[]++insert x xs == insert x xs","insert x xs++[] == insert x xs","[]++insert x xs == insert x xs","insert x xs++[] == insert x xs","[]++insert x xs == insert x xs","insert x xs++[] == insert x xs","[]++insert x xs == insert x xs","insert x xs++[] == insert x xs","[]++insert x xs == insert x xs","insert x xs++[] == insert x xs","[]++insert x xs == insert x xs","insert x xs++[] == insert x xs","[]++insert x xs == insert x xs","insert x xs++[] == insert x xs","[]++insert x xs == insert x xs","insert x xs++[] == insert x xs","[]++insert x xs == insert x xs","insert x xs++[] == insert x xs","count x (isort xs) == count x xs","count x (isort xs) == count x xs","count x (isort xs) == count x xs","count x (isort xs) == count x xs","count x (isort xs) == count x xs","count x (isort xs) == count x xs","count x (isort xs) == count x xs","count x (isort xs) == count x xs","count x (isort xs) == count x xs","sorted (insert x xs) == sorted xs","sorted (insert x xs) == sorted xs","sorted (insert x xs) == sorted xs","sorted (insert x xs) == sorted xs","sorted (insert x xs) == sorted xs","sorted (insert x xs) == sorted xs","sorted (insert x xs) == sorted xs","sorted (insert x xs) == sorted xs","sorted (insert x xs) == sorted xs","isort (isort xs) == isort xs","[]++isort xs == isort xs","isort xs++[] == isort xs","isort (isort xs) == isort xs","[]++isort xs == isort xs","isort xs++[] == isort xs","isort (isort xs) == isort xs","[]++isort xs == isort xs","isort xs++[] == isort xs","[]++(xs++xs) == xs++xs","(xs++xs)++[] == xs++xs","[]++(xs++xs) == xs++xs","(xs++xs)++[] == xs++xs","[]++(xs++xs) == xs++xs","(xs++xs)++[] == xs++xs","elem x [] == elem y []","elem x [] == elem y []","elem (count x xs) [] == elem x []","elem (count x xs) [] == elem x []","elem (count x xs) [] == elem x []","elem (count x xs) [] == elem y []","elem (count x xs) [] == elem y []","elem (count x xs) [] == elem y []","elem (count x xs) [] == elem y []","elem (count x xs) [] == elem y []","elem (count x xs) [] == elem y []","elem (count x []) [] == elem x []","insert x [] == x:[]","isort (x:[]) == x:[]","[]++(x:[]) == x:[]","(x:[])++[] == x:[]","insert x [] == x:[]","isort (x:[]) == x:[]","[]++(x:[]) == x:[]","(x:[])++[] == x:[]","insert x [] == x:[]","isort (x:[]) == x:[]","[]++(x:[]) == x:[]","(x:[])++[] == x:[]","count x [] == count y []","count x [] == count y []","count (count x xs) [] == count x []","count (count x xs) [] == count x []","count (count x xs) [] == count x []","count (count x xs) [] == count y []","count (count x xs) [] == count y []","count (count x xs) [] == count y []","count (count x xs) [] == count y []","count (count x xs) [] == count y []","count (count x xs) [] == count y []","count (count x []) [] == count x []","elem x (x:xs) == sorted []","elem x (x:xs) == sorted []","elem x (x:xs) == sorted []","elem x (insert x xs) == sorted []","elem x (insert x xs) == sorted []","elem x (x:xs) == sorted []","elem x (x:xs) == sorted []","elem x (x:xs) == sorted []","elem x (insert x xs) == sorted []","elem x (insert x xs) == sorted []","elem x (insert x xs) == sorted []","elem x (x:xs) == sorted []","elem x (x:xs) == sorted []","elem x (x:xs) == sorted []","elem x (insert x xs) == sorted []","elem x (insert x xs) == sorted []","elem x (insert x xs) == sorted []","sorted (isort xs) == sorted []","sorted (isort xs) == sorted []","sorted (isort xs) == sorted []"]}}],[37.54247,{"PlainProof":{"lemmas":[],"prop_name":"sorted (x:[]) == sorted []"}}],[38.532585,{"FailedProof":{"prop_name":"elem x (insert x xs) == sorted []"}}],[38.532674,{"Discard":{"discarded":["sorted (x:[]) == sorted []","sorted (x:[]) == sorted []","elem x (x:[]) == sorted []","elem x (x:[]) == sorted []","(xs++ys)++zs == xs++(ys++zs)","(xs++ys)++zs == xs++(ys++zs)","(xs++ys)++zs == xs++(ys++zs)","(xs++ys)++zs == xs++(ys++zs)","(xs++ys)++zs == xs++(ys++zs)","(xs++ys)++zs == xs++(ys++zs)","elem x (xs++ys) == elem x (ys++xs)","elem x (xs++ys) == elem x (ys++xs)","elem x (xs++ys) == elem x (ys++xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (xs++ys) == elem x (ys++xs)","elem x (xs++ys) == elem x (ys++xs)","elem x (xs++ys) == elem x (ys++xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (xs++ys) == elem x (ys++xs)","elem x (xs++ys) == elem x (ys++xs)","elem x (xs++ys) == elem x (ys++xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","elem x (insert y xs) == elem x (y:xs)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","(x:[])++insert y xs == x:insert y xs","insert x (insert y xs) == insert y (insert x xs)","insert x (insert y xs) == insert y (insert x xs)","insert x (insert y xs) == insert y (insert x xs)","insert x (insert y xs) == insert y (insert x xs)","insert x (insert y xs) == insert y (insert x xs)","insert x (insert y xs) == insert y (insert x xs)","insert x (insert y xs) == insert y (insert x xs)","insert x (insert y xs) == insert y (insert x xs)","insert x (insert y xs) == insert y (insert x xs)","count x (xs++ys) == count x (ys++xs)","count x (xs++ys) == count x (ys++xs)","count x (xs++ys) == count x (ys++xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (xs++ys) == count x (ys++xs)","count x (xs++ys) == count x (ys++xs)","count x (xs++ys) == count x (ys++xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (xs++ys) == count x (ys++xs)","count x (xs++ys) == count x (ys++xs)","count x (xs++ys) == count x (ys++xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)","count x (insert y xs) == count x (y:xs)"]}}],[39.545709,{"InductiveProof":{"lemmas":[],"prop_name":"elem x (x:[]) == sorted []"}}],[41.561595,{"FailedProof":{"prop_name":"elem (count x xs) (isort ys) == elem (count x xs) ys"}}],[41.562108,{"Discard":{"discarded":["elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys"]}}],[43.585758,{"FailedProof":{"prop_name":"elem (count x xs) (ys++ys) == elem (count x xs) ys"}}],[45.600557,{"FailedProof":{"prop_name":"count (count x xs) (isort ys) == count (count x xs) ys"}}],[45.600655,{"Discard":{"discarded":["count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","isort (xs++ys) == isort (ys++xs)","isort (xs++ys) == isort (ys++xs)","isort (xs++ys) == isort (ys++xs)","isort (insert x xs) == isort (x:xs)","insert x (isort xs) == isort (x:xs)","isort (insert x xs) == isort (x:xs)","insert x (isort xs) == isort (x:xs)","isort (insert x xs) == isort (x:xs)","insert x (isort xs) == isort (x:xs)","isort (insert x xs) == isort (x:xs)","insert x (isort xs) == isort (x:xs)","isort (insert x xs) == isort (x:xs)","insert x (isort xs) == isort (x:xs)","isort (insert x xs) == isort (x:xs)","insert x (isort xs) == isort (x:xs)","isort (insert x xs) == isort (x:xs)","insert x (isort xs) == isort (x:xs)","isort (insert x xs) == isort (x:xs)","insert x (isort xs) == isort (x:xs)","isort (insert x xs) == isort (x:xs)","insert x (isort xs) == isort (x:xs)","(xs++xs)++ys == xs++(xs++ys)","(xs++xs)++ys == xs++(xs++ys)","(xs++ys)++xs == xs++(ys++xs)","(xs++ys)++xs == xs++(ys++xs)","(xs++ys)++ys == xs++(ys++ys)","(xs++ys)++ys == xs++(ys++ys)","(xs++ys)++xs == xs++(ys++xs)","(xs++xs)++ys == xs++(xs++ys)","(xs++xs)++ys == xs++(xs++ys)","(xs++ys)++xs == xs++(ys++xs)","(xs++ys)++ys == xs++(ys++ys)","(xs++ys)++ys == xs++(ys++ys)","(xs++ys)++xs == xs++(ys++xs)","(xs++ys)++xs == xs++(ys++xs)","(xs++xs)++ys == xs++(xs++ys)","(xs++xs)++ys == xs++(xs++ys)","(xs++ys)++ys == xs++(ys++ys)","(xs++ys)++ys == xs++(ys++ys)","insert x (x:xs) == x:(x:xs)","(x:[])++(x:xs) == x:(x:xs)","insert x (x:xs) == x:(x:xs)","(x:[])++(x:xs) == x:(x:xs)","insert x (x:xs) == x:(x:xs)","(x:[])++(x:xs) == x:(x:xs)","(x:[])++insert x xs == x:insert x xs","(x:[])++insert x xs == x:insert x xs","(x:[])++insert x xs == x:insert x xs","(x:[])++isort xs == x:isort xs","(x:[])++isort xs == x:isort xs","(x:[])++isort xs == x:isort xs","(x:xs)++xs == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","(x:xs)++xs == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","(x:xs)++xs == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","insert x (x:xs) == x:(x:xs)","(x:[])++(x:xs) == x:(x:xs)","insert x (x:xs) == x:(x:xs)","(x:[])++(x:xs) == x:(x:xs)","insert x (x:xs) == x:(x:xs)","(x:[])++(x:xs) == x:(x:xs)","(x:[])++insert x xs == x:insert x xs","(x:[])++insert x xs == x:insert x xs","(x:[])++insert x xs == x:insert x xs","(x:[])++isort xs == x:isort xs","(x:[])++isort xs == x:isort xs","(x:[])++isort xs == x:isort xs","(x:xs)++xs == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","(x:xs)++xs == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","(x:xs)++xs == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","insert x (x:xs) == x:(x:xs)","(x:[])++(x:xs) == x:(x:xs)","insert x (x:xs) == x:(x:xs)","(x:[])++(x:xs) == x:(x:xs)","insert x (x:xs) == x:(x:xs)","(x:[])++(x:xs) == x:(x:xs)","(x:[])++insert x xs == x:insert x xs","(x:[])++insert x xs == x:insert x xs","(x:[])++insert x xs == x:insert x xs","(x:[])++isort xs == x:isort xs","(x:[])++isort xs == x:isort xs","(x:[])++isort xs == x:isort xs","(x:xs)++xs == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","(x:xs)++xs == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","(x:xs)++xs == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","count x (insert x xs) == count x (x:xs)","count x (insert x xs) == count x (x:xs)","count x (insert x xs) == count x (x:xs)","count x (insert x xs) == count x (x:xs)","count x (insert x xs) == count x (x:xs)","count x (insert x xs) == count x (x:xs)","count x (insert x xs) == count x (x:xs)","count x (insert x xs) == count x (x:xs)"]}}],[47.61809,{"FailedProof":{"prop_name":"count x (insert x xs) == count x (x:xs)"}}],[48.6311,{"FailedProof":{"prop_name":"elem (count x xs) (isort xs) == elem (count x xs) xs"}}],[48.631279,{"Discard":{"discarded":["elem (count x xs) (isort xs) == elem (count x xs) xs","elem (count x xs) (xs++xs) == elem (count x xs) xs","elem (count x xs) (isort xs) == elem (count x xs) xs","elem (count x xs) (xs++xs) == elem (count x xs) xs","elem (count x xs) (isort xs) == elem (count x xs) xs","elem (count x xs) (xs++xs) == elem (count x xs) xs","elem (count x xs) (isort xs) == elem (count x xs) xs","elem (count x xs) (xs++xs) == elem (count x xs) xs","elem (count x xs) (isort xs) == elem (count x xs) xs","elem (count x xs) (xs++xs) == elem (count x xs) xs","elem (count x xs) (isort xs) == elem (count x xs) xs","elem (count x xs) (xs++xs) == elem (count x xs) xs","elem (count x xs) (isort xs) == elem (count x xs) xs","elem (count x xs) (xs++xs) == elem (count x xs) xs","elem (count x xs) (isort xs) == elem (count x xs) xs","elem (count x xs) (xs++xs) == elem (count x xs) xs"]}}],[50.647184,{"FailedProof":{"prop_name":"elem (count x xs) (xs++xs) == elem (count x xs) xs"}}],[51.660969,{"FailedProof":{"prop_name":"count (count x xs) (isort xs) == count (count x xs) xs"}}],[51.661065,{"Discard":{"discarded":["count (count x xs) (isort xs) == count (count x xs) xs","count (count x xs) (isort xs) == count (count x xs) xs","count (count x xs) (isort xs) == count (count x xs) xs","count (count x xs) (isort xs) == count (count x xs) xs","count (count x xs) (isort xs) == count (count x xs) xs","count (count x xs) (isort xs) == count (count x xs) xs","count (count x xs) (isort xs) == count (count x xs) xs","count (count x xs) (isort xs) == count (count x xs) xs","(xs++xs)++xs == xs++(xs++xs)","(xs++xs)++xs == xs++(xs++xs)","(xs++xs)++xs == xs++(xs++xs)"]}}],[54.699127,{"FailedProof":{"prop_name":"elem (count x xs) (zs++ys) == elem (count x xs) (ys++zs)"}}],[56.714492,{"FailedProof":{"prop_name":"elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)"}}],[56.714577,{"Discard":{"discarded":["elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (ys++zs) == elem (count x xs) (zs++ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (ys++zs) == elem (count x xs) (zs++ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (ys++zs) == elem (count x xs) (zs++ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (ys++zs) == elem (count x xs) (zs++ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (ys++zs) == elem (count x xs) (zs++ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (ys++zs) == elem (count x xs) (zs++ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (ys++zs) == elem (count x xs) (zs++ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (ys++zs) == elem (count x xs) (zs++ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)"]}}],[59.757597,{"FailedProof":{"prop_name":"count (count x xs) (zs++ys) == count (count x xs) (ys++zs)"}}],[61.772608,{"FailedProof":{"prop_name":"count (count x xs) (insert y ys) == count (count x xs) (y:ys)"}}],[61.773113,{"Discard":{"discarded":["count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (ys++zs) == count (count x xs) (zs++ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (ys++zs) == count (count x xs) (zs++ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (ys++zs) == count (count x xs) (zs++ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (ys++zs) == count (count x xs) (zs++ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (ys++zs) == count (count x xs) (zs++ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (ys++zs) == count (count x xs) (zs++ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (ys++zs) == count (count x xs) (zs++ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (ys++zs) == count (count x xs) (zs++ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","elem (count x xs) (ys++xs) == elem (count x xs) (xs++ys)"]}}],[63.800517,{"FailedProof":{"prop_name":"elem (count x xs) (ys++xs) == elem (count x xs) (xs++ys)"}}],[65.816016,{"FailedProof":{"prop_name":"elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)"}}],[65.816124,{"Discard":{"discarded":["elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)"]}}],[67.84121,{"FailedProof":{"prop_name":"elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)"}}],[69.865188,{"FailedProof":{"prop_name":"elem (count x ys) (ys++xs) == elem (count x ys) (xs++ys)"}}],[69.865276,{"Discard":{"discarded":["elem (count x xs) (ys++xs) == elem (count x xs) (xs++ys)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (xs++ys) == elem (count x xs) (ys++xs)","elem (count x xs) (xs++ys) == elem (count x xs) (ys++xs)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (ys++xs) == elem (count x xs) (xs++ys)","elem (count x xs) (ys++xs) == elem (count x xs) (xs++ys)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (xs++ys) == elem (count x xs) (ys++xs)","elem (count x xs) (ys++xs) == elem (count x xs) (xs++ys)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (xs++ys) == elem (count x xs) (ys++xs)","elem (count x xs) (xs++ys) == elem (count x xs) (ys++xs)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (ys++xs) == elem (count x xs) (xs++ys)","elem (count x xs) (ys++xs) == elem (count x xs) (xs++ys)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (xs++ys) == elem (count x xs) (ys++xs)","elem (count x xs) (ys++xs) == elem (count x xs) (xs++ys)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (xs++ys) == elem (count x xs) (ys++xs)","elem (count x xs) (xs++ys) == elem (count x xs) (ys++xs)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","count (count x xs) (ys++xs) == count (count x xs) (xs++ys)"]}}],[71.892836,{"FailedProof":{"prop_name":"count (count x xs) (ys++xs) == count (count x xs) (xs++ys)"}}],[73.908569,{"FailedProof":{"prop_name":"count (count x xs) (insert x ys) == count (count x xs) (x:ys)"}}],[73.908664,{"Discard":{"discarded":["count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)"]}}],[75.933654,{"FailedProof":{"prop_name":"count (count x xs) (insert y xs) == count (count x xs) (y:xs)"}}],[77.953418,{"FailedProof":{"prop_name":"count (count x ys) (ys++xs) == count (count x ys) (xs++ys)"}}],[77.953958,{"Discard":{"discarded":["count (count x xs) (ys++xs) == count (count x xs) (xs++ys)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (xs++ys) == count (count x xs) (ys++xs)","count (count x xs) (xs++ys) == count (count x xs) (ys++xs)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (ys++xs) == count (count x xs) (xs++ys)","count (count x xs) (ys++xs) == count (count x xs) (xs++ys)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (xs++ys) == count (count x xs) (ys++xs)","count (count x xs) (ys++xs) == count (count x xs) (xs++ys)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (xs++ys) == count (count x xs) (ys++xs)","count (count x xs) (xs++ys) == count (count x xs) (ys++xs)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (ys++xs) == count (count x xs) (xs++ys)","count (count x xs) (ys++xs) == count (count x xs) (xs++ys)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (xs++ys) == count (count x xs) (ys++xs)","count (count x xs) (ys++xs) == count (count x xs) (xs++ys)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (xs++ys) == count (count x xs) (ys++xs)","count (count x xs) (xs++ys) == count (count x xs) (ys++xs)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","elem x (y:[]) == elem y (x:[])","elem x (y:[]) == elem y (x:[])","elem x (y:[]) == elem y (x:[])","(x:[])++(y:[]) == x:(y:[])","(x:[])++(y:[]) == x:(y:[])","(x:[])++(y:[]) == x:(y:[])","(x:[])++(y:[]) == x:(y:[])","(x:[])++(y:[]) == x:(y:[])","(x:[])++(y:[]) == x:(y:[])","insert x (y:[]) == insert y (x:[])","insert x (y:[]) == insert y (x:[])","count x (y:[]) == count y (x:[])","count x (y:[]) == count y (x:[])","count x (y:[]) == count y (x:[])"]}}],[79.980616,{"FailedProof":{"prop_name":"insert y (x:[]) == insert x (y:[])"}}],[80.990961,{"FailedProof":{"prop_name":"elem (count x xs) (insert x xs) == elem (count x xs) (x:xs)"}}],[80.991048,{"Discard":{"discarded":["elem (count x xs) (insert x xs) == elem (count x xs) (x:xs)","elem (count x xs) (insert x xs) == elem (count x xs) (x:xs)","elem (count x xs) (insert x xs) == elem (count x xs) (x:xs)","elem (count x xs) (insert x xs) == elem (count x xs) (x:xs)","elem (count x xs) (insert x xs) == elem (count x xs) (x:xs)","elem (count x xs) (insert x xs) == elem (count x xs) (x:xs)","elem (count x xs) (insert x xs) == elem (count x xs) (x:xs)","elem (count x xs) (insert x xs) == elem (count x xs) (x:xs)","insert (count x xs) [] == count x xs:[]","insert (count x xs) [] == count x xs:[]","insert (count x xs) [] == count x xs:[]","insert (count x xs) [] == count x xs:[]","insert (count x xs) [] == count x xs:[]","insert (count x xs) [] == count x xs:[]","insert (count x xs) [] == count x xs:[]","insert (count x xs) [] == count x xs:[]","insert (count x xs) [] == count x xs:[]","count (count x xs) (insert x xs) == count (count x xs) (x:xs)","count (count x xs) (insert x xs) == count (count x xs) (x:xs)","count (count x xs) (insert x xs) == count (count x xs) (x:xs)","count (count x xs) (insert x xs) == count (count x xs) (x:xs)","count (count x xs) (insert x xs) == count (count x xs) (x:xs)","count (count x xs) (insert x xs) == count (count x xs) (x:xs)","count (count x xs) (insert x xs) == count (count x xs) (x:xs)","count (count x xs) (insert x xs) == count (count x xs) (x:xs)"]}}],[83.006511,{"FailedProof":{"prop_name":"count (count x xs) (insert x xs) == count (count x xs) (x:xs)"}}],[84.027528,{"FailedProof":{"prop_name":"elem (count x []) (isort xs) == elem (count x []) xs"}}],[84.027668,{"Discard":{"discarded":["elem (count x []) (isort xs) == elem (count x []) xs","elem (count x []) (xs++xs) == elem (count x []) xs","elem (count x []) (isort xs) == elem (count x []) xs","elem (count x []) (xs++xs) == elem (count x []) xs","insert (count x []) xs == count x []:xs","insert (count x []) xs == count x []:xs","insert (count x []) xs == count x []:xs"]}}],[86.062188,{"FailedProof":{"prop_name":"elem (count x []) (xs++xs) == elem (count x []) xs"}}],[87.072778,{"FailedProof":{"prop_name":"count (count x []) (isort xs) == count (count x []) xs"}}],[87.072862,{"Discard":{"discarded":["count (count x []) (isort xs) == count (count x []) xs","count (count x []) (isort xs) == count (count x []) xs","insert x (x:[]) == x:(x:[])","(x:[])++(x:[]) == x:(x:[])","insert x (x:[]) == x:(x:[])","(x:[])++(x:[]) == x:(x:[])","insert x (x:[]) == x:(x:[])","(x:[])++(x:[]) == x:(x:[])","count x (x:[]) == count y (y:[])","count x (x:[]) == count y (y:[])","elem (count x []) (xs++ys) == elem (count x []) (ys++xs)","elem (count x []) (xs++ys) == elem (count x []) (ys++xs)"]}}],[89.122621,{"FailedProof":{"prop_name":"elem (count x []) (ys++xs) == elem (count x []) (xs++ys)"}}],[91.163879,{"FailedProof":{"prop_name":"elem (count x []) (insert y xs) == elem (count x []) (y:xs)"}}],[91.163957,{"Discard":{"discarded":["elem (count x []) (insert y xs) == elem (count x []) (y:xs)","elem (count x []) (insert y xs) == elem (count x []) (y:xs)","elem (count x []) (insert y xs) == elem (count x []) (y:xs)","elem (count x []) (insert y xs) == elem (count x []) (y:xs)","elem (count x []) (insert y xs) == elem (count x []) (y:xs)","insert (count x []) (xs++ys) == count x []:(xs++ys)","insert (count x []) (xs++ys) == count x []:(xs++ys)","insert (count x []) (xs++ys) == count x []:(xs++ys)","insert (count x []) (xs++ys) == count x []:(xs++ys)","insert (count x []) (xs++ys) == count x []:(xs++ys)","insert (count x []) (xs++ys) == count x []:(xs++ys)","insert (count x []) (y:xs) == count x []:(y:xs)","insert (count x []) (y:xs) == count x []:(y:xs)","insert (count x []) (y:xs) == count x []:(y:xs)","insert (count x []) (y:xs) == count x []:(y:xs)","insert (count x []) (y:xs) == count x []:(y:xs)","insert (count x []) (y:xs) == count x []:(y:xs)","insert (count x []) (insert y xs) == count x []:insert y xs","insert (count x []) (insert y xs) == count x []:insert y xs","insert (count x []) (insert y xs) == count x []:insert y xs","insert (count x []) (insert y xs) == count x []:insert y xs","insert (count x []) (insert y xs) == count x []:insert y xs","insert (count x []) (insert y xs) == count x []:insert y xs","count (count x []) (xs++ys) == count (count x []) (ys++xs)","count (count x []) (xs++ys) == count (count x []) (ys++xs)"]}}],[93.215129,{"FailedProof":{"prop_name":"count (count x []) (ys++xs) == count (count x []) (xs++ys)"}}],[95.256322,{"FailedProof":{"prop_name":"count (count x []) (insert y xs) == count (count x []) (y:xs)"}}],[95.256403,{"Discard":{"discarded":["count (count x []) (insert y xs) == count (count x []) (y:xs)","count (count x []) (insert y xs) == count (count x []) (y:xs)","count (count x []) (insert y xs) == count (count x []) (y:xs)","count (count x []) (insert y xs) == count (count x []) (y:xs)","count (count x []) (insert y xs) == count (count x []) (y:xs)","elem (count x []) (insert x xs) == elem (count x []) (x:xs)","elem (count x []) (insert x xs) == elem (count x []) (x:xs)","insert (count x []) (x:xs) == count x []:(x:xs)","insert (count x []) (x:xs) == count x []:(x:xs)","insert (count x []) (x:xs) == count x []:(x:xs)","insert (count x []) (insert x xs) == count x []:insert x xs","insert (count x []) (insert x xs) == count x []:insert x xs","insert (count x []) (insert x xs) == count x []:insert x xs","insert (count x []) (isort xs) == count x []:isort xs","insert (count x []) (isort xs) == count x []:isort xs","insert (count x []) (isort xs) == count x []:isort xs","insert (count x []) (xs++xs) == count x []:(xs++xs)","insert (count x []) (xs++xs) == count x []:(xs++xs)","insert (count x []) (xs++xs) == count x []:(xs++xs)"]}}],[97.271428,{"FailedProof":{"prop_name":"elem (count x []) (insert x xs) == elem (count x []) (x:xs)"}}],[98.28496,{"FailedProof":{"prop_name":"count (count x []) (insert x xs) == count (count x []) (x:xs)"}}],[98.285037,{"Discard":{"discarded":["count (count x []) (insert x xs) == count (count x []) (x:xs)","count (count x []) (insert x xs) == count (count x []) (x:xs)","insert (count x []) [] == count x []:[]","insert (count x []) (y:[]) == count x []:(y:[])","insert (count x []) (y:[]) == count x []:(y:[])","insert (count x []) (x:[]) == count x []:(x:[])"]}}],[100.318998,{"FailedProof":{"prop_name":"elem x (ys++xs) == elem x (xs++ys)"}}],[102.334242,{"FailedProof":{"prop_name":"elem x (insert y xs) == elem x (y:xs)"}}],[104.357647,{"FailedProof":{"prop_name":"insert y (insert x xs) == insert x (insert y xs)"}}],[106.377744,{"FailedProof":{"prop_name":"count x (ys++xs) == count x (xs++ys)"}}],[108.400148,{"FailedProof":{"prop_name":"count x (insert y xs) == count x (y:xs)"}}],[110.408562,{"FailedProof":{"prop_name":"sorted (insert x xs) == sorted xs"}}],[112.433604,{"FailedProof":{"prop_name":"isort (ys++xs) == isort (xs++ys)"}}],[113.4431,{"FailedProof":{"prop_name":"isort (insert x xs) == isort (x:xs)"}}],[115.458865,{"FailedProof":{"prop_name":"elem x (x:xs) == sorted []"}}],[116.47192,{"FailedProof":{"prop_name":"elem x (isort xs) == elem x xs"}}],[118.570969,{"FailedProof":{"prop_name":"elem x (xs++xs) == elem x xs"}}],[119.583344,{"FailedProof":{"prop_name":"count x (isort xs) == count x xs"}}],[120.6013,{"FailedProof":{"prop_name":"sorted (isort xs) == sorted []"}}],[121.614667,{"FailedProof":{"prop_name":"isort (isort xs) == isort xs"}}],[123.628234,{"FailedProof":{"prop_name":"elem y (x:[]) == elem x (y:[])"}}],[124.639301,{"FailedProof":{"prop_name":"count y (x:[]) == count x (y:[])"}}],[126.671085,{"FailedProof":{"prop_name":"count y (y:[]) == count x (x:[])"}}],[127.682959,{"FailedProof":{"prop_name":"elem x (insert x xs) == sorted []"}}],[129.717049,{"FailedProof":{"prop_name":"elem (count x xs) (isort ys) == elem (count x xs) ys"}}],[131.73155,{"FailedProof":{"prop_name":"elem (count x xs) (ys++ys) == elem (count x xs) ys"}}],[133.75043,{"FailedProof":{"prop_name":"count (count x xs) (isort ys) == count (count x xs) ys"}}],[135.758756,{"FailedProof":{"prop_name":"count x (insert x xs) == count x (x:xs)"}}],[137.772464,{"FailedProof":{"prop_name":"elem (count x xs) (isort xs) == elem (count x xs) xs"}}],[138.784502,{"FailedProof":{"prop_name":"elem (count x xs) (xs++xs) == elem (count x xs) xs"}}],[140.818858,{"FailedProof":{"prop_name":"count (count x xs) (isort xs) == count (count x xs) xs"}}],[142.840684,{"FailedProof":{"prop_name":"elem (count x xs) (zs++ys) == elem (count x xs) (ys++zs)"}}],[145.870855,{"FailedProof":{"prop_name":"elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)"}}],[147.894279,{"FailedProof":{"prop_name":"count (count x xs) (zs++ys) == count (count x xs) (ys++zs)"}}],[150.930778,{"FailedProof":{"prop_name":"count (count x xs) (insert y ys) == count (count x xs) (y:ys)"}}],[152.951378,{"FailedProof":{"prop_name":"elem (count x xs) (ys++xs) == elem (count x xs) (xs++ys)"}}],[154.972516,{"FailedProof":{"prop_name":"elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)"}}],[156.994101,{"FailedProof":{"prop_name":"elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)"}}],[159.020932,{"FailedProof":{"prop_name":"elem (count x ys) (ys++xs) == elem (count x ys) (xs++ys)"}}],[161.040691,{"FailedProof":{"prop_name":"count (count x xs) (ys++xs) == count (count x xs) (xs++ys)"}}],[163.064396,{"FailedProof":{"prop_name":"count (count x xs) (insert x ys) == count (count x xs) (x:ys)"}}],[165.085071,{"FailedProof":{"prop_name":"count (count x xs) (insert y xs) == count (count x xs) (y:xs)"}}],[167.110257,{"FailedProof":{"prop_name":"count (count x ys) (ys++xs) == count (count x ys) (xs++ys)"}}],[169.123013,{"FailedProof":{"prop_name":"insert y (x:[]) == insert x (y:[])"}}],[171.136632,{"FailedProof":{"prop_name":"elem (count x xs) (insert x xs) == elem (count x xs) (x:xs)"}}],[172.149087,{"FailedProof":{"prop_name":"count (count x xs) (insert x xs) == count (count x xs) (x:xs)"}}],[174.185946,{"FailedProof":{"prop_name":"elem (count x []) (isort xs) == elem (count x []) xs"}}],[175.208125,{"FailedProof":{"prop_name":"elem (count x []) (xs++xs) == elem (count x []) xs"}}],[177.233828,{"FailedProof":{"prop_name":"count (count x []) (isort xs) == count (count x []) xs"}}],[179.277873,{"FailedProof":{"prop_name":"elem (count x []) (ys++xs) == elem (count x []) (xs++ys)"}}],[181.323409,{"FailedProof":{"prop_name":"elem (count x []) (insert y xs) == elem (count x []) (y:xs)"}}],[183.364502,{"FailedProof":{"prop_name":"count (count x []) (ys++xs) == count (count x []) (xs++ys)"}}],[185.409746,{"FailedProof":{"prop_name":"count (count x []) (insert y xs) == count (count x []) (y:xs)"}}],[187.390396,{"FailedProof":{"prop_name":"elem (count x []) (insert x xs) == elem (count x []) (x:xs)"}}],[189.402577,{"FailedProof":{"prop_name":"count (count x []) (insert x xs) == count (count x []) (x:xs)"}}],[189.402582,{"StartingUserLemmas":[]}],[190.439057,{"FailedProof":{"prop_name":"prop_T15"}}],[191.448539,{"FailedProof":{"prop_name":"prop_T1"}}],[194.469501,{"FailedProof":{"prop_name":"prop_T9"}}],[196.492013,{"FailedProof":{"prop_name":"prop_T8"}}],[197.06462,{"InductiveProof":{"lemmas":[],"prop_name":"prop_T39"}}],[198.972869,{"InductiveProof":{"lemmas":[],"prop_name":"prop_T38"}}],[200.111181,{"InductiveProof":{"lemmas":[],"prop_name":"prop_T37"}}],[202.043135,{"InductiveProof":{"lemmas":[],"prop_name":"prop_T36"}}],[203.134,{"FailedProof":{"prop_name":"prop_T24"}}],[204.139531,{"FailedProof":{"prop_name":"prop_T16"}}],[206.066689,{"FailedProof":{"prop_name":"prop_T26"}}],[207.072991,{"FailedProof":{"prop_name":"prop_T13"}}],[208.57184,{"InductiveProof":{"lemmas":[],"prop_name":"prop_T47"}}],[209.610567,{"InductiveProof":{"lemmas":[],"prop_name":"prop_T46"}}],[211.17506,{"FailedProof":{"prop_name":"prop_T45"}}],[213.193694,{"FailedProof":{"prop_name":"prop_T44"}}],[214.677255,{"FailedProof":{"prop_name":"prop_T50"}}],[216.216105,{"FailedProof":{"prop_name":"prop_T49"}}],[217.229148,{"FailedProof":{"prop_name":"prop_T48"}}],[218.242816,{"FailedProof":{"prop_name":"prop_T4"}}],[219.711634,{"FailedProof":{"prop_name":"prop_T3"}}],[221.26809,{"FailedProof":{"prop_name":"prop_T25"}}],[222.744209,{"FailedProof":{"prop_name":"prop_T23"}}],[224.300629,{"FailedProof":{"prop_name":"prop_T22"}}],[225.311552,{"FailedProof":{"prop_name":"prop_T20"}}],[226.781167,{"FailedProof":{"prop_name":"prop_T2"}}],[228.335159,{"FailedProof":{"prop_name":"prop_T34"}}],[229.800449,{"FailedProof":{"prop_name":"prop_T35"}}],[230.806559,{"FailedProof":{"prop_name":"prop_T33"}}],[232.367585,{"FailedProof":{"prop_name":"prop_T7"}}],[233.38103,{"FailedProof":{"prop_name":"prop_T31"}}],[234.827866,{"FailedProof":{"prop_name":"prop_T6"}}],[235.8401,{"FailedProof":{"prop_name":"prop_T5"}}],[236.853384,{"FailedProof":{"prop_name":"prop_T30"}}],[237.8667,{"FailedProof":{"prop_name":"prop_T29"}}],[238.880165,{"FailedProof":{"prop_name":"prop_T27"}}],[240.419314,{"FailedProof":{"prop_name":"prop_T19"}}],[241.913119,{"FailedProof":{"prop_name":"prop_T17"}}],[242.918371,{"InductiveProof":{"lemmas":[],"prop_name":"prop_T12"}}],[243.931602,{"FailedProof":{"prop_name":"prop_T10"}}],[245.478232,{"FailedProof":{"prop_name":"prop_G6"}}],[246.48396,{"InductiveProof":{"lemmas":[],"prop_name":"prop_G5"}}],[247.497415,{"FailedProof":{"prop_name":"prop_T32"}}],[248.502864,{"InductiveProof":{"lemmas":[],"prop_name":"prop_G9"}}],[249.097898,{"InductiveProof":{"lemmas":[],"prop_name":"prop_T43"}}],[251.108701,{"FailedProof":{"prop_name":"prop_T42"}}],[252.577518,{"FailedProof":{"prop_name":"prop_T41"}}],[253.582622,{"InductiveProof":{"lemmas":[],"prop_name":"prop_T40"}}],[254.593209,{"FailedProof":{"prop_name":"prop_T14"}}],[254.593232,{"Finished":{"unproved":["prop_T15","prop_T1","prop_T9","prop_T8","prop_T24","prop_T16","prop_T26","prop_T13","prop_T45","prop_T44","prop_T50","prop_T49","prop_T48","prop_T4","prop_T3","prop_T25","prop_T23","prop_T22","prop_T20","prop_T2","prop_T34","prop_T35","prop_T33","prop_T7","prop_T31","prop_T6","prop_T5","prop_T30","prop_T29","prop_T27","prop_T19","prop_T17","prop_T10","prop_G6","prop_T32","prop_T42","prop_T41","prop_T14"],"proved":["prop_T39","prop_T38","prop_T37","prop_T36","prop_T47","prop_T46","prop_T12","prop_G5","prop_G9","prop_T43","prop_T40"],"qs_proved":["xs++[] == xs","(xs++ys)++zs == xs++(ys++zs)","insert x (x:xs) == x:(x:xs)","elem x (x:[]) == sorted []"],"qs_unproved":["elem x (xs++ys) == elem x (ys++xs)","elem x (insert y xs) == elem x (y:xs)","insert x (insert y xs) == insert y (insert x xs)","count x (xs++ys) == count x (ys++xs)","count x (insert y xs) == count x (y:xs)","sorted (insert x xs) == sorted xs","isort (xs++ys) == isort (ys++xs)","isort (insert x xs) == isort (x:xs)","elem x (x:xs) == sorted []","elem x (isort xs) == elem x xs","elem x (xs++xs) == elem x xs","count x (isort xs) == count x xs","sorted (isort xs) == sorted []","isort (isort xs) == isort xs","elem x (y:[]) == elem y (x:[])","count x (y:[]) == count y (x:[])","count x (x:[]) == count y (y:[])","elem x (insert x xs) == sorted []","elem (count x xs) (isort ys) == elem (count x xs) ys","elem (count x xs) (ys++ys) == elem (count x xs) ys","count (count x xs) (isort ys) == count (count x xs) ys","count x (insert x xs) == count x (x:xs)","elem (count x xs) (isort xs) == elem (count x xs) xs","elem (count x xs) (xs++xs) == elem (count x xs) xs","count (count x xs) (isort xs) == count (count x xs) xs","elem (count x xs) (ys++zs) == elem (count x xs) (zs++ys)","elem (count x xs) (insert y ys) == elem (count x xs) (y:ys)","count (count x xs) (ys++zs) == count (count x xs) (zs++ys)","count (count x xs) (insert y ys) == count (count x xs) (y:ys)","elem (count x xs) (ys++xs) == elem (count x xs) (xs++ys)","elem (count x xs) (insert x ys) == elem (count x xs) (x:ys)","elem (count x xs) (insert y xs) == elem (count x xs) (y:xs)","elem (count x xs) (xs++ys) == elem (count x xs) (ys++xs)","count (count x xs) (ys++xs) == count (count x xs) (xs++ys)","count (count x xs) (insert x ys) == count (count x xs) (x:ys)","count (count x xs) (insert y xs) == count (count x xs) (y:xs)","count (count x xs) (xs++ys) == count (count x xs) (ys++xs)","insert x (y:[]) == insert y (x:[])","elem (count x xs) (insert x xs) == elem (count x xs) (x:xs)","count (count x xs) (insert x xs) == count (count x xs) (x:xs)","elem (count x []) (isort xs) == elem (count x []) xs","elem (count x []) (xs++xs) == elem (count x []) xs","count (count x []) (isort xs) == count (count x []) xs","elem (count x []) (xs++ys) == elem (count x []) (ys++xs)","elem (count x []) (insert y xs) == elem (count x []) (y:xs)","count (count x []) (xs++ys) == count (count x []) (ys++xs)","count (count x []) (insert y xs) == count (count x []) (y:xs)","elem (count x []) (insert x xs) == elem (count x []) (x:xs)","count (count x []) (insert x xs) == count (count x []) (x:xs)"]}}]]