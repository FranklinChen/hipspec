[[1.0e-6,{"Started":[]}],[4.912384,{"FileProcessed":[]}],[9.788176,{"QuickSpecDone":{"eqs":2628,"classes":10340}}],[140.160469,{"InductiveProof":{"prop_name":"y+x == x+y","lemmas":[]}}],[140.239685,{"InductiveProof":{"prop_name":"x-x == Z","lemmas":[]}}],[140.311966,{"PlainProof":{"prop_name":"filter p [] == []","lemmas":[]}}],[141.311283,{"InductiveProof":{"prop_name":"xs++[] == xs","lemmas":[]}}],[141.413327,{"PlainProof":{"prop_name":"take x [] == []","lemmas":[]}}],[141.431949,{"PlainProof":{"prop_name":"drop x [] == []","lemmas":[]}}],[141.473737,{"PlainProof":{"prop_name":"count x [] == Z","lemmas":[]}}],[141.503996,{"PlainProof":{"prop_name":"x+Z == x","lemmas":[]}}],[141.564692,{"PlainProof":{"prop_name":"x-Z == x","lemmas":[]}}],[141.591849,{"PlainProof":{"prop_name":"[]++xs == xs","lemmas":[]}}],[141.701448,{"PlainProof":{"prop_name":"take Z xs == []","lemmas":[]}}],[141.731129,{"PlainProof":{"prop_name":"drop Z xs == xs","lemmas":[]}}],[141.867012,{"PlainProof":{"prop_name":"Z-x == Z","lemmas":[]}}],[141.867041,{"PlainProof":{"prop_name":"rev [] == []","lemmas":[]}}],[141.912516,{"PlainProof":{"prop_name":"len [] == Z","lemmas":[]}}],[145.949116,{"FailedProof":{"prop_name":"take y (take x xs) == take x (take y xs)"}}],[149.981043,{"FailedProof":{"prop_name":"drop y (drop x xs) == drop x (drop y xs)"}}],[152.02351,{"InductiveProof":{"prop_name":"count x (ys++xs) == count x (xs++ys)","lemmas":[]}}],[153.160646,{"InductiveProof":{"prop_name":"y+(x+z) == x+(y+z)","lemmas":[]}}],[154.307222,{"InductiveProof":{"prop_name":"(xs++ys)++zs == xs++(ys++zs)","lemmas":[]}}],[154.414994,{"PlainProof":{"prop_name":"(x:xs)++ys == x:(xs++ys)","lemmas":[]}}],[158.45188,{"FailedProof":{"prop_name":"drop (x+y) xs == drop x (drop y xs)"}}],[161.623038,{"InductiveProof":{"prop_name":"(x-y)-z == x-(y+z)","lemmas":[]}}],[163.662837,{"InductiveProof":{"prop_name":"len (ys++xs) == len (xs++ys)","lemmas":[]}}],[166.201,{"PlainProof":{"prop_name":"len (y:xs) == len (x:xs)","lemmas":[]}}],[168.277916,{"FailedProof":{"prop_name":"filter p (filter p xs) == filter p xs"}}],[170.338921,{"FailedProof":{"prop_name":"filter p (rev xs) == rev (filter p xs)"}}],[172.372728,{"InductiveProof":{"prop_name":"take x (take x xs) == take x xs","lemmas":[]}}],[174.533257,{"InductiveProof":{"prop_name":"drop x (take x xs) == []","lemmas":[]}}],[175.592173,{"InductiveProof":{"prop_name":"count x (x:xs) == S (count x xs)","lemmas":[]}}],[176.653905,{"PlainProof":{"prop_name":"x+S y == S (x+y)","lemmas":[]}}],[176.664981,{"InductiveProof":{"prop_name":"count x (rev xs) == count x xs","lemmas":[]}}],[178.89371,{"InductiveProof":{"prop_name":"y+(x-y) == x+(y-x)","lemmas":[]}}],[180.90783,{"FailedProof":{"prop_name":"y-(y-x) == x-(x-y)"}}],[181.987157,{"InductiveProof":{"prop_name":"(x+y)-x == y","lemmas":[]}}],[184.012858,{"InductiveProof":{"prop_name":"len xs-x == len (drop x xs)","lemmas":[]}}],[185.130628,{"FailedProof":{"prop_name":"rev (rev xs) == xs"}}],[186.114493,{"InductiveProof":{"prop_name":"len (rev xs) == len xs","lemmas":[]}}],[186.179965,{"PlainProof":{"prop_name":"S (len xs) == len (x:xs)","lemmas":[]}}],[187.301126,{"InductiveProof":{"prop_name":"take (len xs) xs == xs","lemmas":[]}}],[187.414392,{"PlainProof":{"prop_name":"drop (len xs) xs == []","lemmas":[]}}],[187.916052,{"PlainProof":{"prop_name":"S y-y == S Z","lemmas":[]}}],[192.075993,{"FailedProof":{"prop_name":"filter p xs++filter p ys == filter p (xs++ys)"}}],[195.216658,{"FailedProof":{"prop_name":"take (count x xs) (xs++ys) == take (count x xs) xs"}}],[199.270001,{"FailedProof":{"prop_name":"take (x+y) (take x xs) == take x xs"}}],[202.351363,{"FailedProof":{"prop_name":"take (x-y) (take x xs) == take (x-y) xs"}}],[206.397117,{"FailedProof":{"prop_name":"take (x-y) (drop y xs) == drop y (take x xs)"}}],[209.517184,{"InductiveProof":{"prop_name":"drop (x+y) (y:xs) == drop (x+y) (x:xs)","lemmas":[]}}],[212.782361,{"PlainProof":{"prop_name":"(x+z)-(z-y) == (x+y)-(y-z)","lemmas":[]}}],[213.706534,{"FailedProof":{"prop_name":"count x xs+count x ys == count x (xs++ys)"}}],[214.055498,{"PlainProof":{"prop_name":"take (S x) (y:xs) == y:take x xs","lemmas":[]}}],[214.210883,{"PlainProof":{"prop_name":"(y-z)-(y-x) == (x-z)-(x-y)","lemmas":[]}}],[214.281775,{"PlainProof":{"prop_name":"drop (S x) (y:xs) == drop x xs","lemmas":[]}}],[216.29476,{"FailedProof":{"prop_name":"count y (x:[]) == count x (y:[])"}}],[218.367661,{"InductiveProof":{"prop_name":"take x xs++drop x xs == xs","lemmas":[]}}],[220.432693,{"FailedProof":{"prop_name":"count x xs-len xs == Z"}}],[221.734441,{"PlainProof":{"prop_name":"(x-y)-(y-x) == x-y","lemmas":[]}}],[222.675172,{"InductiveProof":{"prop_name":"(x+z)-S z == (x+y)-S y","lemmas":[]}}],[223.726082,{"InductiveProof":{"prop_name":"rev xs++rev ys == rev (ys++xs)","lemmas":[]}}],[225.818663,{"FailedProof":{"prop_name":"take (len xs) (filter p xs) == filter p xs"}}],[226.909769,{"InductiveProof":{"prop_name":"take (len xs) (xs++ys) == xs","lemmas":[]}}],[227.913491,{"PlainProof":{"prop_name":"take (len xs) (drop x xs) == drop x xs","lemmas":[]}}],[229.113045,{"PlainProof":{"prop_name":"take (S x) (take x xs) == take x xs","lemmas":[]}}],[231.151033,{"FailedProof":{"prop_name":"drop (len xs) (filter p xs) == []"}}],[232.280582,{"InductiveProof":{"prop_name":"drop (len xs) (xs++ys) == ys","lemmas":[]}}],[234.293073,{"FailedProof":{"prop_name":"count (S x) (x:xs) == count (S x) xs"}}],[234.488233,{"PlainProof":{"prop_name":"len xs+len ys == len (xs++ys)","lemmas":[]}}],[234.515759,{"PlainProof":{"prop_name":"S x-S y == x-y","lemmas":[]}}],[235.635747,{"InductiveProof":{"prop_name":"S y-(y-x) == S x-(x-y)","lemmas":[]}}],[236.806847,{"InductiveProof":{"prop_name":"(x+x)-(y+y) == (x-y)+(x-y)","lemmas":[]}}],[236.864267,{"PlainProof":{"prop_name":"rev (x:[]) == x:[]","lemmas":[]}}],[236.885703,{"PlainProof":{"prop_name":"drop (len xs) (rev xs) == []","lemmas":[]}}],[238.966194,{"FailedProof":{"prop_name":"count (x+y) (x:[]) == S x-(x+y)"}}],[241.017753,{"FailedProof":{"prop_name":"count (y-x) (y:[]) == count (x-y) (x:[])"}}],[241.075602,{"PlainProof":{"prop_name":"rev xs++(x:[]) == rev (x:xs)","lemmas":[]}}],[242.220101,{"InductiveProof":{"prop_name":"take (x+x) (y:[]) == take x (y:[])","lemmas":[]}}],[242.292844,{"PlainProof":{"prop_name":"drop (x+x) (y:[]) == drop x (y:[])","lemmas":[]}}],[242.320748,{"PlainProof":{"prop_name":"count (S x) (Z:xs) == count (S x) xs","lemmas":[]}}],[244.355623,{"FailedProof":{"prop_name":"count (x+x) (y:[]) == count (y-x) (x:[])"}}],[246.36969,{"FailedProof":{"prop_name":"count (x+x) (Z:xs) == count (x+x) (x:xs)"}}],[247.431934,{"InductiveProof":{"prop_name":"take (S Z) (xs++xs) == take (S Z) xs","lemmas":[]}}],[248.571722,{"InductiveProof":{"prop_name":"S Z-(x+x) == S y-(x+y)","lemmas":[]}}],[250.649564,{"FailedProof":{"prop_name":"count (count x xs) (Z:[]) == S Z-count x xs"}}],[252.740154,{"InductiveProof":{"prop_name":"count (x+y) (Z:[]) == S Z-(x+y)","lemmas":[]}}],[252.813368,{"PlainProof":{"prop_name":"count (x-y) (Z:[]) == S Z-(x-y)","lemmas":[]}}],[252.836424,{"PlainProof":{"prop_name":"count (len xs) (Z:[]) == S Z-len xs","lemmas":[]}}],[252.925689,{"Discard":{"discarded":["x+y == y+x","x+y == y+x","x+y == y+x","x-x == Z","x-x == Z","x-x == Z","filter p [] == []","xs++[] == xs","xs++[] == xs","xs++[] == xs","take x [] == []","take x [] == []","take x [] == []","drop x [] == []","drop x [] == []","drop x [] == []","count x [] == Z","count x [] == Z","count x [] == Z","x+Z == x","x+Z == x","x+Z == x","x-Z == x","x-Z == x","x-Z == x","[]++xs == xs","[]++xs == xs","[]++xs == xs","take Z xs == []","take Z xs == []","take Z xs == []","drop Z xs == xs","drop Z xs == xs","drop Z xs == xs","Z+x == x","Z+x == x","Z+x == x","Z-x == Z","Z-x == Z","Z-x == Z","rev [] == []","len [] == Z","[]++[] == []","take Z [] == []","drop Z [] == []","count Z [] == Z","Z+Z == Z","Z-Z == Z","take x (take y xs) == take y (take x xs)","take x (take y xs) == take y (take x xs)","take x (take y xs) == take y (take x xs)","take x (take y xs) == take y (take x xs)","take x (take y xs) == take y (take x xs)","take x (take y xs) == take y (take x xs)","take x (take y xs) == take y (take x xs)","take x (take y xs) == take y (take x xs)","take x (take y xs) == take y (take x xs)","drop x (drop y xs) == drop y (drop x xs)","drop x (drop y xs) == drop y (drop x xs)","drop x (drop y xs) == drop y (drop x xs)","drop x (drop y xs) == drop y (drop x xs)","drop x (drop y xs) == drop y (drop x xs)","drop x (drop y xs) == drop y (drop x xs)","drop x (drop y xs) == drop y (drop x xs)","drop x (drop y xs) == drop y (drop x xs)","drop x (drop y xs) == drop y (drop x xs)","count x (xs++ys) == count x (ys++xs)","count x (xs++ys) == count x (ys++xs)","count x (xs++ys) == count x (ys++xs)","count x (xs++ys) == count x (ys++xs)","count x (xs++ys) == count x (ys++xs)","count x (xs++ys) == count x (ys++xs)","count x (xs++ys) == count x (ys++xs)","count x (xs++ys) == count x (ys++xs)","count x (xs++ys) == count x (ys++xs)","x+(y+z) == y+(x+z)","x+(y+z) == y+(z+x)","(xs++ys)++zs == xs++(ys++zs)","(xs++ys)++zs == xs++(ys++zs)","(xs++ys)++zs == xs++(ys++zs)","(xs++ys)++zs == xs++(ys++zs)","(xs++ys)++zs == xs++(ys++zs)","(xs++ys)++zs == xs++(ys++zs)","(x:xs)++ys == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","drop (x+y) xs == drop x (drop y xs)","drop (x+y) xs == drop x (drop y xs)","drop (x+y) xs == drop x (drop y xs)","drop (x+y) xs == drop x (drop y xs)","drop (x+y) xs == drop x (drop y xs)","drop (x+y) xs == drop x (drop y xs)","drop (x+y) xs == drop x (drop y xs)","drop (x+y) xs == drop x (drop y xs)","drop (x+y) xs == drop x (drop y xs)","count x xs+y == y+count x xs","count x xs+y == y+count x xs","count x xs+y == y+count x xs","count x xs+y == y+count x xs","count x xs+y == y+count x xs","count x xs+y == y+count x xs","count x xs+y == y+count x xs","count x xs+y == y+count x xs","count x xs+y == y+count x xs","count x xs+y == y+count x xs","count x xs+y == y+count x xs","count x xs+y == y+count x xs","count x xs+y == y+count x xs","count x xs+y == y+count x xs","count x xs+y == y+count x xs","count x xs+y == y+count x xs","count x xs+y == y+count x xs","count x xs+y == y+count x xs","(x+y)+z == x+(y+z)","(x+y)+z == x+(z+y)","(x+y)+z == z+(x+y)","(x-y)+z == z+(x-y)","(x-y)+z == z+(x-y)","(x-y)+z == z+(x-y)","(x-y)+z == z+(x-y)","(x-y)+z == z+(x-y)","(x-y)+z == z+(x-y)","(x-y)-z == x-(y+z)","(x-y)-z == x-(z+y)","(x-y)-z == x-(y+z)","(x-y)-z == x-(z+y)","(x-y)-z == x-(y+z)","(x-y)-z == x-(z+y)","len (xs++ys) == len (ys++xs)","len (xs++ys) == len (ys++xs)","len (xs++ys) == len (ys++xs)","len (x:xs) == len (y:xs)","len (x:xs) == len (y:xs)","len (x:xs) == len (y:xs)","len (x:xs) == len (y:xs)","len (x:xs) == len (y:xs)","len (x:xs) == len (y:xs)","filter p (filter p xs) == filter p xs","filter p (filter p xs) == filter p xs","filter p (filter p xs) == filter p xs","filter p (rev xs) == rev (filter p xs)","filter p (rev xs) == rev (filter p xs)","filter p (rev xs) == rev (filter p xs)","take x (take x xs) == take x xs","take x (take x xs) == take x xs","take x (take x xs) == take x xs","take x (take x xs) == take x xs","take x (take x xs) == take x xs","take x (take x xs) == take x xs","take x (take x xs) == take x xs","take x (take x xs) == take x xs","take x (take x xs) == take x xs","drop x (take x xs) == []","drop x (take x xs) == []","drop x (take x xs) == []","drop x (take x xs) == []","drop x (take x xs) == []","drop x (take x xs) == []","drop x (take x xs) == []","drop x (take x xs) == []","drop x (take x xs) == []","count x (x:xs) == S (count x xs)","count x (x:xs) == S (count x xs)","count x (x:xs) == S (count x xs)","count x (rev xs) == count x xs","count x (rev xs) == count x xs","count x (rev xs) == count x xs","count x (x:xs) == S (count x xs)","count x (x:xs) == S (count x xs)","count x (x:xs) == S (count x xs)","count x (rev xs) == count x xs","count x (rev xs) == count x xs","count x (rev xs) == count x xs","count x (x:xs) == S (count x xs)","count x (x:xs) == S (count x xs)","count x (x:xs) == S (count x xs)","count x (rev xs) == count x xs","count x (rev xs) == count x xs","count x (rev xs) == count x xs","x+S y == S (x+y)","x+S y == S (x+y)","x+(y+x) == y+(x+x)","x+(y-x) == y+(x-y)","x+S y == S (y+x)","x+S y == S (x+y)","x+(y+y) == y+(y+x)","x+(y+x) == y+(x+x)","x+(y+x) == y+(x+x)","x+(y-x) == y+(x-y)","x+(y-x) == y+(x-y)","x+S y == S (y+x)","x+S y == S (y+x)","x+(y+y) == y+(y+x)","x+(y+y) == y+(y+x)","x-(x+y) == Z","x-(x+y) == Z","x-(y+x) == Z","x-(x+y) == Z","x-(x-y) == y-(y-x)","x-(y+x) == Z","x-(y+x) == Z","x-(x-y) == y-(y-x)","x-(x-y) == y-(y-x)","(xs++ys)++xs == xs++(ys++xs)","(xs++ys)++ys == xs++(ys++ys)","(xs++ys)++xs == xs++(ys++xs)","(xs++ys)++ys == xs++(ys++ys)","(xs++ys)++ys == xs++(ys++ys)","(xs++ys)++xs == xs++(ys++xs)","(xs++ys)++xs == xs++(ys++xs)","(xs++ys)++ys == xs++(ys++ys)","(xs++ys)++ys == xs++(ys++ys)","(xs++ys)++xs == xs++(ys++xs)","(xs++ys)++ys == xs++(ys++ys)","(xs++ys)++xs == xs++(ys++xs)","(x:xs)++xs == x:(xs++xs)","(x:xs)++xs == x:(xs++xs)","(x:xs)++xs == x:(xs++xs)","(x:xs)++xs == x:(xs++xs)","(x:xs)++xs == x:(xs++xs)","(x:xs)++xs == x:(xs++xs)","(x:xs)++xs == x:(xs++xs)","(x:xs)++xs == x:(xs++xs)","(x:xs)++xs == x:(xs++xs)","count x xs+x == x+count x xs","count x xs+x == x+count x xs","count x xs+x == x+count x xs","count x xs+x == x+count x xs","count x xs+x == x+count x xs","count x xs+x == x+count x xs","count x xs+x == x+count x xs","count x xs+x == x+count x xs","count x xs+x == x+count x xs","(x+y)+x == x+(x+y)","(x+y)+y == x+(y+y)","(x+y)+x == x+(x+y)","(x+y)+y == x+(y+y)","(x+y)+x == x+(x+y)","(x+y)+y == x+(y+y)","(x-y)+x == x+(x-y)","(x-y)+y == x+(y-x)","(x-y)+x == x+(x-y)","(x-y)+y == x+(y-x)","(x-y)+y == y+(x-y)","(x-y)+x == x+(x-y)","(x-y)+x == x+(x-y)","(x-y)+y == x+(y-x)","(x-y)+y == y+(x-y)","(x-y)+x == x+(x-y)","(x-y)+y == y+(x-y)","(x-y)+x == x+(x-y)","(x+y)-x == y","(x+y)-y == x","(x+y)-x == y","(x+y)-y == x","(x+y)-x == y","(x+y)-y == x","(x-y)-x == Z","(x-y)-y == x-(y+y)","(x-y)-x == Z","(x-y)-y == x-(y+y)","(x-y)-y == x-(y+y)","(x-y)-x == Z","(x-y)-x == Z","(x-y)-y == x-(y+y)","(x-y)-y == x-(y+y)","(x-y)-x == Z","(x-y)-y == x-(y+y)","(x-y)-x == Z","(xs++xs)++ys == xs++(xs++ys)","(xs++xs)++ys == xs++(xs++ys)","(xs++xs)++ys == xs++(xs++ys)","(xs++xs)++ys == xs++(xs++ys)","(xs++xs)++ys == xs++(xs++ys)","(xs++xs)++ys == xs++(xs++ys)","drop (x+x) xs == drop x (drop x xs)","drop (x+x) xs == drop x (drop x xs)","drop (x+x) xs == drop x (drop x xs)","drop (x+x) xs == drop x (drop x xs)","drop (x+x) xs == drop x (drop x xs)","drop (x+x) xs == drop x (drop x xs)","drop (x+x) xs == drop x (drop x xs)","drop (x+x) xs == drop x (drop x xs)","len xs+x == x+len xs","len xs+x == x+len xs","len xs+x == x+len xs","len xs+x == x+len xs","len xs+x == x+len xs","len xs+x == x+len xs","len xs+x == x+len xs","len xs+x == x+len xs","len xs+x == x+len xs","S x+y == S (x+y)","S x+y == S (x+y)","S x+y == S (y+x)","S x+y == S (x+y)","S x+y == S (y+x)","S x+y == S (y+x)","(x+x)+y == x+(x+y)","(x+x)+y == x+(x+y)","(x+x)+y == y+(x+x)","(x+x)+y == x+(x+y)","(x+x)+y == y+(x+x)","(x+x)+y == y+(x+x)","len xs-x == len (drop x xs)","len xs-x == len (drop x xs)","len xs-x == len (drop x xs)","len xs-x == len (drop x xs)","len xs-x == len (drop x xs)","len xs-x == len (drop x xs)","len xs-x == len (drop x xs)","len xs-x == len (drop x xs)","len xs-x == len (drop x xs)","rev (rev xs) == xs","rev (rev xs) == xs","rev (rev xs) == xs","len (rev xs) == len xs","len (rev xs) == len xs","len (rev xs) == len xs","S (len xs) == len (x:xs)","S (len xs) == len (x:xs)","S (len xs) == len (x:xs)","x+S x == S (x+x)","x+S x == S (x+x)","x+S x == S (x+x)","x-S x == Z","x-(x+x) == Z","x-S x == Z","x-(x+x) == Z","x-S x == Z","x-(x+x) == Z","(xs++xs)++xs == xs++(xs++xs)","(xs++xs)++xs == xs++(xs++xs)","(xs++xs)++xs == xs++(xs++xs)","take (len xs) xs == xs","take (len xs) xs == xs","take (len xs) xs == xs","drop (len xs) xs == []","drop (len xs) xs == []","drop (len xs) xs == []","S x+x == S (x+x)","S x+x == S (x+x)","S x+x == S (x+x)","(x+x)+x == x+(x+x)","(x+x)+x == x+(x+x)","(x+x)+x == x+(x+x)","S x-x == S Z","S x-x == S Z","S x-x == S Z","(x+x)-x == x","(x+x)-x == x","(x+x)-x == x"]}}],[254.036471,{"PlainProof":{"prop_name":"drop (x+x) xs == drop x (drop x xs)","lemmas":[]}}],[255.358109,{"InductiveProof":{"prop_name":"drop (x+z) (drop y xs) == drop (x+y) (drop z xs)","lemmas":[]}}],[255.367894,{"Discard":{"discarded":["drop (x+y) (drop z xs) == drop (x+z) (drop y xs)","drop (x+y) (drop z xs) == drop (x+z) (drop y xs)","drop (x+y) (drop z xs) == drop (z+x) (drop y xs)","drop (x+y) (drop z xs) == drop (z+x) (drop y xs)","drop (x+y) (drop z xs) == drop (z+x) (drop y xs)","count (count x xs) (ys++zs) == count (count x xs) (zs++ys)","count (count x xs) (ys++zs) == count (count x xs) (zs++ys)","count (count x xs) (ys++zs) == count (count x xs) (zs++ys)","count (count x xs) (ys++zs) == count (count x xs) (zs++ys)","count (count x xs) (ys++zs) == count (count x xs) (zs++ys)","count (count x xs) (ys++zs) == count (count x xs) (zs++ys)","count (count x xs) (ys++zs) == count (count x xs) (zs++ys)","count (count x xs) (ys++zs) == count (count x xs) (zs++ys)","count (count x xs) (ys++zs) == count (count x xs) (zs++ys)","count (x+y) (xs++ys) == count (x+y) (ys++xs)","count (x+y) (xs++ys) == count (x+y) (ys++xs)","count (x+y) (xs++ys) == count (x+y) (ys++xs)","count (x+y) (xs++ys) == count (x+y) (ys++xs)","count (x+y) (xs++ys) == count (x+y) (ys++xs)","count (x+y) (xs++ys) == count (x+y) (ys++xs)","count (x+y) (xs++ys) == count (x+y) (ys++xs)","count (x+y) (xs++ys) == count (x+y) (ys++xs)","count (x+y) (xs++ys) == count (x+y) (ys++xs)","count (x-y) (xs++ys) == count (x-y) (ys++xs)","count (x-y) (xs++ys) == count (x-y) (ys++xs)","count (x-y) (xs++ys) == count (x-y) (ys++xs)","count (x-y) (xs++ys) == count (x-y) (ys++xs)","count (x-y) (xs++ys) == count (x-y) (ys++xs)","count (x-y) (xs++ys) == count (x-y) (ys++xs)","count (x-y) (xs++ys) == count (x-y) (ys++xs)","count (x-y) (xs++ys) == count (x-y) (ys++xs)","count (x-y) (xs++ys) == count (x-y) (ys++xs)","count (x-y) (xs++ys) == count (x-y) (ys++xs)","count (x-y) (xs++ys) == count (x-y) (ys++xs)","count (x-y) (xs++ys) == count (x-y) (ys++xs)","count (x-y) (xs++ys) == count (x-y) (ys++xs)","count (x-y) (xs++ys) == count (x-y) (ys++xs)","count (x-y) (xs++ys) == count (x-y) (ys++xs)","count (x-y) (xs++ys) == count (x-y) (ys++xs)","count (x-y) (xs++ys) == count (x-y) (ys++xs)","count (x-y) (xs++ys) == count (x-y) (ys++xs)","count x xs+count y ys == count y ys+count x xs","count x xs+count y ys == count y ys+count x xs","count x xs+count y ys == count y ys+count x xs","count x xs+count y ys == count y ys+count x xs","count x xs+count y ys == count y ys+count x xs","count x xs+count y ys == count y ys+count x xs","count x xs+count y ys == count y ys+count x xs","count x xs+count y ys == count y ys+count x xs","count x xs+count y ys == count y ys+count x xs","count x xs+count y ys == count y ys+count x xs","count x xs+count y ys == count y ys+count x xs","count x xs+count y ys == count y ys+count x xs","count x xs+count y ys == count y ys+count x xs","count x xs+count y ys == count y ys+count x xs","count x xs+count y ys == count y ys+count x xs","count x xs+count y ys == count y ys+count x xs","count x xs+count y ys == count y ys+count x xs","count x xs+count y ys == count y ys+count x xs","(x+y)+count z xs == count z xs+(x+y)","(x+y)+count z xs == count z xs+(x+y)","(x+y)+count z xs == count z xs+(x+y)","(x+y)+count z xs == count z xs+(x+y)","(x+y)+count z xs == count z xs+(x+y)","(x+y)+count z xs == count z xs+(x+y)","(x+y)+count z xs == count z xs+(x+y)","(x+y)+count z xs == count z xs+(x+y)","(x+y)+count z xs == count z xs+(x+y)","(x-y)+count z xs == count z xs+(x-y)","(x-y)+count z xs == count z xs+(x-y)","(x-y)+count z xs == count z xs+(x-y)","(x-y)+count z xs == count z xs+(x-y)","(x-y)+count z xs == count z xs+(x-y)","(x-y)+count z xs == count z xs+(x-y)","(x-y)+count z xs == count z xs+(x-y)","(x-y)+count z xs == count z xs+(x-y)","(x-y)+count z xs == count z xs+(x-y)","(x-y)+count z xs == count z xs+(x-y)","(x-y)+count z xs == count z xs+(x-y)","(x-y)+count z xs == count z xs+(x-y)","(x-y)+count z xs == count z xs+(x-y)","(x-y)+count z xs == count z xs+(x-y)","(x-y)+count z xs == count z xs+(x-y)","(x-y)+count z xs == count z xs+(x-y)","(x-y)+count z xs == count z xs+(x-y)","(x-y)+count z xs == count z xs+(x-y)","filter p xs++filter p ys == filter p (xs++ys)","filter p xs++filter p ys == filter p (xs++ys)","filter p xs++filter p ys == filter p (xs++ys)","filter p xs++filter p ys == filter p (xs++ys)","filter p xs++filter p ys == filter p (xs++ys)","filter p xs++filter p ys == filter p (xs++ys)","take (count x xs) (xs++ys) == take (count x xs) xs","take (count x xs) (xs++ys) == take (count x xs) xs","take (count x xs) (xs++ys) == take (count x xs) xs","take (count x xs) (xs++ys) == take (count x xs) xs","take (count x xs) (xs++ys) == take (count x xs) xs","take (count x xs) (xs++ys) == take (count x xs) xs","take (count x xs) (xs++ys) == take (count x xs) xs","take (count x xs) (xs++ys) == take (count x xs) xs","take (count x xs) (xs++ys) == take (count x xs) xs","take (count x xs) (xs++ys) == take (count x xs) xs","take (count x xs) (xs++ys) == take (count x xs) xs","take (count x xs) (xs++ys) == take (count x xs) xs","take (count x xs) (xs++ys) == take (count x xs) xs","take (count x xs) (xs++ys) == take (count x xs) xs","take (count x xs) (xs++ys) == take (count x xs) xs","take (count x xs) (xs++ys) == take (count x xs) xs","take (count x xs) (xs++ys) == take (count x xs) xs","take (count x xs) (xs++ys) == take (count x xs) xs","take (x+y) (take x xs) == take x xs","take (x+y) (take x xs) == take x xs","take (x+y) (take x xs) == take x xs","take (x+y) (take y xs) == take y xs","take (x+y) (take y xs) == take y xs","take (x+y) (take x xs) == take x xs","take (x+y) (take x xs) == take x xs","take (x+y) (take x xs) == take x xs","take (x+y) (take y xs) == take y xs","take (x+y) (take y xs) == take y xs","take (x+y) (take y xs) == take y xs","take (x+y) (take x xs) == take x xs","take (x+y) (take x xs) == take x xs","take (x+y) (take x xs) == take x xs","take (x+y) (take y xs) == take y xs","take (x+y) (take y xs) == take y xs","take (x+y) (take y xs) == take y xs","take (x-y) (take x xs) == take (x-y) xs","take (x-y) (take x xs) == take (x-y) xs","take (x-y) (take x xs) == take (x-y) xs","take (x-y) (drop y xs) == drop y (take x xs)","take (x-y) (drop y xs) == drop y (take x xs)","take (x-y) (drop y xs) == drop y (take x xs)","take (x-y) (take x xs) == take (x-y) xs","take (x-y) (take x xs) == take (x-y) xs","take (x-y) (take x xs) == take (x-y) xs","take (x-y) (drop y xs) == drop y (take x xs)","take (x-y) (drop y xs) == drop y (take x xs)","take (x-y) (drop y xs) == drop y (take x xs)","take (x-y) (take x xs) == take (x-y) xs","take (x-y) (take x xs) == take (x-y) xs","take (x-y) (take x xs) == take (x-y) xs","take (x-y) (drop y xs) == drop y (take x xs)","take (x-y) (drop y xs) == drop y (take x xs)","take (x-y) (drop y xs) == drop y (take x xs)","take (x-y) (take x xs) == take (x-y) xs","take (x-y) (take x xs) == take (x-y) xs","take (x-y) (take x xs) == take (x-y) xs","take (x-y) (drop y xs) == drop y (take x xs)","take (x-y) (drop y xs) == drop y (take x xs)","take (x-y) (drop y xs) == drop y (take x xs)","take (x-y) (take x xs) == take (x-y) xs","take (x-y) (take x xs) == take (x-y) xs","take (x-y) (take x xs) == take (x-y) xs","take (x-y) (drop y xs) == drop y (take x xs)","take (x-y) (drop y xs) == drop y (take x xs)","take (x-y) (drop y xs) == drop y (take x xs)","take (x-y) (take x xs) == take (x-y) xs","take (x-y) (take x xs) == take (x-y) xs","take (x-y) (take x xs) == take (x-y) xs","take (x-y) (drop y xs) == drop y (take x xs)","take (x-y) (drop y xs) == drop y (take x xs)","take (x-y) (drop y xs) == drop y (take x xs)","drop (x+y) (y:xs) == drop (x+y) (x:xs)","drop (x+y) (y:xs) == drop (x+y) (x:xs)","drop (x+y) (y:xs) == drop (x+y) (x:xs)"]}}],[255.519131,{"PlainProof":{"prop_name":"drop (x+y) (take x xs) == []","lemmas":[]}}],[255.525595,{"PlainProof":{"prop_name":"take (x+y) (take y xs) == take y xs","lemmas":[]}}],[255.573174,{"Discard":{"discarded":["drop (x+y) (take x xs) == []","drop (x+y) (take x xs) == []","drop (x+y) (take y xs) == []","drop (x+y) (take y xs) == []","drop (x+y) (take y xs) == []","drop (x+y) (y:xs) == drop (x+y) (x:xs)","drop (x+y) (y:xs) == drop (x+y) (x:xs)","drop (x+y) (y:xs) == drop (x+y) (x:xs)","drop (x+y) (take x xs) == []","drop (x+y) (take x xs) == []","drop (x+y) (take x xs) == []","drop (x+y) (take y xs) == []","drop (x+y) (take y xs) == []","drop (x+y) (take y xs) == []","drop (x+y) (x:xs) == drop (x+y) (z:xs)","drop (x+y) (x:xs) == drop (x+y) (z:xs)"]}}],[261.892341,{"FailedProof":{"prop_name":"drop (y+z) (y:xs) == drop (y+z) (x:xs)"}}],[267.266208,{"FailedProof":{"prop_name":"drop (y+z) (z:xs) == drop (y+z) (x:xs)"}}],[267.266257,{"Discard":{"discarded":["drop (x+y) (y:xs) == drop (x+y) (z:xs)","drop (x+y) (y:xs) == drop (x+y) (z:xs)","drop (x+y) (take x xs) == []","drop (x+y) (take x xs) == []","drop (x+y) (take x xs) == []","drop (x+y) (take y xs) == []","drop (x+y) (take y xs) == []","drop (x+y) (take y xs) == []","drop (x-y) (drop y xs) == drop (y-x) (drop x xs)","drop (x-y) (drop y xs) == drop (y-x) (drop x xs)","drop (x-y) (drop y xs) == drop (y-x) (drop x xs)","drop (x-y) (drop y xs) == drop (y-x) (drop x xs)","drop (x-y) (drop y xs) == drop (y-x) (drop x xs)","drop (x-y) (drop y xs) == drop (y-x) (drop x xs)","drop (x-y) (drop y xs) == drop (y-x) (drop x xs)","drop (x-y) (drop y xs) == drop (y-x) (drop x xs)","count (count x xs) (ys++xs) == count (count x xs) (xs++ys)","count (count x xs) (ys++xs) == count (count x xs) (xs++ys)","count (count x xs) (rev ys) == count (count x xs) ys","count (count x xs) (rev ys) == count (count x xs) ys","count (count x xs) (xs++ys) == count (count x xs) (ys++xs)","count (count x xs) (ys++xs) == count (count x xs) (xs++ys)","count (count x xs) (rev ys) == count (count x xs) ys","count (count x xs) (rev ys) == count (count x xs) ys","count (count x xs) (xs++ys) == count (count x xs) (ys++xs)","count (count x xs) (xs++ys) == count (count x xs) (ys++xs)","count (count x xs) (rev ys) == count (count x xs) ys","count (count x xs) (rev ys) == count (count x xs) ys","count (count x xs) (ys++xs) == count (count x xs) (xs++ys)","count (count x xs) (ys++xs) == count (count x xs) (xs++ys)","count (count x xs) (rev ys) == count (count x xs) ys","count (count x xs) (rev ys) == count (count x xs) ys","count (count x xs) (xs++ys) == count (count x xs) (ys++xs)","count (count x xs) (ys++xs) == count (count x xs) (xs++ys)","count (count x xs) (rev ys) == count (count x xs) ys","count (count x xs) (rev ys) == count (count x xs) ys","count (count x xs) (xs++ys) == count (count x xs) (ys++xs)","count (count x xs) (xs++ys) == count (count x xs) (ys++xs)","count (count x xs) (rev ys) == count (count x xs) ys","count (count x xs) (rev ys) == count (count x xs) ys","count (count x xs) (ys++xs) == count (count x xs) (xs++ys)","count (count x xs) (ys++xs) == count (count x xs) (xs++ys)","count (count x xs) (rev ys) == count (count x xs) ys","count (count x xs) (rev ys) == count (count x xs) ys","count (count x xs) (xs++ys) == count (count x xs) (ys++xs)","count (count x xs) (ys++xs) == count (count x xs) (xs++ys)","count (count x xs) (rev ys) == count (count x xs) ys","count (count x xs) (rev ys) == count (count x xs) ys","count (count x xs) (xs++ys) == count (count x xs) (ys++xs)","count (count x xs) (xs++ys) == count (count x xs) (ys++xs)","count (count x xs) (rev ys) == count (count x xs) ys","count (count x xs) (rev ys) == count (count x xs) ys","count (x+y) (rev xs) == count (x+y) xs","count (x+y) (rev xs) == count (x+y) xs","count (x+y) (rev xs) == count (x+y) xs","count (x+y) (rev xs) == count (x+y) xs","count (x+y) (rev xs) == count (x+y) xs","count (x+y) (rev xs) == count (x+y) xs","count (x+y) (rev xs) == count (x+y) xs","count (x+y) (rev xs) == count (x+y) xs","count (x+y) (rev xs) == count (x+y) xs","count (x-y) (rev xs) == count (x-y) xs","count (x-y) (rev xs) == count (x-y) xs","count (x-y) (rev xs) == count (x-y) xs","count (x-y) (rev xs) == count (x-y) xs","count (x-y) (rev xs) == count (x-y) xs","count (x-y) (rev xs) == count (x-y) xs","count (x-y) (rev xs) == count (x-y) xs","count (x-y) (rev xs) == count (x-y) xs","count (x-y) (rev xs) == count (x-y) xs","count (x-y) (rev xs) == count (x-y) xs","count (x-y) (rev xs) == count (x-y) xs","count (x-y) (rev xs) == count (x-y) xs","count (x-y) (rev xs) == count (x-y) xs","count (x-y) (rev xs) == count (x-y) xs","count (x-y) (rev xs) == count (x-y) xs","count (x-y) (rev xs) == count (x-y) xs","count (x-y) (rev xs) == count (x-y) xs","count (x-y) (rev xs) == count (x-y) xs","count x xs+count x ys == count x (xs++ys)","count x xs+count x ys == count x (xs++ys)"]}}],[268.430203,{"PlainProof":{"prop_name":"drop (y-x) (drop x xs) == drop (x-y) (drop y xs)","lemmas":[]}}],[271.578953,{"FailedProof":{"prop_name":"count x ys+count x xs == count x (xs++ys)"}}],[271.578997,{"Discard":{"discarded":["count x xs+count x ys == count x (xs++ys)","count x xs+count x ys == count x (ys++xs)","count x xs+count x ys == count x (ys++xs)","count x xs+count y xs == count y xs+count x xs","count x xs+count x ys == count x (xs++ys)","count x xs+count x ys == count x (xs++ys)","count x xs+count y xs == count y xs+count x xs","count x xs+count x ys == count x (ys++xs)","count x xs+count x ys == count x (xs++ys)","count x xs+count y xs == count y xs+count x xs","count x xs+count x ys == count x (ys++xs)","count x xs+count x ys == count x (ys++xs)","count x xs+count y xs == count y xs+count x xs","count x xs+count y xs == count y xs+count x xs","count x xs+count x ys == count x (xs++ys)","count x xs+count x ys == count x (xs++ys)","count x xs+count y xs == count y xs+count x xs","count x xs+count y xs == count y xs+count x xs","count x xs+count x ys == count x (ys++xs)","count x xs+count x ys == count x (xs++ys)","count x xs+count y xs == count y xs+count x xs","count x xs+count y xs == count y xs+count x xs","count x xs+count x ys == count x (ys++xs)","count x xs+count x ys == count x (ys++xs)","(x+y)+count x xs == count x xs+(x+y)","(x+y)+count x xs == count x xs+(x+y)","(x+y)+count x xs == count x xs+(x+y)","(x+y)+count y xs == count y xs+(x+y)","(x+y)+count y xs == count y xs+(x+y)","(x+y)+count y xs == count y xs+(x+y)","(x+y)+count x xs == count x xs+(x+y)","(x+y)+count x xs == count x xs+(x+y)","(x+y)+count x xs == count x xs+(x+y)","(x+y)+count y xs == count y xs+(x+y)","(x+y)+count y xs == count y xs+(x+y)","(x+y)+count y xs == count y xs+(x+y)","(x+y)+(x+z) == (x+z)+(x+y)","(x+y)+(z+y) == (x+z)+(y+y)","(x+y)+(z-y) == (x+z)+(y-z)","(x+y)+S z == (x+z)+S y","(x+y)+(z+z) == (x+z)+(z+y)","(x+y)+count x xs == count x xs+(x+y)","(x+y)+count x xs == count x xs+(x+y)","(x+y)+count x xs == count x xs+(x+y)","(x+y)+count y xs == count y xs+(x+y)","(x+y)+count y xs == count y xs+(x+y)","(x+y)+count y xs == count y xs+(x+y)","(x+y)+(z+x) == (z+x)+(x+y)","(x+y)+(z+y) == (z+x)+(y+y)","(x+y)+(z-x) == (z+y)+(x-z)","(x+y)+(z-y) == (z+x)+(y-z)","(x+y)+S z == (z+x)+S y","(x+y)+(z+z) == (z+x)+(z+y)","(x-y)+count x xs == count x xs+(x-y)","(x-y)+count x xs == count x xs+(x-y)","(x-y)+count x xs == count x xs+(x-y)","(x-y)+count y xs == count y xs+(x-y)","(x-y)+count y xs == count y xs+(x-y)","(x-y)+count y xs == count y xs+(x-y)","(x-y)+(x+z) == (x+z)+(x-y)","(x-y)+(y+z) == (x+z)+(y-x)","(x-y)+count x xs == count x xs+(x-y)","(x-y)+count x xs == count x xs+(x-y)","(x-y)+count x xs == count x xs+(x-y)","(x-y)+count y xs == count y xs+(x-y)","(x-y)+count y xs == count y xs+(x-y)","(x-y)+count y xs == count y xs+(x-y)","(x-y)+(x+z) == (x+z)+(x-y)","(x-y)+(z+y) == (x+z)+(y-x)","(x-y)+(x-z) == (x-z)+(x-y)","(x-y)+count y xs == count y xs+(x-y)","(x-y)+count y xs == count y xs+(x-y)","(x-y)+count y xs == count y xs+(x-y)","(x-y)+count x xs == count x xs+(x-y)","(x-y)+count x xs == count x xs+(x-y)","(x-y)+count x xs == count x xs+(x-y)","(x-y)+(y+z) == (y+z)+(x-y)","(x-y)+(x+z) == (x+z)+(x-y)","(x-y)+(y-z) == (y-z)+(x-y)","(x-y)+count x xs == count x xs+(x-y)","(x-y)+count x xs == count x xs+(x-y)","(x-y)+count x xs == count x xs+(x-y)","(x-y)+count y xs == count y xs+(x-y)","(x-y)+count y xs == count y xs+(x-y)","(x-y)+count y xs == count y xs+(x-y)","(x-y)+(z+x) == (z+x)+(x-y)","(x-y)+(z+y) == (z+x)+(y-x)","(x-y)+(z-x) == (z-x)+(x-y)","(x-y)+(z-y) == (z-y)+(x-y)","(x-y)+(x-z) == (x-z)+(x-y)","(x-y)+count y xs == count y xs+(x-y)","(x-y)+count y xs == count y xs+(x-y)","(x-y)+count y xs == count y xs+(x-y)","(x-y)+count x xs == count x xs+(x-y)","(x-y)+count x xs == count x xs+(x-y)","(x-y)+count x xs == count x xs+(x-y)","(x-y)+(y+z) == (y+z)+(x-y)","(x-y)+(z+x) == (z+x)+(x-y)","(x-y)+(y-z) == (y-z)+(x-y)","(x-y)+(z-y) == (z-y)+(x-y)","(x-y)+(z-x) == (z-x)+(x-y)","(x-y)+count y xs == count y xs+(x-y)","(x-y)+count y xs == count y xs+(x-y)","(x-y)+count y xs == count y xs+(x-y)","(x-y)+count x xs == count x xs+(x-y)","(x-y)+count x xs == count x xs+(x-y)","(x-y)+count x xs == count x xs+(x-y)","(x-y)+(z+y) == (z+y)+(x-y)","(x-y)+(z+x) == (z+x)+(x-y)","(x-y)+(z-y) == (z-y)+(x-y)","(x-y)+(z-x) == (z-x)+(x-y)","(x-y)+(y-z) == (y-z)+(x-y)","(x-y)+(x-z) == (x-z)+(x-y)","(x+y)-(x+z) == y-z","(x+y)-(y+z) == x-z","(x+y)-(x+z) == y-z","(x+y)-(z+y) == x-z","(x+y)-(y-z) == (x+z)-(z-y)","(x+y)-(z+x) == y-z","(x+y)-(z+y) == x-z","(x+y)-(x-z) == (z+y)-(z-x)","(x+y)-(y-z) == (z+x)-(z-y)","(x-y)-(x+z) == Z","(x-y)-(x+z) == Z","(x-y)-(z+y) == (x-z)-(y+y)","(x-y)-(z-y) == (x-z)-(y-z)","(x-y)-S z == (x-z)-S y","(x-y)-(z+z) == (x-z)-(z+y)","(x-y)-(x+z) == Z","(x-y)-(z+x) == Z","(x-y)-(z+y) == (x-z)-(y+y)","(x-y)-(z-y) == (x-z)-(y-z)","(x-y)-(x-z) == (z-y)-(z-x)","(x-y)-S z == (x-z)-S y","(x-y)-(z+z) == (x-z)-(z+y)","(x-y)-(z+x) == Z","(x-y)-(x-z) == (z-y)-(z-x)","(x-y)-(z+y) == (x-z)-(y+y)","(x-y)-(z+x) == Z","(x-y)-(z-y) == (x-z)-(y-z)","(x-y)-(x-z) == (z-y)-(z-x)","(x-y)-S z == (x-z)-S y","(x-y)-(z+z) == (x-z)-(z+y)","take (S x) (y:xs) == y:take x xs","take (S x) (y:xs) == y:take x xs","take (S x) (y:xs) == y:take x xs","take (S x) (y:xs) == y:take x xs","take (S x) (y:xs) == y:take x xs","take (S x) (y:xs) == y:take x xs","take (S x) (y:xs) == y:take x xs","take (S x) (y:xs) == y:take x xs","take (S x) (y:xs) == y:take x xs","take (S x) (y:xs) == y:take x xs","take (S x) (y:xs) == y:take x xs","take (S x) (y:xs) == y:take x xs","take (S x) (y:xs) == y:take x xs","take (S x) (y:xs) == y:take x xs","take (S x) (y:xs) == y:take x xs","take (S x) (y:xs) == y:take x xs","take (S x) (y:xs) == y:take x xs","take (S x) (y:xs) == y:take x xs","drop (S x) (y:xs) == drop x xs","drop (S x) (y:xs) == drop x xs","drop (S x) (y:xs) == drop x xs","drop (S x) (y:xs) == drop x xs","drop (S x) (y:xs) == drop x xs","drop (S x) (y:xs) == drop x xs","drop (S x) (y:xs) == drop x xs","drop (S x) (y:xs) == drop x xs","drop (S x) (y:xs) == drop x xs","drop (S x) (y:xs) == drop x xs","drop (S x) (y:xs) == drop x xs","drop (S x) (y:xs) == drop x xs","drop (S x) (drop y xs) == drop (S y) (drop x xs)","drop (S x) (drop y xs) == drop (S y) (drop x xs)","drop (S x) (y:xs) == drop x xs","drop (S x) (y:xs) == drop x xs","drop (S x) (y:xs) == drop x xs","drop (S x) (y:xs) == drop x xs","drop (S x) (y:xs) == drop x xs","drop (S x) (y:xs) == drop x xs","drop (S x) (drop y xs) == drop (S y) (drop x xs)","drop (S x) (drop y xs) == drop (S y) (drop x xs)","drop (S x) (drop y xs) == drop (S y) (drop x xs)","drop (S x) (drop y xs) == drop (S y) (drop x xs)","drop (S x) (drop y xs) == drop (S y) (drop x xs)","drop (S x) (drop y xs) == drop (S y) (drop x xs)","drop (x+x) (drop y xs) == drop (x+y) (drop x xs)","drop (x+x) (drop y xs) == drop (x+y) (drop x xs)","drop (x+x) (drop y xs) == drop (x+y) (drop x xs)","drop (x+x) (drop y xs) == drop (x+y) (drop x xs)","drop (x+x) (drop y xs) == drop (x+y) (drop x xs)","drop (x+x) (drop y xs) == drop (x+y) (drop x xs)","drop (x+x) (drop y xs) == drop (y+x) (drop x xs)","drop (x+x) (drop y xs) == drop (y+x) (drop x xs)","drop (x+x) (drop y xs) == drop (y+x) (drop x xs)","drop (x+x) (drop y xs) == drop (x+y) (drop x xs)","drop (x+x) (drop y xs) == drop (x+y) (drop x xs)","drop (x+x) (drop y xs) == drop (x+y) (drop x xs)","drop (x+x) (drop y xs) == drop (y+x) (drop x xs)","drop (x+x) (drop y xs) == drop (y+x) (drop x xs)","drop (x+x) (drop y xs) == drop (y+x) (drop x xs)","drop (x+x) (drop y xs) == drop (y+x) (drop x xs)","drop (x+x) (drop y xs) == drop (y+x) (drop x xs)","drop (x+x) (drop y xs) == drop (y+x) (drop x xs)","count (len xs) (ys++zs) == count (len xs) (zs++ys)","count (len xs) (ys++zs) == count (len xs) (zs++ys)","count (len xs) (ys++zs) == count (len xs) (zs++ys)","count (S x) (xs++ys) == count (S x) (ys++xs)","count (S x) (xs++ys) == count (S x) (ys++xs)","count (S x) (xs++ys) == count (S x) (ys++xs)","count (S x) (xs++ys) == count (S x) (ys++xs)","count (S x) (xs++ys) == count (S x) (ys++xs)","count (S x) (xs++ys) == count (S x) (ys++xs)","count (S x) (xs++ys) == count (S x) (ys++xs)","count (S x) (xs++ys) == count (S x) (ys++xs)","count (S x) (xs++ys) == count (S x) (ys++xs)","count (x+x) (xs++ys) == count (x+x) (ys++xs)","count (x+x) (xs++ys) == count (x+x) (ys++xs)","count (x+x) (xs++ys) == count (x+x) (ys++xs)","count (x+x) (xs++ys) == count (x+x) (ys++xs)","count (x+x) (xs++ys) == count (x+x) (ys++xs)","count (x+x) (xs++ys) == count (x+x) (ys++xs)","count (x+x) (xs++ys) == count (x+x) (ys++xs)","count (x+x) (xs++ys) == count (x+x) (ys++xs)","count (x+x) (xs++ys) == count (x+x) (ys++xs)","len xs+count x ys == count x ys+len xs","len xs+count x ys == count x ys+len xs","len xs+count x ys == count x ys+len xs","len xs+count x ys == count x ys+len xs","len xs+count x ys == count x ys+len xs","len xs+count x ys == count x ys+len xs","len xs+(x+y) == (x+y)+len xs","len xs+(x+y) == (x+y)+len xs","len xs+(x+y) == (x+y)+len xs","len xs+(x-y) == (x-y)+len xs","len xs+(x-y) == (x-y)+len xs","len xs+(x-y) == (x-y)+len xs","len xs+(x-y) == (x-y)+len xs","len xs+(x-y) == (x-y)+len xs","len xs+(x-y) == (x-y)+len xs","len xs+count x ys == count x ys+len xs","len xs+count x ys == count x ys+len xs","len xs+count x ys == count x ys+len xs","len xs+count x ys == count x ys+len xs","len xs+count x ys == count x ys+len xs","len xs+count x ys == count x ys+len xs","len xs+(x+y) == (x+y)+len xs","len xs+(x+y) == (x+y)+len xs","len xs+(x+y) == (x+y)+len xs","len xs+(x-y) == (x-y)+len xs","len xs+(x-y) == (x-y)+len xs","len xs+(x-y) == (x-y)+len xs","len xs+(x-y) == (x-y)+len xs","len xs+(x-y) == (x-y)+len xs","len xs+(x-y) == (x-y)+len xs","len xs+count x ys == count x ys+len xs","len xs+count x ys == count x ys+len xs","len xs+count x ys == count x ys+len xs","len xs+count x ys == count x ys+len xs","len xs+count x ys == count x ys+len xs","len xs+count x ys == count x ys+len xs","len xs+(x+y) == (x+y)+len xs","len xs+(x+y) == (x+y)+len xs","len xs+(x+y) == (x+y)+len xs","len xs+(x-y) == (x-y)+len xs","len xs+(x-y) == (x-y)+len xs","len xs+(x-y) == (x-y)+len xs","len xs+(x-y) == (x-y)+len xs","len xs+(x-y) == (x-y)+len xs","len xs+(x-y) == (x-y)+len xs","S x+count y xs == count y xs+S x","S x+count y xs == count y xs+S x","S x+count y xs == count y xs+S x","S x+count y xs == count y xs+S x","S x+count y xs == count y xs+S x","S x+count y xs == count y xs+S x","S x+(y+z) == (x+y)+S z","S x+(y-z) == (y-z)+S x","S x+(y-z) == (y-z)+S x","S x+count y xs == count y xs+S x","S x+count y xs == count y xs+S x","S x+count y xs == count y xs+S x","S x+count y xs == count y xs+S x","S x+count y xs == count y xs+S x","S x+count y xs == count y xs+S x","S x+(y+z) == (y+x)+S z","S x+(y-z) == (y-z)+S x","S x+(y-z) == (y-z)+S x","S x+count y xs == count y xs+S x","S x+count y xs == count y xs+S x","S x+count y xs == count y xs+S x","S x+count y xs == count y xs+S x","S x+count y xs == count y xs+S x","S x+count y xs == count y xs+S x","S x+(y+z) == (y+z)+S x","S x+(y-z) == (y-z)+S x","S x+(y-z) == (y-z)+S x","(x+x)+count y xs == count y xs+(x+x)","(x+x)+count y xs == count y xs+(x+x)","(x+x)+count y xs == count y xs+(x+x)","(x+x)+count y xs == count y xs+(x+x)","(x+x)+count y xs == count y xs+(x+x)","(x+x)+count y xs == count y xs+(x+x)","(x+x)+(y+z) == (x+y)+(x+z)","(x+x)+(y-z) == (y-z)+(x+x)","(x+x)+(y-z) == (y-z)+(x+x)","(x+x)+count y xs == count y xs+(x+x)","(x+x)+count y xs == count y xs+(x+x)","(x+x)+count y xs == count y xs+(x+x)","(x+x)+count y xs == count y xs+(x+x)","(x+x)+count y xs == count y xs+(x+x)","(x+x)+count y xs == count y xs+(x+x)","(x+x)+(y+z) == (y+x)+(x+z)","(x+x)+(y-z) == (y-z)+(x+x)","(x+x)+(y-z) == (y-z)+(x+x)","(x+x)+count y xs == count y xs+(x+x)","(x+x)+count y xs == count y xs+(x+x)","(x+x)+count y xs == count y xs+(x+x)","(x+x)+count y xs == count y xs+(x+x)","(x+x)+count y xs == count y xs+(x+x)","(x+x)+count y xs == count y xs+(x+x)","(x+x)+(y+z) == (y+z)+(x+x)","(x+x)+(y-z) == (y-z)+(x+x)","(x+x)+(y-z) == (y-z)+(x+x)","drop x (Z:xs) == drop x (x:xs)","drop x (Z:xs) == drop x (x:xs)","drop x (Z:xs) == drop x (x:xs)","drop x (Z:xs) == drop x (x:xs)","drop x (Z:xs) == drop x (x:xs)","drop x (Z:xs) == drop x (x:xs)","drop x (Z:xs) == drop x (x:xs)","drop x (Z:xs) == drop x (x:xs)","drop x (Z:xs) == drop x (x:xs)","count x (y:[]) == count y (x:[])","count x (y:[]) == count y (x:[])","count x (y:[]) == count y (x:[])","[]++filter p xs == filter p xs","[]++filter p xs == filter p xs","[]++filter p xs == filter p xs","[]++(xs++ys) == xs++ys","[]++(xs++ys) == xs++ys","[]++(xs++ys) == xs++ys","[]++(xs++ys) == xs++ys","[]++(xs++ys) == xs++ys","[]++(xs++ys) == xs++ys","[]++(x:xs) == x:xs","[]++(x:xs) == x:xs","[]++(x:xs) == x:xs","[]++(x:xs) == x:xs","[]++(x:xs) == x:xs","[]++(x:xs) == x:xs","[]++(x:xs) == x:xs","[]++(x:xs) == x:xs","[]++(x:xs) == x:xs","[]++take x xs == take x xs","[]++take x xs == take x xs","[]++take x xs == take x xs","[]++take x xs == take x xs","[]++take x xs == take x xs","[]++take x xs == take x xs","[]++take x xs == take x xs","[]++take x xs == take x xs","[]++take x xs == take x xs","[]++drop x xs == drop x xs","[]++drop x xs == drop x xs","[]++drop x xs == drop x xs","[]++drop x xs == drop x xs","[]++drop x xs == drop x xs","[]++drop x xs == drop x xs","[]++drop x xs == drop x xs","[]++drop x xs == drop x xs","[]++drop x xs == drop x xs","take Z (filter p xs) == []","take Z (filter p xs) == []","take Z (filter p xs) == []","take Z (xs++ys) == []","take Z (xs++ys) == []","take Z (xs++ys) == []","take Z (xs++ys) == []","take Z (xs++ys) == []","take Z (xs++ys) == []","take Z (x:xs) == []","take Z (x:xs) == []","take Z (x:xs) == []","take Z (x:xs) == []","take Z (x:xs) == []","take Z (x:xs) == []","take Z (x:xs) == []","take Z (x:xs) == []","take Z (x:xs) == []","take Z (take x xs) == []","take Z (take x xs) == []","take Z (take x xs) == []","take Z (take x xs) == []","take Z (take x xs) == []","take Z (take x xs) == []","take Z (take x xs) == []","take Z (take x xs) == []","take Z (take x xs) == []","take Z (drop x xs) == []","take Z (drop x xs) == []","take Z (drop x xs) == []","take Z (drop x xs) == []","take Z (drop x xs) == []","take Z (drop x xs) == []","take Z (drop x xs) == []","take Z (drop x xs) == []","take Z (drop x xs) == []","drop Z (filter p xs) == filter p xs","drop Z (filter p xs) == filter p xs","drop Z (filter p xs) == filter p xs","drop Z (xs++ys) == xs++ys","drop Z (xs++ys) == xs++ys","drop Z (xs++ys) == xs++ys","drop Z (xs++ys) == xs++ys","drop Z (xs++ys) == xs++ys","drop Z (xs++ys) == xs++ys","drop Z (x:xs) == x:xs","drop Z (x:xs) == x:xs","drop Z (x:xs) == x:xs","drop Z (x:xs) == x:xs","drop Z (x:xs) == x:xs","drop Z (x:xs) == x:xs","drop Z (x:xs) == x:xs","drop Z (x:xs) == x:xs","drop Z (x:xs) == x:xs","drop Z (take x xs) == take x xs","drop Z (take x xs) == take x xs","drop Z (take x xs) == take x xs","drop Z (take x xs) == take x xs","drop Z (take x xs) == take x xs","drop Z (take x xs) == take x xs","drop Z (take x xs) == take x xs","drop Z (take x xs) == take x xs","drop Z (take x xs) == take x xs","drop Z (drop x xs) == drop x xs","drop Z (drop x xs) == drop x xs","drop Z (drop x xs) == drop x xs","drop Z (drop x xs) == drop x xs","drop Z (drop x xs) == drop x xs","drop Z (drop x xs) == drop x xs","drop Z (drop x xs) == drop x xs","drop Z (drop x xs) == drop x xs","drop Z (drop x xs) == drop x xs","count Z (xs++ys) == count Z (ys++xs)","count Z (xs++ys) == count Z (ys++xs)","count Z (xs++ys) == count Z (ys++xs)","Z+count x xs == count x xs","Z+count x xs == count x xs","Z+count x xs == count x xs","Z+count x xs == count x xs","Z+count x xs == count x xs","Z+count x xs == count x xs","Z+count x xs == count x xs","Z+count x xs == count x xs","Z+count x xs == count x xs","Z+(x+y) == x+y","Z+(x+y) == x+y","Z+(x+y) == x+y","Z+(x-y) == x-y","Z+(x-y) == x-y","Z+(x-y) == x-y","Z+(x-y) == x-y","Z+(x-y) == x-y","Z+(x-y) == x-y","Z-count x xs == Z","Z-count x xs == Z","Z-count x xs == Z","Z-count x xs == Z","Z-count x xs == Z","Z-count x xs == Z","Z-count x xs == Z","Z-count x xs == Z","Z-count x xs == Z","Z-(x+y) == Z","Z-(x+y) == Z","Z-(x+y) == Z","Z-(x-y) == Z","Z-(x-y) == Z","Z-(x-y) == Z","Z-(x-y) == Z","Z-(x-y) == Z","Z-(x-y) == Z","filter p xs++[] == filter p xs"]}}],[275.143969,{"InductiveProof":{"prop_name":"drop (S y) (drop x xs) == drop (S x) (drop y xs)","lemmas":[]}}],[277.259634,{"FailedProof":{"prop_name":"filter p xs++filter p xs == filter p (xs++xs)"}}],[277.262925,{"Discard":{"discarded":["filter p xs++[] == filter p xs","filter p xs++filter p xs == filter p (xs++xs)","filter p xs++[] == filter p xs","filter p xs++filter p xs == filter p (xs++xs)","(xs++ys)++[] == xs++ys","(xs++ys)++[] == xs++ys","(xs++ys)++[] == xs++ys","(xs++ys)++[] == xs++ys","(xs++ys)++[] == xs++ys","(xs++ys)++[] == xs++ys","(x:xs)++[] == x:xs","(x:xs)++[] == x:xs","(x:xs)++[] == x:xs","(x:xs)++[] == x:xs","(x:xs)++[] == x:xs","(x:xs)++[] == x:xs","(x:xs)++[] == x:xs","(x:xs)++[] == x:xs","(x:xs)++[] == x:xs","take x xs++[] == take x xs","take x xs++drop x xs == xs","take x xs++[] == take x xs","take x xs++drop x xs == xs","take x xs++[] == take x xs","take x xs++drop x xs == xs","take x xs++[] == take x xs","take x xs++drop x xs == xs","take x xs++[] == take x xs","take x xs++drop x xs == xs","take x xs++[] == take x xs","take x xs++drop x xs == xs","take x xs++[] == take x xs","take x xs++drop x xs == xs","take x xs++[] == take x xs","take x xs++drop x xs == xs","take x xs++[] == take x xs","take x xs++drop x xs == xs","drop x xs++[] == drop x xs","drop x xs++[] == drop x xs","drop x xs++[] == drop x xs","drop x xs++[] == drop x xs","drop x xs++[] == drop x xs","drop x xs++[] == drop x xs","drop x xs++[] == drop x xs","drop x xs++[] == drop x xs","drop x xs++[] == drop x xs","take (count x xs) [] == []","take (count x xs) [] == []","take (count x xs) (xs++xs) == take (count x xs) xs","take (count x xs) [] == []","take (count x xs) (xs++xs) == take (count x xs) xs","take (count x xs) [] == []","take (count x xs) (xs++xs) == take (count x xs) xs","take (count x xs) [] == []","take (count x xs) (xs++xs) == take (count x xs) xs","take (count x xs) [] == []","take (count x xs) (xs++xs) == take (count x xs) xs","take (count x xs) [] == []","take (count x xs) (xs++xs) == take (count x xs) xs","take (count x xs) [] == []","take (count x xs) (xs++xs) == take (count x xs) xs","take (count x xs) [] == []","take (count x xs) (xs++xs) == take (count x xs) xs","take (x+y) [] == []","take (x+y) [] == []","take (x+y) [] == []","take (x-y) [] == []","take (x-y) [] == []","take (x-y) [] == []","take (x-y) [] == []","take (x-y) [] == []","take (x-y) [] == []","drop (count x xs) [] == []","drop (count x xs) [] == []","drop (count x xs) [] == []","drop (count x xs) [] == []","drop (count x xs) [] == []","drop (count x xs) [] == []","drop (count x xs) [] == []","drop (count x xs) [] == []","drop (count x xs) [] == []","drop (x+y) [] == []","drop (x+y) [] == []","drop (x+y) [] == []","drop (x-y) [] == []","drop (x-y) [] == []","drop (x-y) [] == []","drop (x-y) [] == []","drop (x-y) [] == []","drop (x-y) [] == []","count (count x xs) [] == Z","count (count x xs) (rev xs) == count (count x xs) xs","count (count x xs) [] == Z","count (count x xs) (rev xs) == count (count x xs) xs","count (count x xs) [] == Z","count (count x xs) (rev xs) == count (count x xs) xs","count (count x xs) [] == Z","count (count x xs) (rev xs) == count (count x xs) xs","count (count x xs) [] == Z","count (count x xs) (rev xs) == count (count x xs) xs","count (count x xs) [] == Z","count (count x xs) (rev xs) == count (count x xs) xs","count (count x xs) [] == Z","count (count x xs) (rev xs) == count (count x xs) xs","count (count x xs) [] == Z","count (count x xs) (rev xs) == count (count x xs) xs","count (count x xs) [] == Z","count (count x xs) (rev xs) == count (count x xs) xs","count (x+y) [] == Z","count (x+y) [] == Z","count (x+y) [] == Z","count (x-y) [] == Z","count (x-y) [] == Z","count (x-y) [] == Z","count (x-y) [] == Z","count (x-y) [] == Z","count (x-y) [] == Z","count x xs+Z == count x xs"]}}],[279.340483,{"FailedProof":{"prop_name":"take (count x xs) (xs++xs) == take (count x xs) xs"}}],[281.406006,{"FailedProof":{"prop_name":"count x xs+count x xs == count x (xs++xs)"}}],[281.406067,{"Discard":{"discarded":["count x xs+Z == count x xs","count x xs+count x xs == count x (xs++xs)","count x xs+Z == count x xs","count x xs+count x xs == count x (xs++xs)","count x xs+Z == count x xs","count x xs+count x xs == count x (xs++xs)","count x xs+Z == count x xs","count x xs+count x xs == count x (xs++xs)","count x xs+Z == count x xs","count x xs+count x xs == count x (xs++xs)","count x xs+Z == count x xs","count x xs+count x xs == count x (xs++xs)","count x xs+Z == count x xs","count x xs+count x xs == count x (xs++xs)","count x xs+Z == count x xs","count x xs+count x xs == count x (xs++xs)","(x+y)+Z == x+y","(x+y)+Z == x+y","(x+y)+Z == x+y","(x-y)+Z == x-y","(x-y)+(x+y) == (x+y)+(x-y)","(x-y)+(y+y) == (x+y)+(y-x)","(x-y)+Z == x-y","(x-y)+(x+y) == (x+y)+(x-y)","(x-y)+(y+y) == (x+y)+(y-x)","(x-y)+Z == x-y","(x-y)+(y+x) == (y+x)+(x-y)","(x-y)+(y-x) == (y-x)+(x-y)","(x-y)+S y == (y-x)+S x","(x-y)+(y+y) == (y+x)+(y-x)","(x-y)+Z == x-y","(x-y)+(x+y) == (x+y)+(x-y)","(x-y)+(y+y) == (x+y)+(y-x)","(x-y)+Z == x-y","(x-y)+(y+x) == (y+x)+(x-y)","(x-y)+(y-x) == (y-x)+(x-y)","(x-y)+S y == (y-x)+S x","(x-y)+(y+y) == (y+x)+(y-x)","(x-y)+Z == x-y","(x-y)+(y+x) == (y+x)+(x-y)","(x-y)+(y-x) == (y-x)+(x-y)","(x-y)+S y == (y-x)+S x","(x-y)+(y+y) == (y+x)+(y-x)","count x xs-Z == count x xs","count x xs-count x xs == Z","count x xs-len xs == Z","count x xs-Z == count x xs","count x xs-count x xs == Z","count x xs-len xs == Z","count x xs-Z == count x xs","count x xs-count x xs == Z","count x xs-len xs == Z","count x xs-Z == count x xs","count x xs-count x xs == Z","count x xs-len xs == Z","count x xs-Z == count x xs","count x xs-count x xs == Z","count x xs-len xs == Z","count x xs-Z == count x xs","count x xs-count x xs == Z","count x xs-len xs == Z","count x xs-Z == count x xs","count x xs-count x xs == Z","count x xs-len xs == Z","count x xs-Z == count x xs","count x xs-count x xs == Z","count x xs-len xs == Z","count x xs-Z == count x xs","count x xs-count x xs == Z","count x xs-len xs == Z","(x+y)-Z == x+y","(x+y)-(x+y) == Z","(x+y)-(x+x) == y-x","(x+y)-(y+y) == x-y","(x+y)-Z == x+y","(x+y)-(x+y) == Z","(x+y)-S y == (x+z)-S z","(x+y)-(x+x) == y-x","(x+y)-(y+y) == x-y","(x+y)-Z == x+y","(x+y)-(x+y) == Z","(x+y)-S x == (z+y)-S z","(x+y)-S y == (z+x)-S z","(x+y)-(x+x) == y-x","(x+y)-(y+y) == x-y","(x-y)-Z == x-y","(x-y)-(x+y) == Z","(x-y)-(x-y) == Z","(x-y)-(y-x) == x-y","(x-y)-S x == Z","(x-y)-(x+x) == Z","(x-y)-Z == x-y","(x-y)-(x+y) == Z","(x-y)-(x-y) == Z","(x-y)-(y-x) == x-y","(x-y)-S x == Z","(x-y)-(x+x) == Z","(x-y)-Z == x-y","(x-y)-(y+x) == Z","(x-y)-(y-x) == x-y","(x-y)-(x-y) == Z","(x-y)-S x == Z","(x-y)-(x+x) == Z","(x-y)-Z == x-y","(x-y)-(x+y) == Z","(x-y)-(x-y) == Z","(x-y)-(y-x) == x-y","(x-y)-S x == Z","(x-y)-(x+x) == Z","(x-y)-Z == x-y","(x-y)-(y+x) == Z","(x-y)-(y-x) == x-y","(x-y)-(x-y) == Z","(x-y)-S x == Z","(x-y)-(x+x) == Z","(x-y)-Z == x-y","(x-y)-(y+x) == Z","(x-y)-(y-x) == x-y","(x-y)-(x-y) == Z","(x-y)-S x == Z","(x-y)-(x+x) == Z","rev xs++rev ys == rev (ys++xs)","rev xs++rev ys == rev (ys++xs)","rev xs++rev ys == rev (ys++xs)","rev xs++rev ys == rev (ys++xs)","rev xs++rev ys == rev (ys++xs)","rev xs++rev ys == rev (ys++xs)","take (len xs) (filter p xs) == filter p xs","take (len xs) (xs++ys) == xs","take (len xs) (xs++ys) == xs","take (len xs) (take x xs) == take x xs","take (len xs) (take x xs) == take x xs","take (len xs) (drop x xs) == drop x xs","take (len xs) (drop x xs) == drop x xs","take (len xs) (drop x xs) == drop x xs","take (len xs) (filter p xs) == filter p xs","take (len xs) (xs++ys) == xs","take (len xs) (xs++ys) == xs","take (len xs) (take x xs) == take x xs","take (len xs) (take x xs) == take x xs","take (len xs) (take x xs) == take x xs","take (len xs) (drop x xs) == drop x xs","take (len xs) (drop x xs) == drop x xs","take (len xs) (drop x xs) == drop x xs","take (len xs) (filter p xs) == filter p xs","take (len xs) (xs++ys) == xs","take (len xs) (xs++ys) == xs","take (len xs) (take x xs) == take x xs","take (len xs) (take x xs) == take x xs","take (len xs) (take x xs) == take x xs","take (len xs) (drop x xs) == drop x xs","take (len xs) (drop x xs) == drop x xs","take (len xs) (drop x xs) == drop x xs","take (S x) (x:xs) == x:take x xs","take (S x) (x:xs) == x:take x xs","take (S x) (x:xs) == x:take x xs","take (S x) (take x xs) == take x xs","take (S x) (take x xs) == take x xs","take (S x) (take x xs) == take x xs","take (S x) (x:xs) == x:take x xs","take (S x) (x:xs) == x:take x xs","take (S x) (x:xs) == x:take x xs","take (S x) (take x xs) == take x xs","take (S x) (take x xs) == take x xs","take (S x) (take x xs) == take x xs","take (S x) (x:xs) == x:take x xs","take (S x) (x:xs) == x:take x xs","take (S x) (x:xs) == x:take x xs","take (S x) (take x xs) == take x xs","take (S x) (take x xs) == take x xs","take (S x) (take x xs) == take x xs","take (x+x) (take x xs) == take x xs","take (x+x) (take x xs) == take x xs","take (x+x) (take x xs) == take x xs","take (x+x) (take x xs) == take x xs","take (x+x) (take x xs) == take x xs","take (x+x) (take x xs) == take x xs","take (x+x) (take x xs) == take x xs","take (x+x) (take x xs) == take x xs","take (x+x) (take x xs) == take x xs","drop (len xs) (filter p xs) == []","drop (len xs) (xs++ys) == ys","drop (len xs) (xs++ys) == ys"]}}],[282.544023,{"PlainProof":{"prop_name":"take (len xs) (take x xs) == take x xs","lemmas":[]}}],[283.065117,{"PlainProof":{"prop_name":"drop (len xs) (take x xs) == []","lemmas":[]}}],[283.096475,{"Discard":{"discarded":["drop (len xs) (take x xs) == []","drop (len xs) (take x xs) == []","drop (len xs) (drop x xs) == []","drop (len xs) (drop x xs) == []","drop (len xs) (filter p xs) == []","drop (len xs) (xs++ys) == ys","drop (len xs) (xs++ys) == ys","drop (len xs) (take x xs) == []","drop (len xs) (take x xs) == []","drop (len xs) (take x xs) == []","drop (len xs) (drop x xs) == []","drop (len xs) (drop x xs) == []","drop (len xs) (drop x xs) == []","drop (len xs) (filter p xs) == []","drop (len xs) (xs++ys) == ys","drop (len xs) (xs++ys) == ys","drop (len xs) (take x xs) == []","drop (len xs) (take x xs) == []","drop (len xs) (take x xs) == []","drop (len xs) (drop x xs) == []","drop (len xs) (drop x xs) == []","drop (len xs) (drop x xs) == []","drop (S x) (x:xs) == drop x xs","drop (S x) (x:xs) == drop x xs","drop (S x) (x:xs) == drop x xs"]}}],[283.183091,{"PlainProof":{"prop_name":"drop (len xs) (drop x xs) == []","lemmas":[]}}],[283.574925,{"PlainProof":{"prop_name":"drop (S x) (take x xs) == []","lemmas":[]}}],[283.576833,{"Discard":{"discarded":["drop (S x) (take x xs) == []","drop (S x) (take x xs) == []","drop (S x) (x:xs) == drop x xs","drop (S x) (x:xs) == drop x xs","drop (S x) (x:xs) == drop x xs","drop (S x) (take x xs) == []","drop (S x) (take x xs) == []","drop (S x) (take x xs) == []","drop (S x) (x:xs) == drop x xs","drop (S x) (x:xs) == drop x xs","drop (S x) (x:xs) == drop x xs","drop (S x) (take x xs) == []","drop (S x) (take x xs) == []","drop (S x) (take x xs) == []","drop (x+x) (take x xs) == []","drop (x+x) (take x xs) == []","drop (x+x) (take x xs) == []","drop (x+x) (take x xs) == []","drop (x+x) (take x xs) == []","drop (x+x) (take x xs) == []","drop (x+x) (take x xs) == []","drop (x+x) (take x xs) == []","drop (x+x) (take x xs) == []","count (len xs) (ys++xs) == count (len xs) (xs++ys)","count (len xs) (ys++xs) == count (len xs) (xs++ys)","count (len xs) (rev ys) == count (len xs) ys","count (len xs) (rev ys) == count (len xs) ys","count (len xs) (xs++ys) == count (len xs) (ys++xs)","count (len xs) (ys++xs) == count (len xs) (xs++ys)","count (len xs) (rev ys) == count (len xs) ys","count (len xs) (rev ys) == count (len xs) ys","count (len xs) (xs++ys) == count (len xs) (ys++xs)","count (len xs) (xs++ys) == count (len xs) (ys++xs)","count (len xs) (rev ys) == count (len xs) ys","count (len xs) (rev ys) == count (len xs) ys","count (S x) (x:xs) == count (S x) xs","count (S x) (x:xs) == count (S x) xs","count (S x) (x:xs) == count (S x) xs","count (S x) (rev xs) == count (S x) xs","count (S x) (rev xs) == count (S x) xs","count (S x) (rev xs) == count (S x) xs","count (S x) (x:xs) == count (S x) xs","count (S x) (x:xs) == count (S x) xs","count (S x) (x:xs) == count (S x) xs","count (S x) (rev xs) == count (S x) xs","count (S x) (rev xs) == count (S x) xs","count (S x) (rev xs) == count (S x) xs","count (S x) (x:xs) == count (S x) xs","count (S x) (x:xs) == count (S x) xs","count (S x) (x:xs) == count (S x) xs","count (S x) (rev xs) == count (S x) xs","count (S x) (rev xs) == count (S x) xs","count (S x) (rev xs) == count (S x) xs","count (x+x) (rev xs) == count (x+x) xs","count (x+x) (rev xs) == count (x+x) xs","count (x+x) (rev xs) == count (x+x) xs","count (x+x) (rev xs) == count (x+x) xs","count (x+x) (rev xs) == count (x+x) xs","count (x+x) (rev xs) == count (x+x) xs","count (x+x) (rev xs) == count (x+x) xs","count (x+x) (rev xs) == count (x+x) xs","count (x+x) (rev xs) == count (x+x) xs","len xs+count x xs == count x xs+len xs","len xs+count x xs == count x xs+len xs","len xs+count x xs == count x xs+len xs","len xs+len ys == len (xs++ys)","len xs+len ys == len (xs++ys)","len xs+count x xs == count x xs+len xs","len xs+count x xs == count x xs+len xs","len xs+count x xs == count x xs+len xs","len xs+len ys == len (ys++xs)","len xs+len ys == len (xs++ys)","len xs+count x xs == count x xs+len xs","len xs+count x xs == count x xs+len xs","len xs+count x xs == count x xs+len xs","len xs+len ys == len (ys++xs)","len xs+len ys == len (ys++xs)","S x+count x xs == count x xs+S x","S x+count x xs == count x xs+S x","S x+count x xs == count x xs+S x","S x+(x+y) == (x+y)+S x","S x+(x+y) == (x+y)+S x","S x+(x-y) == (x-y)+S x","S x+(x-y) == (x-y)+S x","S x+(y-x) == (x-y)+S y","S x+(y-x) == (x-y)+S y","S x+len xs == len xs+S x","S x+len xs == len xs+S x","S x+len xs == len xs+S x","S x+(y+y) == (x+y)+S y","S x+(y+y) == (x+y)+S y","S x+count x xs == count x xs+S x","S x+count x xs == count x xs+S x","S x+count x xs == count x xs+S x","S x+(y+x) == (y+x)+S x","S x+(x+y) == (x+y)+S x","S x+(y-x) == (y-x)+S x","S x+(x-y) == (x-y)+S x","S x+(x-y) == (x-y)+S x","S x+(y-x) == (x-y)+S y","S x+len xs == len xs+S x","S x+len xs == len xs+S x","S x+len xs == len xs+S x","S x+S y == S y+S x","S x+(y+y) == (y+x)+S y","S x+(y+y) == (x+y)+S y","S x+count x xs == count x xs+S x","S x+count x xs == count x xs+S x","S x+count x xs == count x xs+S x","S x+(y+x) == (y+x)+S x","S x+(y+x) == (y+x)+S x","S x+(y-x) == (y-x)+S x","S x+(y-x) == (y-x)+S x","S x+(x-y) == (x-y)+S x","S x+(x-y) == (x-y)+S x","S x+len xs == len xs+S x","S x+len xs == len xs+S x","S x+len xs == len xs+S x","S x+S y == S y+S x","S x+S y == S y+S x","S x+(y+y) == (y+x)+S y","S x+(y+y) == (y+x)+S y","(x+x)+count x xs == count x xs+(x+x)","(x+x)+count x xs == count x xs+(x+x)","(x+x)+count x xs == count x xs+(x+x)","(x+x)+(x+y) == (x+y)+(x+x)","(x+x)+(x+y) == (x+y)+(x+x)","(x+x)+(x-y) == (x-y)+(x+x)","(x+x)+(x-y) == (x-y)+(x+x)","(x+x)+(y-x) == (x+y)+(x-y)","(x+x)+(y-x) == (x+y)+(x-y)","(x+x)+len xs == len xs+(x+x)","(x+x)+len xs == len xs+(x+x)","(x+x)+len xs == len xs+(x+x)","(x+x)+S y == (x+y)+S x","(x+x)+S y == (x+y)+S x","(x+x)+(y+y) == (x+y)+(x+y)","(x+x)+(y+y) == (x+y)+(x+y)","(x+x)+count x xs == count x xs+(x+x)","(x+x)+count x xs == count x xs+(x+x)","(x+x)+count x xs == count x xs+(x+x)","(x+x)+(y+x) == (y+x)+(x+x)","(x+x)+(x+y) == (x+y)+(x+x)","(x+x)+(y-x) == (y+x)+(x-y)","(x+x)+(x-y) == (x-y)+(x+x)","(x+x)+(x-y) == (x-y)+(x+x)","(x+x)+(y-x) == (x+y)+(x-y)","(x+x)+len xs == len xs+(x+x)","(x+x)+len xs == len xs+(x+x)","(x+x)+len xs == len xs+(x+x)","(x+x)+S y == (y+x)+S x","(x+x)+S y == (x+y)+S x","(x+x)+(y+y) == (y+x)+(y+x)","(x+x)+(y+y) == (x+y)+(x+y)","(x+x)+count x xs == count x xs+(x+x)","(x+x)+count x xs == count x xs+(x+x)","(x+x)+count x xs == count x xs+(x+x)","(x+x)+(y+x) == (y+x)+(x+x)","(x+x)+(y+x) == (y+x)+(x+x)","(x+x)+(y-x) == (y+x)+(x-y)","(x+x)+(y-x) == (y+x)+(x-y)","(x+x)+(x-y) == (x-y)+(x+x)","(x+x)+(x-y) == (x-y)+(x+x)","(x+x)+len xs == len xs+(x+x)","(x+x)+len xs == len xs+(x+x)","(x+x)+len xs == len xs+(x+x)","(x+x)+S y == (y+x)+S x","(x+x)+S y == (y+x)+S x","(x+x)+(y+y) == (y+x)+(y+x)","(x+x)+(y+y) == (y+x)+(y+x)","S x-S y == x-y","S x-S y == x-y","S x-(x+y) == S z-(z+y)","S x-(x-y) == S y-(y-x)","S x-S y == x-y","S x-S y == x-y","S x-(y+x) == S z-(y+z)","S x-(y+x) == S z-(z+y)","S x-(x-y) == S y-(y-x)","S x-(x-y) == S y-(y-x)","S x-S y == x-y","S x-S y == x-y","(x+x)-(x+y) == x-y","(x+x)-(x+y) == x-y","(x+x)-(x-y) == (x+y)-(y-x)","(x+x)-(x-y) == (x+y)-(y-x)","(x+x)-(y+y) == (x-y)+(x-y)","(x+x)-(y+y) == (x-y)+(x-y)","(x+x)-(y+x) == x-y","(x+x)-(x+y) == x-y","(x+x)-(x-y) == (y+x)-(y-x)","(x+x)-(x-y) == (x+y)-(y-x)","(x+x)-(y+y) == (x-y)+(x-y)","(x+x)-(y+y) == (x-y)+(x-y)","(x+x)-(y+x) == x-y","(x+x)-(y+x) == x-y","(x+x)-(x-y) == (y+x)-(y-x)","(x+x)-(x-y) == (y+x)-(y-x)","(x+x)-(y+y) == (x-y)+(x-y)","(x+x)-(y+y) == (x-y)+(x-y)","(x:[])++xs == x:xs","(x:[])++xs == x:xs","(x:[])++xs == x:xs","(x:[])++xs == x:xs","(x:[])++xs == x:xs","(x:[])++xs == x:xs","(x:[])++xs == x:xs","(x:[])++xs == x:xs","(x:[])++xs == x:xs","(Z:xs)++ys == Z:(xs++ys)","(Z:xs)++ys == Z:(xs++ys)","(Z:xs)++ys == Z:(xs++ys)","(Z:xs)++ys == Z:(xs++ys)","(Z:xs)++ys == Z:(xs++ys)","(Z:xs)++ys == Z:(xs++ys)","count Z xs+x == x+count Z xs","count Z xs+x == x+count Z xs","count Z xs+x == x+count Z xs","count Z xs+x == x+count Z xs","count Z xs+x == x+count Z xs","count Z xs+x == x+count Z xs","count Z xs+x == x+count Z xs","count Z xs+x == x+count Z xs","count Z xs+x == x+count Z xs","rev (x:[]) == x:[]","rev (x:[]) == x:[]","rev (x:[]) == x:[]","len (x:[]) == S Z","len (x:[]) == S Z","len (x:[]) == S Z","len (Z:xs) == len (x:xs)","len (Z:xs) == len (x:xs)","len (Z:xs) == len (x:xs)","count x (x:[]) == S Z","count x (x:[]) == S Z","count x (x:[]) == S Z","x+S Z == S x","x+S Z == S x","x+S Z == S x","x-S Z == (x+y)-S y","x-S Z == (y+x)-S y","x-S Z == (y+x)-S y","[]++rev xs == rev xs","[]++rev xs == rev xs","[]++rev xs == rev xs","[]++(xs++xs) == xs++xs","[]++(xs++xs) == xs++xs","[]++(xs++xs) == xs++xs","take Z (rev xs) == []","take Z (rev xs) == []","take Z (rev xs) == []","take Z (xs++xs) == []","take Z (xs++xs) == []","take Z (xs++xs) == []","drop Z (rev xs) == rev xs","drop Z (rev xs) == rev xs","drop Z (rev xs) == rev xs","drop Z (xs++xs) == xs++xs","drop Z (xs++xs) == xs++xs","drop Z (xs++xs) == xs++xs","count Z (rev xs) == count Z xs","count Z (rev xs) == count Z xs","count Z (rev xs) == count Z xs","Z+len xs == len xs","Z+len xs == len xs","Z+len xs == len xs","Z+S x == S x","Z+S x == S x","Z+S x == S x","Z+(x+x) == x+x","Z+(x+x) == x+x","Z+(x+x) == x+x","Z-len xs == Z","Z-len xs == Z","Z-len xs == Z","Z-S x == Z","Z-S x == Z","Z-S x == Z","Z-(x+x) == Z","Z-(x+x) == Z","Z-(x+x) == Z","rev xs++[] == rev xs","rev xs++rev xs == rev (xs++xs)","rev xs++[] == rev xs","rev xs++rev xs == rev (xs++xs)","rev xs++[] == rev xs","rev xs++rev xs == rev (xs++xs)","(xs++xs)++[] == xs++xs","(xs++xs)++[] == xs++xs","(xs++xs)++[] == xs++xs","take (len xs) [] == []","take (len xs) (rev xs) == rev xs","take (len xs) (xs++xs) == xs","take (len xs) [] == []","take (len xs) (rev xs) == rev xs","take (len xs) (xs++xs) == xs","take (len xs) [] == []","take (len xs) (rev xs) == rev xs","take (len xs) (xs++xs) == xs","take (S x) [] == []","take (S x) [] == []","take (S x) [] == []","take (x+x) [] == []","take (x+x) [] == []","take (x+x) [] == []","drop (len xs) [] == []","drop (len xs) (rev xs) == []","drop (len xs) (xs++xs) == xs","drop (len xs) [] == []","drop (len xs) (rev xs) == []","drop (len xs) (xs++xs) == xs","drop (len xs) [] == []","drop (len xs) (rev xs) == []","drop (len xs) (xs++xs) == xs","drop (S x) [] == []","drop (S x) [] == []","drop (S x) [] == []","drop (x+x) [] == []","drop (x+x) [] == []","drop (x+x) [] == []","count (len xs) [] == Z","count (len xs) (rev xs) == count (len xs) xs","count (len xs) [] == Z","count (len xs) (rev xs) == count (len xs) xs","count (len xs) [] == Z","count (len xs) (rev xs) == count (len xs) xs","count (S x) [] == Z","count (S x) [] == Z","count (S x) [] == Z","count (x+x) [] == Z","count (x+x) [] == Z","count (x+x) [] == Z","len xs+Z == len xs","len xs+len xs == len (xs++xs)","len xs+Z == len xs","len xs+len xs == len (xs++xs)","len xs+Z == len xs","len xs+len xs == len (xs++xs)","S x+Z == S x","S x+Z == S x","S x+Z == S x","(x+x)+Z == x+x","(x+x)+S x == S x+(x+x)","(x+x)+Z == x+x","(x+x)+S x == S x+(x+x)","(x+x)+Z == x+x","(x+x)+S x == S x+(x+x)","len xs-Z == len xs","len xs-len xs == Z","len xs-Z == len xs","len xs-len xs == Z","len xs-Z == len xs","len xs-len xs == Z","S x-Z == S x","S x-S x == Z","S x-(x+x) == S y-(x+y)","S x-Z == S x","S x-S x == Z","S x-(x+x) == S y-(y+x)","S x-Z == S x","S x-S x == Z","S x-(x+x) == S y-(y+x)","(x+x)-Z == x+x","(x+x)-S x == (x+y)-S y","(x+x)-(x+x) == Z","(x+x)-Z == x+x","(x+x)-S x == (y+x)-S y","(x+x)-(x+x) == Z","(x+x)-Z == x+x","(x+x)-S x == (y+x)-S y","(x+x)-(x+x) == Z","(Z:xs)++xs == Z:(xs++xs)","(Z:xs)++xs == Z:(xs++xs)","(Z:xs)++xs == Z:(xs++xs)","S Z+x == S x","S Z+x == S x","S Z+x == S x","S Z-x == S y-(x+y)","S Z-x == S y-(y+x)","S Z-x == S y-(y+x)"]}}],[288.030432,{"FailedProof":{"prop_name":"take (y+z) (x:[]) == x:[]"}}],[289.079603,{"InductiveProof":{"prop_name":"drop (x+y) (Z:xs) == drop (x+y) (x:xs)","lemmas":[]}}],[289.084142,{"Discard":{"discarded":["drop (x+y) (Z:xs) == drop (x+y) (x:xs)","drop (x+y) (Z:xs) == drop (x+y) (x:xs)","drop (x+y) (Z:xs) == drop (x+y) (x:xs)","drop (x+y) (Z:xs) == drop (x+y) (x:xs)","drop (x+y) (Z:xs) == drop (x+y) (x:xs)"]}}],[293.511326,{"FailedProof":{"prop_name":"drop (y+z) (x:[]) == []"}}],[298.764804,{"FailedProof":{"prop_name":"drop (y+z) (Z:xs) == drop (y+z) (x:xs)"}}],[298.764859,{"Discard":{"discarded":["drop (x+y) (Z:xs) == drop (x+y) (z:xs)","drop (x+y) (Z:xs) == drop (x+y) (z:xs)","count (x+y) (Z:xs) == count (x+y) xs","count (x+y) (Z:xs) == count (x+y) xs","(x:[])++filter p xs == x:filter p xs","(x:[])++filter p xs == x:filter p xs","(x:[])++filter p xs == x:filter p xs","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++take y xs == x:take y xs","(x:[])++take y xs == x:take y xs","(x:[])++take y xs == x:take y xs","(x:[])++take y xs == x:take y xs","(x:[])++take y xs == x:take y xs","(x:[])++take y xs == x:take y xs","(x:[])++drop y xs == x:drop y xs","(x:[])++drop y xs == x:drop y xs","(x:[])++drop y xs == x:drop y xs","(x:[])++drop y xs == x:drop y xs","(x:[])++drop y xs == x:drop y xs","(x:[])++drop y xs == x:drop y xs","(x:[])++filter p xs == x:filter p xs","(x:[])++filter p xs == x:filter p xs","(x:[])++filter p xs == x:filter p xs","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++take y xs == x:take y xs","(x:[])++take y xs == x:take y xs","(x:[])++take y xs == x:take y xs","(x:[])++take y xs == x:take y xs","(x:[])++take y xs == x:take y xs","(x:[])++take y xs == x:take y xs","(x:[])++drop y xs == x:drop y xs","(x:[])++drop y xs == x:drop y xs","(x:[])++drop y xs == x:drop y xs","(x:[])++drop y xs == x:drop y xs","(x:[])++drop y xs == x:drop y xs","(x:[])++drop y xs == x:drop y xs","(x:[])++filter p xs == x:filter p xs","(x:[])++filter p xs == x:filter p xs","(x:[])++filter p xs == x:filter p xs","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++take y xs == x:take y xs","(x:[])++take y xs == x:take y xs","(x:[])++take y xs == x:take y xs","(x:[])++take y xs == x:take y xs","(x:[])++take y xs == x:take y xs","(x:[])++take y xs == x:take y xs","(x:[])++drop y xs == x:drop y xs","(x:[])++drop y xs == x:drop y xs","(x:[])++drop y xs == x:drop y xs","(x:[])++drop y xs == x:drop y xs","(x:[])++drop y xs == x:drop y xs","(x:[])++drop y xs == x:drop y xs","count (count Z xs) (ys++zs) == count (count Z xs) (zs++ys)","count (count Z xs) (ys++zs) == count (count Z xs) (zs++ys)","count (count Z xs) (ys++zs) == count (count Z xs) (zs++ys)","count Z xs+count x ys == count x ys+count Z xs","count Z xs+count x ys == count x ys+count Z xs","count Z xs+count x ys == count x ys+count Z xs","count Z xs+count x ys == count x ys+count Z xs","count Z xs+count x ys == count x ys+count Z xs","count Z xs+count x ys == count x ys+count Z xs","count Z xs+(x+y) == (x+y)+count Z xs","count Z xs+(x+y) == (x+y)+count Z xs","count Z xs+(x+y) == (x+y)+count Z xs","count Z xs+(x-y) == (x-y)+count Z xs","count Z xs+(x-y) == (x-y)+count Z xs","count Z xs+(x-y) == (x-y)+count Z xs","count Z xs+(x-y) == (x-y)+count Z xs","count Z xs+(x-y) == (x-y)+count Z xs","count Z xs+(x-y) == (x-y)+count Z xs","count Z xs+count x ys == count x ys+count Z xs","count Z xs+count x ys == count x ys+count Z xs","count Z xs+count x ys == count x ys+count Z xs","count Z xs+count x ys == count x ys+count Z xs","count Z xs+count x ys == count x ys+count Z xs","count Z xs+count x ys == count x ys+count Z xs","count Z xs+(x+y) == (x+y)+count Z xs","count Z xs+(x+y) == (x+y)+count Z xs","count Z xs+(x+y) == (x+y)+count Z xs","count Z xs+(x-y) == (x-y)+count Z xs","count Z xs+(x-y) == (x-y)+count Z xs","count Z xs+(x-y) == (x-y)+count Z xs","count Z xs+(x-y) == (x-y)+count Z xs","count Z xs+(x-y) == (x-y)+count Z xs","count Z xs+(x-y) == (x-y)+count Z xs","count Z xs+count x ys == count x ys+count Z xs","count Z xs+count x ys == count x ys+count Z xs","count Z xs+count x ys == count x ys+count Z xs","count Z xs+count x ys == count x ys+count Z xs","count Z xs+count x ys == count x ys+count Z xs","count Z xs+count x ys == count x ys+count Z xs","count Z xs+(x+y) == (x+y)+count Z xs","count Z xs+(x+y) == (x+y)+count Z xs","count Z xs+(x+y) == (x+y)+count Z xs","count Z xs+(x-y) == (x-y)+count Z xs","count Z xs+(x-y) == (x-y)+count Z xs","count Z xs+(x-y) == (x-y)+count Z xs","count Z xs+(x-y) == (x-y)+count Z xs","count Z xs+(x-y) == (x-y)+count Z xs","count Z xs+(x-y) == (x-y)+count Z xs"]}}],[302.956538,{"FailedProof":{"prop_name":"count (y+z) (Z:xs) == count (y+z) xs"}}],[306.063937,{"FailedProof":{"prop_name":"count Z zs-(x+y) == count y zs-(x+y)"}}],[308.233968,{"FailedProof":{"prop_name":"take (y+z) (y:[]) == y:[]"}}],[310.493005,{"FailedProof":{"prop_name":"take (y+z) (z:[]) == z:[]"}}],[310.493083,{"Discard":{"discarded":["drop (x+y) (y:[]) == drop (x+y) (x:[])","drop (x+y) (y:[]) == drop (x+y) (x:[])"]}}],[312.673804,{"FailedProof":{"prop_name":"drop (y+z) (y:[]) == []"}}],[314.907421,{"FailedProof":{"prop_name":"drop (y+z) (z:[]) == []"}}],[314.907466,{"Discard":{"discarded":["count (x+y) (x:[]) == S x-(x+y)","count (x+y) (x:[]) == S x-(x+y)"]}}],[316.944962,{"FailedProof":{"prop_name":"count (x+y) (y:[]) == S y-(x+y)"}}],[321.03558,{"FailedProof":{"prop_name":"count (x+z) (z:[]) == S y-(x+y)"}}],[325.144509,{"FailedProof":{"prop_name":"count (y+z) (y:[]) == S x-(x+z)"}}],[328.221698,{"FailedProof":{"prop_name":"count (y+z) (z:[]) == S x-(x+y)"}}],[328.221731,{"Discard":{"discarded":["count (x-y) (x:[]) == count (y-x) (y:[])","count (x-y) (x:[]) == count (y-x) (y:[])","count (x-y) (x:[]) == count (y-x) (y:[])","count x xs+S Z == S (count x xs)","count x xs+S Z == S (count x xs)","count x xs+S Z == S (count x xs)","count x xs+S Z == S (count x xs)","count x xs+S Z == S (count x xs)","count x xs+S Z == S (count x xs)","count x xs+S Z == S (count x xs)","count x xs+S Z == S (count x xs)","count x xs+S Z == S (count x xs)","(x+y)+S Z == S (x+y)","(x+y)+S Z == S (x+y)","(x+y)+S Z == S (x+y)","(x-y)+S Z == S (x-y)","(x-y)+S Z == S (x-y)","(x-y)+S Z == S (x-y)","(x-y)+S Z == S (x-y)","(x-y)+S Z == S (x-y)","(x-y)+S Z == S (x-y)","(x-y)-S Z == x-S y","(x-y)-S Z == x-S y","(x-y)-S Z == x-S y","(x-y)-S Z == x-S y","(x-y)-S Z == x-S y","(x-y)-S Z == x-S y","rev xs++(x:[]) == rev (x:xs)","rev xs++(x:[]) == rev (x:xs)","rev xs++(x:[]) == rev (x:xs)","rev xs++(x:[]) == rev (x:xs)","rev xs++(x:[]) == rev (x:xs)","rev xs++(x:[]) == rev (x:xs)","rev xs++(x:[]) == rev (x:xs)","rev xs++(x:[]) == rev (x:xs)","rev xs++(x:[]) == rev (x:xs)","take (S x) (y:[]) == y:[]","take (S x) (y:[]) == y:[]","take (S x) (Z:xs) == Z:take x xs","take (S x) (Z:xs) == Z:take x xs","take (S x) (Z:xs) == Z:take x xs","take (S x) (y:[]) == y:[]","take (S x) (y:[]) == y:[]","take (S x) (Z:xs) == Z:take x xs","take (S x) (Z:xs) == Z:take x xs","take (S x) (Z:xs) == Z:take x xs","take (S x) (y:[]) == y:[]","take (S x) (y:[]) == y:[]","take (S x) (Z:xs) == Z:take x xs","take (S x) (Z:xs) == Z:take x xs","take (S x) (Z:xs) == Z:take x xs","take (x+x) (y:[]) == take x (y:[])","take (x+x) (y:[]) == take x (y:[])","take (x+x) (y:[]) == take x (y:[])","take (x+x) (y:[]) == take x (y:[])","take (x+x) (y:[]) == take x (y:[])","take (x+x) (y:[]) == take x (y:[])","drop (S x) (y:[]) == []","drop (S x) (y:[]) == []","drop (S x) (Z:xs) == drop x xs","drop (S x) (Z:xs) == drop x xs","drop (S x) (Z:xs) == drop x xs","drop (S x) (y:[]) == []","drop (S x) (y:[]) == []","drop (S x) (Z:xs) == drop x xs","drop (S x) (Z:xs) == drop x xs","drop (S x) (Z:xs) == drop x xs","drop (S x) (y:[]) == []","drop (S x) (y:[]) == []","drop (S x) (Z:xs) == drop x xs","drop (S x) (Z:xs) == drop x xs","drop (S x) (Z:xs) == drop x xs","drop (x+x) (y:[]) == drop x (y:[])","drop (x+x) (y:[]) == drop x (y:[])","drop (x+x) (Z:xs) == drop (x+x) (x:xs)","drop (x+x) (Z:xs) == drop (x+x) (x:xs)","drop (x+x) (Z:xs) == drop (x+x) (x:xs)","drop (x+x) (y:[]) == drop x (y:[])","drop (x+x) (y:[]) == drop x (y:[])","drop (x+x) (Z:xs) == drop (x+x) (x:xs)","drop (x+x) (Z:xs) == drop (x+x) (x:xs)","drop (x+x) (Z:xs) == drop (x+x) (x:xs)","drop (x+x) (y:[]) == drop x (y:[])","drop (x+x) (y:[]) == drop x (y:[])","drop (x+x) (Z:xs) == drop (x+x) (x:xs)","drop (x+x) (Z:xs) == drop (x+x) (x:xs)","drop (x+x) (Z:xs) == drop (x+x) (x:xs)","count (S x) (Z:xs) == count (S x) xs","count (S x) (Z:xs) == count (S x) xs","count (S x) (Z:xs) == count (S x) xs","count (S x) (Z:xs) == count (S x) xs","count (S x) (Z:xs) == count (S x) xs","count (S x) (Z:xs) == count (S x) xs","count (S x) (Z:xs) == count (S x) xs","count (S x) (Z:xs) == count (S x) xs","count (S x) (Z:xs) == count (S x) xs","count (x+x) (y:[]) == count (y-x) (x:[])","count (x+x) (y:[]) == count (y-x) (x:[])","count (x+x) (Z:xs) == count (x+x) (x:xs)","count (x+x) (Z:xs) == count (x+x) (x:xs)","count (x+x) (Z:xs) == count (x+x) (x:xs)","count (x+x) (y:[]) == count (y-x) (x:[])","count (x+x) (y:[]) == count (y-x) (x:[])","count (x+x) (Z:xs) == count (x+x) (x:xs)","count (x+x) (Z:xs) == count (x+x) (x:xs)","count (x+x) (Z:xs) == count (x+x) (x:xs)","count (x+x) (y:[]) == count (y-x) (x:[])","count (x+x) (y:[]) == count (y-x) (x:[])","count (x+x) (Z:xs) == count (x+x) (x:xs)","count (x+x) (Z:xs) == count (x+x) (x:xs)","count (x+x) (Z:xs) == count (x+x) (x:xs)","(x:[])++(x:xs) == x:(x:xs)","(x:[])++(x:xs) == x:(x:xs)","(x:[])++(x:xs) == x:(x:xs)","(x:[])++take x xs == x:take x xs","(x:[])++take x xs == x:take x xs","(x:[])++take x xs == x:take x xs","(x:[])++drop x xs == x:drop x xs","(x:[])++drop x xs == x:drop x xs","(x:[])++drop x xs == x:drop x xs","(x:[])++rev xs == x:rev xs","(x:[])++rev xs == x:rev xs","(x:[])++rev xs == x:rev xs","(x:[])++(xs++xs) == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","(x:[])++(x:xs) == x:(x:xs)","(x:[])++(x:xs) == x:(x:xs)","(x:[])++(x:xs) == x:(x:xs)","(x:[])++take x xs == x:take x xs","(x:[])++take x xs == x:take x xs","(x:[])++take x xs == x:take x xs","(x:[])++drop x xs == x:drop x xs","(x:[])++drop x xs == x:drop x xs","(x:[])++drop x xs == x:drop x xs","(x:[])++rev xs == x:rev xs","(x:[])++rev xs == x:rev xs","(x:[])++rev xs == x:rev xs","(x:[])++(xs++xs) == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","(x:[])++(x:xs) == x:(x:xs)","(x:[])++(x:xs) == x:(x:xs)","(x:[])++(x:xs) == x:(x:xs)","(x:[])++take x xs == x:take x xs","(x:[])++take x xs == x:take x xs","(x:[])++take x xs == x:take x xs","(x:[])++drop x xs == x:drop x xs","(x:[])++drop x xs == x:drop x xs","(x:[])++drop x xs == x:drop x xs","(x:[])++rev xs == x:rev xs","(x:[])++rev xs == x:rev xs","(x:[])++rev xs == x:rev xs","(x:[])++(xs++xs) == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","take (count Z xs) (xs++ys) == take (count Z xs) xs","take (count Z xs) (xs++ys) == take (count Z xs) xs","take (count Z xs) (xs++ys) == take (count Z xs) xs","take (count Z xs) (xs++ys) == take (count Z xs) xs","take (count Z xs) (xs++ys) == take (count Z xs) xs","count (count Z xs) (ys++xs) == count (count Z xs) (xs++ys)","count (count Z xs) (ys++xs) == count (count Z xs) (xs++ys)","count (count Z xs) (rev ys) == count (count Z xs) ys","count (count Z xs) (rev ys) == count (count Z xs) ys","count (count Z xs) (xs++ys) == count (count Z xs) (ys++xs)","count (count Z xs) (ys++xs) == count (count Z xs) (xs++ys)","count (count Z xs) (rev ys) == count (count Z xs) ys","count (count Z xs) (rev ys) == count (count Z xs) ys","count (count Z xs) (xs++ys) == count (count Z xs) (ys++xs)","count (count Z xs) (xs++ys) == count (count Z xs) (ys++xs)","count (count Z xs) (rev ys) == count (count Z xs) ys","count (count Z xs) (rev ys) == count (count Z xs) ys","count Z xs+count x xs == count x xs+count Z xs","count Z xs+count x xs == count x xs+count Z xs","count Z xs+count x xs == count x xs+count Z xs","count Z xs+len ys == len ys+count Z xs","count Z xs+len ys == len ys+count Z xs","count Z xs+S x == S x+count Z xs","count Z xs+S x == S x+count Z xs","count Z xs+S x == S x+count Z xs","count Z xs+(x+x) == (x+x)+count Z xs","count Z xs+(x+x) == (x+x)+count Z xs","count Z xs+(x+x) == (x+x)+count Z xs","count Z xs+count x xs == count x xs+count Z xs","count Z xs+count x xs == count x xs+count Z xs","count Z xs+count x xs == count x xs+count Z xs","count Z xs+len ys == len ys+count Z xs","count Z xs+len ys == len ys+count Z xs","count Z xs+S x == S x+count Z xs","count Z xs+S x == S x+count Z xs","count Z xs+S x == S x+count Z xs","count Z xs+(x+x) == (x+x)+count Z xs","count Z xs+(x+x) == (x+x)+count Z xs","count Z xs+(x+x) == (x+x)+count Z xs","count Z xs+count x xs == count x xs+count Z xs","count Z xs+count x xs == count x xs+count Z xs","count Z xs+count x xs == count x xs+count Z xs","count Z xs+len ys == len ys+count Z xs","count Z xs+len ys == len ys+count Z xs","count Z xs+S x == S x+count Z xs","count Z xs+S x == S x+count Z xs","count Z xs+S x == S x+count Z xs","count Z xs+(x+x) == (x+x)+count Z xs","count Z xs+(x+x) == (x+x)+count Z xs","count Z xs+(x+x) == (x+x)+count Z xs","take (S Z) (x:xs) == x:[]","take (S Z) (x:xs) == x:[]","take (S Z) (x:xs) == x:[]","take (S Z) (x:xs) == x:[]","take (S Z) (x:xs) == x:[]","take (S Z) (x:xs) == x:[]","take (S Z) (x:xs) == x:[]","take (S Z) (x:xs) == x:[]","take (S Z) (x:xs) == x:[]","drop (S Z) (x:xs) == xs","drop (S Z) (x:xs) == xs","drop (S Z) (x:xs) == xs","drop (S Z) (x:xs) == xs","drop (S Z) (x:xs) == xs","drop (S Z) (x:xs) == xs","drop (S Z) (x:xs) == xs","drop (S Z) (x:xs) == xs","drop (S Z) (x:xs) == xs","drop (S Z) (drop x xs) == drop (S x) xs","drop (S Z) (drop x xs) == drop (S x) xs","drop (S Z) (drop x xs) == drop (S x) xs","drop (S Z) (drop x xs) == drop (S x) xs","drop (S Z) (drop x xs) == drop (S x) xs","drop (S Z) (drop x xs) == drop (S x) xs","drop (S Z) (drop x xs) == drop (S x) xs","drop (S Z) (drop x xs) == drop (S x) xs","drop (S Z) (drop x xs) == drop (S x) xs","count (S Z) (xs++ys) == count (S Z) (ys++xs)","count (S Z) (xs++ys) == count (S Z) (ys++xs)","count (S Z) (xs++ys) == count (S Z) (ys++xs)","S Z+count x xs == S (count x xs)","S Z+count x xs == S (count x xs)","S Z+count x xs == S (count x xs)","S Z+count x xs == S (count x xs)","S Z+count x xs == S (count x xs)","S Z+count x xs == S (count x xs)","S Z+count x xs == S (count x xs)","S Z+count x xs == S (count x xs)","S Z+count x xs == S (count x xs)","S Z+(x+y) == S (x+y)","S Z+(x+y) == S (x+y)","S Z+(x+y) == S (x+y)","S Z+(x-y) == S (x-y)","S Z+(x-y) == S (x-y)","S Z+(x-y) == S (x-y)","S Z+(x-y) == S (x-y)","S Z+(x-y) == S (x-y)","S Z+(x-y) == S (x-y)","drop x (Z:[]) == drop x (x:[])","drop x (Z:[]) == drop x (x:[])","drop x (Z:[]) == drop x (x:[])","count x (Z:[]) == S y-(x+y)","count x (Z:[]) == S y-(y+x)","count x (Z:[]) == S y-(y+x)","[]++(x:[]) == x:[]","[]++(x:[]) == x:[]","[]++(x:[]) == x:[]","[]++(Z:xs) == Z:xs","[]++(Z:xs) == Z:xs","[]++(Z:xs) == Z:xs","take Z (x:[]) == []","take Z (x:[]) == []","take Z (x:[]) == []","take Z (Z:xs) == []","take Z (Z:xs) == []","take Z (Z:xs) == []","drop Z (x:[]) == x:[]","drop Z (x:[]) == x:[]","drop Z (x:[]) == x:[]","drop Z (Z:xs) == Z:xs","drop Z (Z:xs) == Z:xs","drop Z (Z:xs) == Z:xs"]}}],[330.346821,{"FailedProof":{"prop_name":"take (count Z xs) (xs++ys) == take (count Z xs) xs"}}],[331.405555,{"InductiveProof":{"prop_name":"count Z (x:[]) == S y-(x+y)","lemmas":[]}}],[331.405914,{"Discard":{"discarded":["count Z (x:[]) == S y-(y+x)","count Z (x:[]) == S y-(y+x)","count Z (Z:xs) == S (count Z xs)","count Z (Z:xs) == S (count Z xs)","count Z (Z:xs) == S (count Z xs)","Z+count Z xs == count Z xs","Z+count Z xs == count Z xs","Z+count Z xs == count Z xs","Z-count Z xs == Z","Z-count Z xs == Z","Z-count Z xs == Z","take (S x) (x:[]) == x:[]","take (S x) (x:[]) == x:[]","take (S x) (x:[]) == x:[]","take (x+x) (x:[]) == take x (x:[])","take (x+x) (x:[]) == take x (x:[])","take (x+x) (x:[]) == take x (x:[])","drop (S x) (x:[]) == []","drop (S x) (x:[]) == []","drop (S x) (x:[]) == []","drop (x+x) (x:[]) == drop x (x:[])","drop (x+x) (x:[]) == drop x (x:[])","drop (x+x) (x:[]) == drop x (x:[])","count (S x) (x:[]) == Z","count (S x) (x:[]) == Z"]}}],[332.424074,{"FailedProof":{"prop_name":"count (S x) (x:[]) == Z"}}],[334.49458,{"FailedProof":{"prop_name":"count (x+x) (x:[]) == S y-(x+y)"}}],[334.494668,{"Discard":{"discarded":["count (x+x) (x:[]) == S y-(y+x)","len xs+S Z == len (x:xs)","len xs+S Z == len (x:xs)","len xs+S Z == len (x:xs)","S x+S Z == S (S x)","S x+S Z == S (S x)","S x+S Z == S (S x)","(x+x)+S Z == S (x+x)","(x+x)+S Z == S (x+x)","(x+x)+S Z == S (x+x)","S x-S Z == x","S x-S Z == x","S x-S Z == x","(x:[])++[] == x:[]","(x:[])++[] == x:[]","(x:[])++[] == x:[]","(Z:xs)++[] == Z:xs","(Z:xs)++[] == Z:xs","(Z:xs)++[] == Z:xs","take (count Z xs) [] == []"]}}],[336.576989,{"FailedProof":{"prop_name":"count (y+y) (y:[]) == S x-(x+y)"}}],[337.607813,{"FailedProof":{"prop_name":"take (count Z xs) (xs++xs) == take (count Z xs) xs"}}],[337.607884,{"Discard":{"discarded":["take (count Z xs) [] == []","take (count Z xs) (xs++xs) == take (count Z xs) xs","take (count Z xs) [] == []","take (count Z xs) (xs++xs) == take (count Z xs) xs","drop (count Z xs) [] == []","drop (count Z xs) [] == []","drop (count Z xs) [] == []","count (count Z xs) [] == Z","count (count Z xs) (rev xs) == count (count Z xs) xs","count (count Z xs) [] == Z","count (count Z xs) (rev xs) == count (count Z xs) xs","count (count Z xs) [] == Z","count (count Z xs) (rev xs) == count (count Z xs) xs","count Z xs+Z == count Z xs","count Z xs+len xs == len xs+count Z xs","count Z xs+Z == count Z xs","count Z xs+len xs == len xs+count Z xs","count Z xs+Z == count Z xs","count Z xs+len xs == len xs+count Z xs","count Z xs-Z == count Z xs","count Z xs-Z == count Z xs","count Z xs-len xs == Z","count Z xs-Z == count Z xs","count Z xs-len xs == Z","take (S Z) (xs++xs) == take (S Z) xs","take (S Z) (xs++xs) == take (S Z) xs","take (S Z) (xs++xs) == take (S Z) xs","count (S Z) (rev xs) == count (S Z) xs","count (S Z) (rev xs) == count (S Z) xs","count (S Z) (rev xs) == count (S Z) xs","S Z+len xs == len (x:xs)","S Z+len xs == len (x:xs)","S Z+len xs == len (x:xs)","S Z+S x == S (S x)","S Z+S x == S (S x)","S Z+S x == S (S x)","S Z+(x+x) == S (x+x)","S Z+(x+x) == S (x+x)","S Z+(x+x) == S (x+x)","S Z-S x == Z","S Z-S x == Z","S Z-S x == Z","S Z-(x+x) == S y-(x+y)","S Z-(x+x) == S y-(y+x)","S Z-(x+x) == S y-(y+x)","(Z:[])++xs == Z:xs","(Z:[])++xs == Z:xs","(Z:[])++xs == Z:xs","rev (Z:[]) == Z:[]","len (Z:[]) == S Z","Z+S Z == S Z","Z-S Z == Z","take (S Z) [] == []","drop (S Z) [] == []","count (S Z) [] == Z","S Z+Z == S Z","S Z-Z == S Z"]}}],[338.653993,{"FailedProof":{"prop_name":"count Z xs-len xs == Z"}}],[340.972485,{"FailedProof":{"prop_name":"take (y+z) (Z:[]) == Z:[]"}}],[340.972551,{"Discard":{"discarded":["drop (x+y) (Z:[]) == drop (x+y) (x:[])","drop (x+y) (Z:[]) == drop (x+y) (x:[])","count (count x xs) (Z:[]) == S Z-count x xs","count (count x xs) (Z:[]) == S Z-count x xs","count (count x xs) (Z:[]) == S Z-count x xs","count (count x xs) (Z:[]) == S Z-count x xs","count (count x xs) (Z:[]) == S Z-count x xs","count (count x xs) (Z:[]) == S Z-count x xs","count (count x xs) (Z:[]) == S Z-count x xs","count (count x xs) (Z:[]) == S Z-count x xs","count (count x xs) (Z:[]) == S Z-count x xs","count (x+y) (Z:[]) == S Z-(x+y)","count (x+y) (Z:[]) == S Z-(x+y)","count (x+y) (Z:[]) == S Z-(x+y)","count (x-y) (Z:[]) == S Z-(x-y)","count (x-y) (Z:[]) == S Z-(x-y)","count (x-y) (Z:[]) == S Z-(x-y)","count (x-y) (Z:[]) == S Z-(x-y)","count (x-y) (Z:[]) == S Z-(x-y)","count (x-y) (Z:[]) == S Z-(x-y)","(x:[])++(y:[]) == x:(y:[])","(x:[])++(y:[]) == x:(y:[])","(x:[])++(Z:xs) == x:(Z:xs)","(x:[])++(Z:xs) == x:(Z:xs)","(x:[])++(Z:xs) == x:(Z:xs)","(x:[])++(y:[]) == x:(y:[])","(x:[])++(y:[]) == x:(y:[])","(x:[])++(Z:xs) == x:(Z:xs)","(x:[])++(Z:xs) == x:(Z:xs)","(x:[])++(Z:xs) == x:(Z:xs)","(x:[])++(y:[]) == x:(y:[])","(x:[])++(y:[]) == x:(y:[])","(x:[])++(Z:xs) == x:(Z:xs)","(x:[])++(Z:xs) == x:(Z:xs)","(x:[])++(Z:xs) == x:(Z:xs)"]}}],[343.247597,{"FailedProof":{"prop_name":"drop (y+z) (Z:[]) == []"}}],[345.367327,{"FailedProof":{"prop_name":"count Z xs+count Z ys == count Z (xs++ys)"}}],[345.367409,{"Discard":{"discarded":["count Z xs+count Z ys == count Z (xs++ys)","count Z xs+count Z ys == count Z (xs++ys)","count Z xs+count Z ys == count Z (ys++xs)","count Z xs+count Z ys == count Z (ys++xs)","(Z:[])++filter p xs == Z:filter p xs","(Z:[])++filter p xs == Z:filter p xs","(Z:[])++filter p xs == Z:filter p xs","(Z:[])++(xs++ys) == Z:(xs++ys)","(Z:[])++(xs++ys) == Z:(xs++ys)","(Z:[])++(xs++ys) == Z:(xs++ys)","(Z:[])++(xs++ys) == Z:(xs++ys)","(Z:[])++(xs++ys) == Z:(xs++ys)","(Z:[])++(xs++ys) == Z:(xs++ys)","(Z:[])++(x:xs) == Z:(x:xs)","(Z:[])++(x:xs) == Z:(x:xs)","(Z:[])++(x:xs) == Z:(x:xs)","(Z:[])++(x:xs) == Z:(x:xs)","(Z:[])++(x:xs) == Z:(x:xs)","(Z:[])++(x:xs) == Z:(x:xs)","(Z:[])++(x:xs) == Z:(x:xs)","(Z:[])++(x:xs) == Z:(x:xs)","(Z:[])++(x:xs) == Z:(x:xs)","(Z:[])++take x xs == Z:take x xs","(Z:[])++take x xs == Z:take x xs","(Z:[])++take x xs == Z:take x xs","(Z:[])++take x xs == Z:take x xs","(Z:[])++take x xs == Z:take x xs","(Z:[])++take x xs == Z:take x xs","(Z:[])++take x xs == Z:take x xs","(Z:[])++take x xs == Z:take x xs","(Z:[])++take x xs == Z:take x xs","(Z:[])++drop x xs == Z:drop x xs","(Z:[])++drop x xs == Z:drop x xs","(Z:[])++drop x xs == Z:drop x xs","(Z:[])++drop x xs == Z:drop x xs","(Z:[])++drop x xs == Z:drop x xs","(Z:[])++drop x xs == Z:drop x xs","(Z:[])++drop x xs == Z:drop x xs","(Z:[])++drop x xs == Z:drop x xs","(Z:[])++drop x xs == Z:drop x xs","rev xs++(Z:[]) == rev (Z:xs)","rev xs++(Z:[]) == rev (Z:xs)","rev xs++(Z:[]) == rev (Z:xs)","take (S x) (Z:[]) == Z:[]","take (S x) (Z:[]) == Z:[]","take (S x) (Z:[]) == Z:[]","take (x+x) (Z:[]) == take x (Z:[])","take (x+x) (Z:[]) == take x (Z:[])","take (x+x) (Z:[]) == take x (Z:[])","drop (S x) (Z:[]) == []","drop (S x) (Z:[]) == []","drop (S x) (Z:[]) == []","drop (x+x) (Z:[]) == drop x (x:[])","drop (x+x) (Z:[]) == drop x (x:[])","drop (x+x) (Z:[]) == drop x (x:[])","count (len xs) (Z:[]) == S Z-len xs","count (len xs) (Z:[]) == S Z-len xs","count (len xs) (Z:[]) == S Z-len xs","count (S x) (Z:[]) == Z","count (S x) (Z:[]) == Z","count (S x) (Z:[]) == Z","count (x+x) (Z:[]) == S y-(x+y)","count (x+x) (Z:[]) == S y-(y+x)","count (x+x) (Z:[]) == S y-(y+x)","(x:[])++(x:[]) == x:(x:[])","(x:[])++(x:[]) == x:(x:[])","(x:[])++(x:[]) == x:(x:[])"]}}],[347.506864,{"FailedProof":{"prop_name":"count Z ys+count Z xs == count Z (xs++ys)"}}],[348.540128,{"FailedProof":{"prop_name":"count Z xs+count Z xs == count Z (xs++xs)"}}],[348.54021,{"Discard":{"discarded":["count Z xs+S Z == S (count Z xs)","count Z xs+count Z xs == count Z (xs++xs)","count Z xs+S Z == S (count Z xs)","count Z xs+count Z xs == count Z (xs++xs)","count Z xs+S Z == S (count Z xs)","count Z xs-count Z xs == Z","count Z xs-count Z xs == Z","count Z xs-count Z xs == Z","take (S Z) (x:[]) == x:[]","take (S Z) (x:[]) == x:[]","take (S Z) (x:[]) == x:[]","take (S Z) (Z:xs) == Z:[]","take (S Z) (Z:xs) == Z:[]","take (S Z) (Z:xs) == Z:[]","drop (S Z) (x:[]) == []","drop (S Z) (x:[]) == []","drop (S Z) (x:[]) == []","drop (S Z) (Z:xs) == xs","drop (S Z) (Z:xs) == xs","drop (S Z) (Z:xs) == xs","count (S Z) (Z:xs) == count (S Z) xs","count (S Z) (Z:xs) == count (S Z) xs","count (S Z) (Z:xs) == count (S Z) xs","S Z+count Z xs == S (count Z xs)","S Z+count Z xs == S (count Z xs)","S Z+count Z xs == S (count Z xs)","(Z:[])++rev xs == Z:rev xs","(Z:[])++rev xs == Z:rev xs","(Z:[])++rev xs == Z:rev xs","(Z:[])++(xs++xs) == Z:(xs++xs)","(Z:[])++(xs++xs) == Z:(xs++xs)","(Z:[])++(xs++xs) == Z:(xs++xs)","[]++(Z:[]) == Z:[]","take Z (Z:[]) == []","drop Z (Z:[]) == Z:[]","count Z (Z:[]) == S Z","S Z+S Z == S (S Z)","S Z-S Z == Z","(Z:[])++[] == Z:[]","(x:[])++(Z:[]) == x:(Z:[])","(x:[])++(Z:[]) == x:(Z:[])","(x:[])++(Z:[]) == x:(Z:[])","count (count Z xs) (Z:[]) == S Z-count Z xs","count (count Z xs) (Z:[]) == S Z-count Z xs","(Z:[])++(x:[]) == Z:(x:[])","(Z:[])++(x:[]) == Z:(x:[])","(Z:[])++(x:[]) == Z:(x:[])","(Z:[])++(Z:xs) == Z:(Z:xs)","(Z:[])++(Z:xs) == Z:(Z:xs)","(Z:[])++(Z:xs) == Z:(Z:xs)","take (S Z) (Z:[]) == Z:[]","drop (S Z) (Z:[]) == []","count (S Z) (Z:[]) == Z","(Z:[])++(Z:[]) == Z:(Z:[])"]}}],[348.600059,{"PlainProof":{"prop_name":"count (count Z xs) (Z:[]) == S Z-count Z xs","lemmas":[]}}],[348.600378,{"Discard":{"discarded":["drop x (drop y xs) == drop y (drop x xs)","drop (x+y) xs == drop x (drop y xs)"]}}],[352.720312,{"FailedProof":{"prop_name":"take y (take x xs) == take x (take y xs)"}}],[354.789556,{"FailedProof":{"prop_name":"filter p (filter p xs) == filter p xs"}}],[354.789618,{"Discard":{"discarded":["x-(x-y) == y-(y-x)"]}}],[356.870574,{"FailedProof":{"prop_name":"filter p (rev xs) == rev (filter p xs)"}}],[357.845888,{"InductiveProof":{"prop_name":"rev (rev xs) == xs","lemmas":[]}}],[362.094065,{"FailedProof":{"prop_name":"filter p xs++filter p ys == filter p (xs++ys)"}}],[365.241328,{"FailedProof":{"prop_name":"take (count x xs) (xs++ys) == take (count x xs) xs"}}],[365.241527,{"Discard":{"discarded":["take (x+y) (take x xs) == take x xs"]}}],[369.328056,{"FailedProof":{"prop_name":"take (x-y) (take x xs) == take (x-y) xs"}}],[372.501842,{"FailedProof":{"prop_name":"take (x-y) (drop y xs) == drop y (take x xs)"}}],[376.691542,{"FailedProof":{"prop_name":"count x xs+count x ys == count x (xs++ys)"}}],[378.710326,{"FailedProof":{"prop_name":"count y (x:[]) == count x (y:[])"}}],[380.79475,{"FailedProof":{"prop_name":"count x xs-len xs == Z"}}],[382.839881,{"FailedProof":{"prop_name":"take (len xs) (filter p xs) == filter p xs"}}],[384.906324,{"FailedProof":{"prop_name":"drop (len xs) (filter p xs) == []"}}],[386.927235,{"FailedProof":{"prop_name":"count (S x) (x:xs) == count (S x) xs"}}],[388.962385,{"FailedProof":{"prop_name":"count (x+y) (x:[]) == S x-(x+y)"}}],[390.984505,{"FailedProof":{"prop_name":"count (y-x) (y:[]) == count (x-y) (x:[])"}}],[393.021574,{"FailedProof":{"prop_name":"count (x+x) (y:[]) == count (y-x) (x:[])"}}],[395.040671,{"FailedProof":{"prop_name":"count (x+x) (Z:xs) == count (x+x) (x:xs)"}}],[395.124827,{"PlainProof":{"prop_name":"count (count x xs) (Z:[]) == S Z-count x xs","lemmas":[]}}],[401.420597,{"FailedProof":{"prop_name":"drop (y+z) (y:xs) == drop (y+z) (x:xs)"}}],[407.741076,{"FailedProof":{"prop_name":"drop (y+z) (z:xs) == drop (y+z) (x:xs)"}}],[410.861614,{"FailedProof":{"prop_name":"count x ys+count x xs == count x (xs++ys)"}}],[412.940685,{"FailedProof":{"prop_name":"filter p xs++filter p xs == filter p (xs++xs)"}}],[415.010739,{"FailedProof":{"prop_name":"take (count x xs) (xs++xs) == take (count x xs) xs"}}],[417.099141,{"FailedProof":{"prop_name":"count x xs+count x xs == count x (xs++xs)"}}],[421.590156,{"FailedProof":{"prop_name":"take (y+z) (x:[]) == x:[]"}}],[426.067965,{"FailedProof":{"prop_name":"drop (y+z) (x:[]) == []"}}],[431.345026,{"FailedProof":{"prop_name":"drop (y+z) (Z:xs) == drop (y+z) (x:xs)"}}],[435.549469,{"FailedProof":{"prop_name":"count (y+z) (Z:xs) == count (y+z) xs"}}],[439.656984,{"FailedProof":{"prop_name":"count Z zs-(x+y) == count y zs-(x+y)"}}],[441.841555,{"FailedProof":{"prop_name":"take (y+z) (y:[]) == y:[]"}}],[444.161912,{"FailedProof":{"prop_name":"take (y+z) (z:[]) == z:[]"}}],[446.347127,{"FailedProof":{"prop_name":"drop (y+z) (y:[]) == []"}}],[448.621765,{"FailedProof":{"prop_name":"drop (y+z) (z:[]) == []"}}],[450.662954,{"FailedProof":{"prop_name":"count (x+y) (y:[]) == S y-(x+y)"}}],[454.71616,{"FailedProof":{"prop_name":"count (x+z) (z:[]) == S y-(x+y)"}}],[458.799519,{"FailedProof":{"prop_name":"count (y+z) (y:[]) == S x-(x+z)"}}],[461.909935,{"FailedProof":{"prop_name":"count (y+z) (z:[]) == S x-(x+y)"}}],[464.045147,{"FailedProof":{"prop_name":"take (count Z xs) (xs++ys) == take (count Z xs) xs"}}],[465.050208,{"FailedProof":{"prop_name":"count (S x) (x:[]) == Z"}}],[467.140687,{"FailedProof":{"prop_name":"count (x+x) (x:[]) == S y-(x+y)"}}],[469.216201,{"FailedProof":{"prop_name":"count (y+y) (y:[]) == S x-(x+y)"}}],[470.26388,{"FailedProof":{"prop_name":"take (count Z xs) (xs++xs) == take (count Z xs) xs"}}],[471.298755,{"FailedProof":{"prop_name":"count Z xs-len xs == Z"}}],[473.613817,{"FailedProof":{"prop_name":"take (y+z) (Z:[]) == Z:[]"}}],[475.883051,{"FailedProof":{"prop_name":"drop (y+z) (Z:[]) == []"}}],[478.030425,{"FailedProof":{"prop_name":"count Z xs+count Z ys == count Z (xs++ys)"}}],[480.159112,{"FailedProof":{"prop_name":"count Z ys+count Z xs == count Z (xs++ys)"}}],[481.205315,{"FailedProof":{"prop_name":"count Z xs+count Z xs == count Z (xs++xs)"}}],[485.304323,{"FailedProof":{"prop_name":"take y (take x xs) == take x (take y xs)"}}],[487.377883,{"FailedProof":{"prop_name":"filter p (filter p xs) == filter p xs"}}],[489.463328,{"FailedProof":{"prop_name":"filter p (rev xs) == rev (filter p xs)"}}],[493.634714,{"FailedProof":{"prop_name":"filter p xs++filter p ys == filter p (xs++ys)"}}],[497.844211,{"FailedProof":{"prop_name":"take (count x xs) (xs++ys) == take (count x xs) xs"}}],[500.91884,{"FailedProof":{"prop_name":"take (x-y) (take x xs) == take (x-y) xs"}}],[505.080546,{"FailedProof":{"prop_name":"take (x-y) (drop y xs) == drop y (take x xs)"}}],[508.256827,{"FailedProof":{"prop_name":"count x xs+count x ys == count x (xs++ys)"}}],[510.290962,{"FailedProof":{"prop_name":"count y (x:[]) == count x (y:[])"}}],[512.36178,{"FailedProof":{"prop_name":"count x xs-len xs == Z"}}],[514.431156,{"FailedProof":{"prop_name":"take (len xs) (filter p xs) == filter p xs"}}],[516.474439,{"FailedProof":{"prop_name":"drop (len xs) (filter p xs) == []"}}],[518.511587,{"FailedProof":{"prop_name":"count (S x) (x:xs) == count (S x) xs"}}],[520.530689,{"FailedProof":{"prop_name":"count (x+y) (x:[]) == S x-(x+y)"}}],[522.57405,{"FailedProof":{"prop_name":"count (y-x) (y:[]) == count (x-y) (x:[])"}}],[524.594233,{"FailedProof":{"prop_name":"count (x+x) (y:[]) == count (y-x) (x:[])"}}],[526.637903,{"FailedProof":{"prop_name":"count (x+x) (Z:xs) == count (x+x) (x:xs)"}}],[532.956794,{"FailedProof":{"prop_name":"drop (y+z) (y:xs) == drop (y+z) (x:xs)"}}],[539.272002,{"FailedProof":{"prop_name":"drop (y+z) (z:xs) == drop (y+z) (x:xs)"}}],[542.429782,{"FailedProof":{"prop_name":"count x ys+count x xs == count x (xs++ys)"}}],[544.507889,{"FailedProof":{"prop_name":"filter p xs++filter p xs == filter p (xs++xs)"}}],[546.580189,{"FailedProof":{"prop_name":"take (count x xs) (xs++xs) == take (count x xs) xs"}}],[548.672117,{"FailedProof":{"prop_name":"count x xs+count x xs == count x (xs++xs)"}}],[553.167048,{"FailedProof":{"prop_name":"take (y+z) (x:[]) == x:[]"}}],[557.628146,{"FailedProof":{"prop_name":"drop (y+z) (x:[]) == []"}}],[562.919923,{"FailedProof":{"prop_name":"drop (y+z) (Z:xs) == drop (y+z) (x:xs)"}}],[567.149617,{"FailedProof":{"prop_name":"count (y+z) (Z:xs) == count (y+z) xs"}}],[571.264207,{"FailedProof":{"prop_name":"count Z zs-(x+y) == count y zs-(x+y)"}}],[573.446163,{"FailedProof":{"prop_name":"take (y+z) (y:[]) == y:[]"}}],[575.89248,{"FailedProof":{"prop_name":"take (y+z) (z:[]) == z:[]"}}],[578.080981,{"FailedProof":{"prop_name":"drop (y+z) (y:[]) == []"}}],[580.354455,{"FailedProof":{"prop_name":"drop (y+z) (z:[]) == []"}}],[582.391873,{"FailedProof":{"prop_name":"count (x+y) (y:[]) == S y-(x+y)"}}],[586.488146,{"FailedProof":{"prop_name":"count (x+z) (z:[]) == S y-(x+y)"}}],[590.615027,{"FailedProof":{"prop_name":"count (y+z) (y:[]) == S x-(x+z)"}}],[593.699541,{"FailedProof":{"prop_name":"count (y+z) (z:[]) == S x-(x+y)"}}],[595.83193,{"FailedProof":{"prop_name":"take (count Z xs) (xs++ys) == take (count Z xs) xs"}}],[596.836937,{"FailedProof":{"prop_name":"count (S x) (x:[]) == Z"}}],[598.930139,{"FailedProof":{"prop_name":"count (x+x) (x:[]) == S y-(x+y)"}}],[600.999854,{"FailedProof":{"prop_name":"count (y+y) (y:[]) == S x-(x+y)"}}],[602.045821,{"FailedProof":{"prop_name":"take (count Z xs) (xs++xs) == take (count Z xs) xs"}}],[603.080079,{"FailedProof":{"prop_name":"count Z xs-len xs == Z"}}],[605.395246,{"FailedProof":{"prop_name":"take (y+z) (Z:[]) == Z:[]"}}],[607.656935,{"FailedProof":{"prop_name":"drop (y+z) (Z:[]) == []"}}],[609.802902,{"FailedProof":{"prop_name":"count Z xs+count Z ys == count Z (xs++ys)"}}],[611.929985,{"FailedProof":{"prop_name":"count Z ys+count Z xs == count Z (xs++ys)"}}],[612.976297,{"FailedProof":{"prop_name":"count Z xs+count Z xs == count Z (xs++xs)"}}],[612.976303,{"StartingUserLemmas":[]}],[613.859601,{"PlainProof":{"prop_name":"prop_54","lemmas":[]}}],[613.912498,{"PlainProof":{"prop_name":"prop_10","lemmas":[]}}],[613.96856,{"PlainProof":{"prop_name":"prop_09","lemmas":[]}}],[614.023773,{"PlainProof":{"prop_name":"prop_08","lemmas":[]}}],[614.079362,{"PlainProof":{"prop_name":"prop_07","lemmas":[]}}],[614.106709,{"PlainProof":{"prop_name":"prop_79","lemmas":[]}}],[614.144902,{"PlainProof":{"prop_name":"prop_06","lemmas":[]}}],[616.163159,{"FailedProof":{"prop_name":"prop_65"}}],[617.23204,{"InductiveProof":{"prop_name":"prop_18","lemmas":[]}}],[619.242316,{"InductiveProof":{"prop_name":"prop_70","lemmas":[]}}],[620.305215,{"InductiveProof":{"prop_name":"prop_69","lemmas":[]}}],[621.399528,{"InductiveProof":{"prop_name":"prop_21","lemmas":[]}}],[621.512828,{"PlainProof":{"prop_name":"prop_76","lemmas":[]}}],[621.985748,{"InductiveProof":{"prop_name":"prop_17","lemmas":[]}}],[625.560322,{"FailedProof":{"prop_name":"prop_75"}}],[628.729499,{"PlainProof":{"prop_name":"prop_38","lemmas":[]}}],[628.786048,{"PlainProof":{"prop_name":"prop_05","lemmas":[]}}],[628.841953,{"PlainProof":{"prop_name":"prop_04","lemmas":[]}}],[629.143493,{"FailedProof":{"prop_name":"prop_39"}}],[632.933583,{"FailedProof":{"prop_name":"prop_03"}}],[636.56132,{"FailedProof":{"prop_name":"prop_02"}}],[637.183017,{"PlainProof":{"prop_name":"prop_13","lemmas":[]}}],[637.241104,{"PlainProof":{"prop_name":"prop_11","lemmas":[]}}],[637.717345,{"InductiveProof":{"prop_name":"prop_56","lemmas":[]}}],[638.250671,{"InductiveProof":{"prop_name":"prop_35","lemmas":[]}}],[640.32989,{"FailedProof":{"prop_name":"prop_37"}}],[641.522588,{"InductiveProof":{"prop_name":"prop_28","lemmas":[]}}],[644.900783,{"FailedProof":{"prop_name":"prop_27"}}],[648.989517,{"FailedProof":{"prop_name":"prop_26"}}],[652.165764,{"FailedProof":{"prop_name":"prop_14"}}],[656.192699,{"FailedProof":{"prop_name":"prop_71"}}],[658.249983,{"FailedProof":{"prop_name":"prop_30"}}],[660.301758,{"FailedProof":{"prop_name":"prop_29"}}],[662.378454,{"FailedProof":{"prop_name":"prop_68"}}],[664.428418,{"FailedProof":{"prop_name":"prop_66"}}],[666.722115,{"PlainProof":{"prop_name":"prop_19","lemmas":[]}}],[667.596057,{"InductiveProof":{"prop_name":"prop_55","lemmas":[]}}],[669.67641,{"FailedProof":{"prop_name":"prop_15"}}],[672.783616,{"InductiveProof":{"prop_name":"prop_12","lemmas":[]}}],[673.912939,{"InductiveProof":{"prop_name":"prop_25","lemmas":[]}}],[675.994678,{"InductiveProof":{"prop_name":"prop_24","lemmas":[]}}],[677.096867,{"InductiveProof":{"prop_name":"prop_23","lemmas":[]}}],[681.134025,{"FailedProof":{"prop_name":"prop_22"}}],[682.248001,{"InductiveProof":{"prop_name":"prop_34","lemmas":[]}}],[684.333857,{"InductiveProof":{"prop_name":"prop_33","lemmas":[]}}],[685.437316,{"InductiveProof":{"prop_name":"prop_32","lemmas":[]}}],[689.440821,{"FailedProof":{"prop_name":"prop_31"}}],[690.480485,{"FailedProof":{"prop_name":"prop_47"}}],[691.582869,{"PlainProof":{"prop_name":"prop_52","lemmas":[]}}],[692.542841,{"FailedProof":{"prop_name":"prop_73"}}],[694.619773,{"FailedProof":{"prop_name":"prop_53"}}],[695.660202,{"FailedProof":{"prop_name":"prop_20"}}],[697.740176,{"InductiveProof":{"prop_name":"prop_81","lemmas":[]}}],[701.012734,{"InductiveProof":{"prop_name":"prop_80","lemmas":[]}}],[701.013391,{"PlainProof":{"prop_name":"prop_74","lemmas":[]}}],[701.072706,{"PlainProof":{"prop_name":"prop_72","lemmas":[]}}],[704.322943,{"PlainProof":{"prop_name":"prop_42","lemmas":[]}}],[705.273962,{"FailedProof":{"prop_name":"prop_57"}}],[707.515085,{"PlainProof":{"prop_name":"prop_40","lemmas":[]}}],[707.572549,{"PlainProof":{"prop_name":"prop_01","lemmas":[]}}],[708.493541,{"InductiveProof":{"prop_name":"prop_41","lemmas":[]}}],[710.574207,{"FailedProof":{"prop_name":"prop_43"}}],[710.634248,{"InductiveProof":{"prop_name":"prop_36","lemmas":[]}}],[712.704052,{"FailedProof":{"prop_name":"prop_85"}}],[715.93328,{"InductiveProof":{"prop_name":"prop_84","lemmas":[]}}],[720.074493,{"FailedProof":{"prop_name":"prop_83"}}],[723.183379,{"FailedProof":{"prop_name":"prop_82"}}],[726.335154,{"PlainProof":{"prop_name":"prop_46","lemmas":[]}}],[726.394623,{"PlainProof":{"prop_name":"prop_45","lemmas":[]}}],[727.359924,{"FailedProof":{"prop_name":"prop_58"}}],[728.432561,{"InductiveProof":{"prop_name":"prop_44","lemmas":[]}}],[729.475824,{"FailedProof":{"prop_name":"prop_67"}}],[730.510215,{"FailedProof":{"prop_name":"prop_50"}}],[732.54869,{"FailedProof":{"prop_name":"prop_51"}}],[734.600002,{"FailedProof":{"prop_name":"prop_49"}}],[735.614518,{"FailedProof":{"prop_name":"prop_48"}}],[737.731161,{"FailedProof":{"prop_name":"prop_64"}}],[739.780281,{"FailedProof":{"prop_name":"prop_63"}}],[741.872757,{"FailedProof":{"prop_name":"prop_62"}}],[743.933361,{"FailedProof":{"prop_name":"prop_61"}}],[746.00757,{"FailedProof":{"prop_name":"prop_60"}}],[747.101931,{"PlainProof":{"prop_name":"prop_16","lemmas":[]}}],[748.129114,{"FailedProof":{"prop_name":"prop_59"}}],[749.172206,{"FailedProof":{"prop_name":"prop_78"}}],[751.219685,{"FailedProof":{"prop_name":"prop_77"}}],[751.219768,{"Finished":{"qs_proved":["y+x == x+y","x-x == Z","xs++[] == xs","count x (ys++xs) == count x (xs++ys)","y+(x+z) == x+(y+z)","(xs++ys)++zs == xs++(ys++zs)","(x-y)-z == x-(y+z)","len (ys++xs) == len (xs++ys)","take x (take x xs) == take x xs","drop x (take x xs) == []","count x (x:xs) == S (count x xs)","count x (rev xs) == count x xs","y+(x-y) == x+(y-x)","(x+y)-x == y","len xs-x == len (drop x xs)","len (rev xs) == len xs","take (len xs) xs == xs","drop (x+y) (y:xs) == drop (x+y) (x:xs)","take x xs++drop x xs == xs","(x+z)-S z == (x+y)-S y","rev xs++rev ys == rev (ys++xs)","take (len xs) (xs++ys) == xs","drop (len xs) (xs++ys) == ys","S y-(y-x) == S x-(x-y)","(x+x)-(y+y) == (x-y)+(x-y)","take (x+x) (y:[]) == take x (y:[])","take (S Z) (xs++xs) == take (S Z) xs","S Z-(x+x) == S y-(x+y)","count (x+y) (Z:[]) == S Z-(x+y)","drop (x+z) (drop y xs) == drop (x+y) (drop z xs)","drop (S y) (drop x xs) == drop (S x) (drop y xs)","drop (x+y) (Z:xs) == drop (x+y) (x:xs)","count Z (x:[]) == S y-(x+y)","rev (rev xs) == xs"],"unproved":["prop_65","prop_75","prop_39","prop_03","prop_02","prop_37","prop_27","prop_26","prop_14","prop_71","prop_30","prop_29","prop_68","prop_66","prop_15","prop_22","prop_31","prop_47","prop_73","prop_53","prop_20","prop_57","prop_43","prop_85","prop_83","prop_82","prop_58","prop_67","prop_50","prop_51","prop_49","prop_48","prop_64","prop_63","prop_62","prop_61","prop_60","prop_59","prop_78","prop_77"],"proved":["prop_18","prop_70","prop_69","prop_21","prop_17","prop_56","prop_35","prop_28","prop_55","prop_12","prop_25","prop_24","prop_23","prop_34","prop_33","prop_32","prop_81","prop_80","prop_41","prop_36","prop_84","prop_44","prop_54","prop_10","prop_09","prop_08","prop_07","prop_79","prop_06","prop_76","prop_38","prop_05","prop_04","prop_13","prop_11","prop_19","prop_52","prop_74","prop_72","prop_42","prop_40","prop_01","prop_46","prop_45","prop_16"],"qs_unproved":["take x (take y xs) == take y (take x xs)","filter p (filter p xs) == filter p xs","filter p (rev xs) == rev (filter p xs)","filter p xs++filter p ys == filter p (xs++ys)","take (count x xs) (xs++ys) == take (count x xs) xs","take (x-y) (take x xs) == take (x-y) xs","take (x-y) (drop y xs) == drop y (take x xs)","count x xs+count x ys == count x (xs++ys)","count x (y:[]) == count y (x:[])","count x xs-len xs == Z","take (len xs) (filter p xs) == filter p xs","drop (len xs) (filter p xs) == []","count (S x) (x:xs) == count (S x) xs","count (x+y) (x:[]) == S x-(x+y)","count (x-y) (x:[]) == count (y-x) (y:[])","count (x+x) (y:[]) == count (y-x) (x:[])","count (x+x) (Z:xs) == count (x+x) (x:xs)","drop (x+y) (x:xs) == drop (x+y) (z:xs)","drop (x+y) (y:xs) == drop (x+y) (z:xs)","count x xs+count x ys == count x (ys++xs)","filter p xs++filter p xs == filter p (xs++xs)","take (count x xs) (xs++xs) == take (count x xs) xs","count x xs+count x xs == count x (xs++xs)","take (x+y) (z:[]) == z:[]","drop (x+y) (z:[]) == []","drop (x+y) (Z:xs) == drop (x+y) (z:xs)","count (x+y) (Z:xs) == count (x+y) xs","count Z xs-(x+y) == count y xs-(x+y)","take (x+y) (x:[]) == x:[]","take (x+y) (y:[]) == y:[]","drop (x+y) (x:[]) == []","drop (x+y) (y:[]) == []","count (x+y) (y:[]) == S y-(x+y)","count (x+y) (y:[]) == S z-(x+z)","count (x+y) (x:[]) == S z-(z+y)","count (x+y) (y:[]) == S z-(z+x)","take (count Z xs) (xs++ys) == take (count Z xs) xs","count (S x) (x:[]) == Z","count (x+x) (x:[]) == S y-(x+y)","count (x+x) (x:[]) == S y-(y+x)","take (count Z xs) (xs++xs) == take (count Z xs) xs","count Z xs-len xs == Z","take (x+y) (Z:[]) == Z:[]","drop (x+y) (Z:[]) == []","count Z xs+count Z ys == count Z (xs++ys)","count Z xs+count Z ys == count Z (ys++xs)","count Z xs+count Z xs == count Z (xs++xs)"]}}]]