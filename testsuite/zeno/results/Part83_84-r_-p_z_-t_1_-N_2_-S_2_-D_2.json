[[5.0e-6,{"Started":[]}],[0.831024,{"FileProcessed":[]}],[3.739684,{"QuickSpecDone":{"eqs":1220,"classes":4858}}],[6.904565,{"InductiveProof":{"prop_name":"zip ys [] == zip xs []","lemmas":[]}}],[6.989972,{"InductiveProof":{"prop_name":"xs++[] == xs","lemmas":[]}}],[7.094807,{"PlainProof":{"prop_name":"drop x [] == []","lemmas":[]}}],[7.167388,{"PlainProof":{"prop_name":"take x [] == []","lemmas":[]}}],[7.214331,{"PlainProof":{"prop_name":"zip [] xs == zip xs []","lemmas":[]}}],[7.258939,{"PlainProof":{"prop_name":"[]++xs == xs","lemmas":[]}}],[7.340284,{"PlainProof":{"prop_name":"drop Z xs == xs","lemmas":[]}}],[7.389216,{"PlainProof":{"prop_name":"take Z xs == []","lemmas":[]}}],[7.443512,{"PlainProof":{"prop_name":"len [] == Z","lemmas":[]}}],[13.445538,{"FailedProof":{"prop_name":"drop y (drop x xs) == drop x (drop y xs)"}}],[19.523341,{"FailedProof":{"prop_name":"take y (take x xs) == take x (take y xs)"}}],[24.592663,{"InductiveProof":{"prop_name":"zip (take x xs) ys == zip xs (take x ys)","lemmas":[]}}],[27.840755,{"InductiveProof":{"prop_name":"(xs++ys)++zs == xs++(ys++zs)","lemmas":[]}}],[27.899617,{"PlainProof":{"prop_name":"(x:xs)++ys == x:(xs++ys)","lemmas":[]}}],[30.264242,{"PlainProof":{"prop_name":"len (y:xs) == len (x:xs)","lemmas":[]}}],[31.107931,{"InductiveProof":{"prop_name":"len (ys++xs) == len (xs++ys)","lemmas":[]}}],[33.18225,{"InductiveProof":{"prop_name":"zip xs (xs++ys) == zip xs xs","lemmas":[]}}],[35.331333,{"InductiveProof":{"prop_name":"drop x (take x xs) == []","lemmas":[]}}],[38.385188,{"InductiveProof":{"prop_name":"take x (take x xs) == take x xs","lemmas":[]}}],[39.559695,{"InductiveProof":{"prop_name":"zip (xs++ys) xs == zip xs xs","lemmas":[]}}],[39.646272,{"PlainProof":{"prop_name":"S (len xs) == len (x:xs)","lemmas":[]}}],[40.649057,{"InductiveProof":{"prop_name":"drop (len xs) xs == []","lemmas":[]}}],[41.668903,{"InductiveProof":{"prop_name":"take (len xs) xs == xs","lemmas":[]}}],[46.817653,{"FailedProof":{"prop_name":"zip (xs++ys) (drop x xs) == zip xs (drop x xs)"}}],[51.07892,{"InductiveProof":{"prop_name":"zip (xs++ys) (take x xs) == zip xs (take x xs)","lemmas":[]}}],[56.168061,{"FailedProof":{"prop_name":"zip (drop x xs) (xs++ys) == zip (drop x xs) xs"}}],[60.575462,{"PlainProof":{"prop_name":"drop (S x) (y:xs) == drop x xs","lemmas":[]}}],[61.325911,{"InductiveProof":{"prop_name":"zip (take x xs) (xs++ys) == zip xs (take x xs)","lemmas":[]}}],[66.476889,{"PlainProof":{"prop_name":"take (S x) (y:xs) == y:take x xs","lemmas":[]}}],[67.413696,{"FailedProof":{"prop_name":"drop (S y) (drop x xs) == drop (S x) (drop y xs)"}}],[69.442299,{"InductiveProof":{"prop_name":"drop x (Z:xs) == drop x (x:xs)","lemmas":[]}}],[71.541661,{"InductiveProof":{"prop_name":"take x xs++drop x xs == xs","lemmas":[]}}],[73.647798,{"InductiveProof":{"prop_name":"drop (len xs) (xs++ys) == ys","lemmas":[]}}],[75.784146,{"InductiveProof":{"prop_name":"drop (len xs) (take x xs) == []","lemmas":[]}}],[78.876835,{"InductiveProof":{"prop_name":"drop (S x) (take x xs) == []","lemmas":[]}}],[79.991297,{"InductiveProof":{"prop_name":"take (len xs) (xs++ys) == xs","lemmas":[]}}],[80.093124,{"PlainProof":{"prop_name":"take (len xs) (drop x xs) == drop x xs","lemmas":[]}}],[80.146197,{"PlainProof":{"prop_name":"take (S x) (take x xs) == take x xs","lemmas":[]}}],[80.260492,{"PlainProof":{"prop_name":"zip (x:[]) (y:xs) == zip (x:xs) (y:[])","lemmas":[]}}],[80.268887,{"PlainProof":{"prop_name":"zip (x:ys) (y:[]) == zip (x:xs) (y:[])","lemmas":[]}}],[82.297801,{"InductiveProof":{"prop_name":"zip (xs++xs) (x:[]) == zip xs (x:[])","lemmas":[]}}],[82.456423,{"InductiveProof":{"prop_name":"zip (x:[]) (xs++xs) == zip (x:[]) xs","lemmas":[]}}],[82.497326,{"Discard":{"discarded":["zip xs [] == zip ys []","zip xs [] == zip ys []","xs++[] == xs","xs++[] == xs","xs++[] == xs","drop x [] == []","drop x [] == []","drop x [] == []","take x [] == []","take x [] == []","take x [] == []","zip [] xs == zip xs []","zip [] xs == zip ys []","zip [] xs == zip ys []","[]++xs == xs","[]++xs == xs","[]++xs == xs","drop Z xs == xs","drop Z xs == xs","drop Z xs == xs","take Z xs == []","take Z xs == []","take Z xs == []","len [] == Z","zip [] [] == zip xs []","[]++[] == []","drop Z [] == []","take Z [] == []","drop x (drop y xs) == drop y (drop x xs)","drop x (drop y xs) == drop y (drop x xs)","drop x (drop y xs) == drop y (drop x xs)","drop x (drop y xs) == drop y (drop x xs)","drop x (drop y xs) == drop y (drop x xs)","drop x (drop y xs) == drop y (drop x xs)","drop x (drop y xs) == drop y (drop x xs)","drop x (drop y xs) == drop y (drop x xs)","drop x (drop y xs) == drop y (drop x xs)","take x (take y xs) == take y (take x xs)","take x (take y xs) == take y (take x xs)","take x (take y xs) == take y (take x xs)","take x (take y xs) == take y (take x xs)","take x (take y xs) == take y (take x xs)","take x (take y xs) == take y (take x xs)","take x (take y xs) == take y (take x xs)","take x (take y xs) == take y (take x xs)","take x (take y xs) == take y (take x xs)","zip (take x xs) ys == zip xs (take x ys)","zip (take x xs) ys == zip xs (take x ys)","zip (take x xs) ys == zip xs (take x ys)","zip (take x xs) ys == zip xs (take x ys)","zip (take x xs) ys == zip xs (take x ys)","zip (take x xs) ys == zip xs (take x ys)","zip (take x xs) ys == zip xs (take x ys)","zip (take x xs) ys == zip xs (take x ys)","zip (take x xs) ys == zip xs (take x ys)","zip (take x xs) ys == zip xs (take x ys)","zip (take x xs) ys == zip xs (take x ys)","zip (take x xs) ys == zip xs (take x ys)","zip (take x xs) ys == zip xs (take x ys)","zip (take x xs) ys == zip xs (take x ys)","zip (take x xs) ys == zip xs (take x ys)","zip (take x xs) ys == zip xs (take x ys)","zip (take x xs) ys == zip xs (take x ys)","zip (take x xs) ys == zip xs (take x ys)","(xs++ys)++zs == xs++(ys++zs)","(xs++ys)++zs == xs++(ys++zs)","(xs++ys)++zs == xs++(ys++zs)","(xs++ys)++zs == xs++(ys++zs)","(xs++ys)++zs == xs++(ys++zs)","(xs++ys)++zs == xs++(ys++zs)","(x:xs)++ys == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","len (xs++ys) == len (ys++xs)","len (xs++ys) == len (ys++xs)","len (xs++ys) == len (ys++xs)","len (x:xs) == len (y:xs)","len (x:xs) == len (y:xs)","len (x:xs) == len (y:xs)","len (x:xs) == len (y:xs)","len (x:xs) == len (y:xs)","len (x:xs) == len (y:xs)","zip xs (xs++ys) == zip xs xs","zip xs (xs++ys) == zip xs xs","zip xs (xs++ys) == zip xs xs","zip xs (xs++ys) == zip xs xs","zip xs (xs++ys) == zip xs xs","zip xs (xs++ys) == zip xs xs","drop x (take x xs) == []","drop x (take x xs) == []","drop x (take x xs) == []","drop x (take x xs) == []","drop x (take x xs) == []","drop x (take x xs) == []","drop x (take x xs) == []","drop x (take x xs) == []","drop x (take x xs) == []","take x (take x xs) == take x xs","take x (take x xs) == take x xs","take x (take x xs) == take x xs","take x (take x xs) == take x xs","take x (take x xs) == take x xs","take x (take x xs) == take x xs","take x (take x xs) == take x xs","take x (take x xs) == take x xs","take x (take x xs) == take x xs","zip (xs++ys) xs == zip xs xs","zip (xs++ys) xs == zip xs xs","zip (xs++ys) xs == zip xs xs","zip (xs++ys) xs == zip xs xs","zip (xs++ys) xs == zip xs xs","zip (xs++ys) xs == zip xs xs","zip (take x xs) xs == zip xs (take x xs)","zip (take x xs) xs == zip xs (take x xs)","zip (take x xs) xs == zip xs (take x xs)","zip (take x xs) xs == zip xs (take x xs)","zip (take x xs) xs == zip xs (take x xs)","zip (take x xs) xs == zip xs (take x xs)","zip (take x xs) xs == zip xs (take x xs)","zip (take x xs) xs == zip xs (take x xs)","zip (take x xs) xs == zip xs (take x xs)","(xs++ys)++xs == xs++(ys++xs)","(xs++ys)++ys == xs++(ys++ys)","(xs++ys)++xs == xs++(ys++xs)","(xs++ys)++ys == xs++(ys++ys)","(xs++ys)++ys == xs++(ys++ys)","(xs++ys)++xs == xs++(ys++xs)","(xs++ys)++xs == xs++(ys++xs)","(xs++ys)++ys == xs++(ys++ys)","(xs++ys)++ys == xs++(ys++ys)","(xs++ys)++xs == xs++(ys++xs)","(xs++ys)++ys == xs++(ys++ys)","(xs++ys)++xs == xs++(ys++xs)","(x:xs)++xs == x:(xs++xs)","(x:xs)++xs == x:(xs++xs)","(x:xs)++xs == x:(xs++xs)","(x:xs)++xs == x:(xs++xs)","(x:xs)++xs == x:(xs++xs)","(x:xs)++xs == x:(xs++xs)","(x:xs)++xs == x:(xs++xs)","(x:xs)++xs == x:(xs++xs)","(x:xs)++xs == x:(xs++xs)","(xs++xs)++ys == xs++(xs++ys)","(xs++xs)++ys == xs++(xs++ys)","(xs++xs)++ys == xs++(xs++ys)","(xs++xs)++ys == xs++(xs++ys)","(xs++xs)++ys == xs++(xs++ys)","(xs++xs)++ys == xs++(xs++ys)","S (len xs) == len (x:xs)","S (len xs) == len (x:xs)","S (len xs) == len (x:xs)","zip xs (xs++xs) == zip xs xs","zip xs (xs++xs) == zip xs xs","zip xs (xs++xs) == zip xs xs","zip (xs++xs) xs == zip xs xs","zip (xs++xs) xs == zip xs xs","zip (xs++xs) xs == zip xs xs","(xs++xs)++xs == xs++(xs++xs)","(xs++xs)++xs == xs++(xs++xs)","(xs++xs)++xs == xs++(xs++xs)","drop (len xs) xs == []","drop (len xs) xs == []","drop (len xs) xs == []","take (len xs) xs == xs","take (len xs) xs == xs","take (len xs) xs == xs"]}}],[83.523983,{"InductiveProof":{"prop_name":"take (S Z) (xs++xs) == take (S Z) xs","lemmas":[]}}],[91.737357,{"FailedProof":{"prop_name":"zip (take y xs) (take x ys) == zip (take x xs) (take y ys)"}}],[91.737396,{"Discard":{"discarded":["zip (take x xs) (take y ys) == zip (take y xs) (take x ys)","zip (take x xs) (take y ys) == zip (take y xs) (take x ys)","zip (take x xs) (take y ys) == zip (take y xs) (take x ys)","zip (take x xs) (take y ys) == zip (take y xs) (take x ys)","zip (take x xs) (take y ys) == zip (take y xs) (take x ys)","zip (take x xs) (take y ys) == zip (take y xs) (take x ys)","zip (take x xs) (take y ys) == zip (take y xs) (take x ys)","zip (take x xs) (take y ys) == zip (take y xs) (take x ys)","zip (take x xs) (take y ys) == zip (take y xs) (take x ys)","zip (take x xs) (take y ys) == zip (take y xs) (take x ys)","zip (take x xs) (take y ys) == zip (take y xs) (take x ys)","zip (take x xs) (take y ys) == zip (take y xs) (take x ys)","zip (take x xs) (take y ys) == zip (take y xs) (take x ys)","zip (take x xs) (take y ys) == zip (take y xs) (take x ys)","zip (take x xs) (take y ys) == zip (take y xs) (take x ys)","zip (take x xs) (take y ys) == zip (take y xs) (take x ys)","zip (take x xs) (take y ys) == zip (take y xs) (take x ys)","zip (xs++ys) (drop x xs) == zip xs (drop x xs)","zip (xs++ys) (drop x xs) == zip xs (drop x xs)","zip (xs++ys) (drop x xs) == zip xs (drop x xs)","zip (xs++ys) (take x xs) == zip xs (take x xs)","zip (xs++ys) (take x xs) == zip xs (take x xs)","zip (xs++ys) (take x xs) == zip xs (take x xs)","zip (xs++ys) (drop x xs) == zip xs (drop x xs)","zip (xs++ys) (drop x xs) == zip xs (drop x xs)","zip (xs++ys) (drop x xs) == zip xs (drop x xs)","zip (xs++ys) (take x xs) == zip xs (take x xs)","zip (xs++ys) (take x xs) == zip xs (take x xs)","zip (xs++ys) (take x xs) == zip xs (take x xs)","zip (xs++ys) (drop x xs) == zip xs (drop x xs)","zip (xs++ys) (drop x xs) == zip xs (drop x xs)","zip (xs++ys) (drop x xs) == zip xs (drop x xs)","zip (xs++ys) (take x xs) == zip xs (take x xs)","zip (xs++ys) (take x xs) == zip xs (take x xs)","zip (xs++ys) (take x xs) == zip xs (take x xs)","zip (xs++ys) (drop x xs) == zip xs (drop x xs)","zip (xs++ys) (drop x xs) == zip xs (drop x xs)","zip (xs++ys) (drop x xs) == zip xs (drop x xs)","zip (xs++ys) (take x xs) == zip xs (take x xs)","zip (xs++ys) (take x xs) == zip xs (take x xs)","zip (xs++ys) (take x xs) == zip xs (take x xs)","zip (xs++ys) (drop x xs) == zip xs (drop x xs)","zip (xs++ys) (drop x xs) == zip xs (drop x xs)","zip (xs++ys) (drop x xs) == zip xs (drop x xs)","zip (xs++ys) (take x xs) == zip xs (take x xs)","zip (xs++ys) (take x xs) == zip xs (take x xs)","zip (xs++ys) (take x xs) == zip xs (take x xs)","zip (xs++ys) (drop x xs) == zip xs (drop x xs)","zip (xs++ys) (drop x xs) == zip xs (drop x xs)","zip (xs++ys) (drop x xs) == zip xs (drop x xs)","zip (xs++ys) (take x xs) == zip xs (take x xs)","zip (xs++ys) (take x xs) == zip xs (take x xs)","zip (xs++ys) (take x xs) == zip xs (take x xs)","zip (drop x xs) (xs++ys) == zip (drop x xs) xs","zip (drop x xs) (xs++ys) == zip (drop x xs) xs","zip (drop x xs) (xs++ys) == zip (drop x xs) xs","zip (drop x xs) (xs++ys) == zip (drop x xs) xs","zip (drop x xs) (xs++ys) == zip (drop x xs) xs","zip (drop x xs) (xs++ys) == zip (drop x xs) xs","zip (drop x xs) (xs++ys) == zip (drop x xs) xs","zip (drop x xs) (xs++ys) == zip (drop x xs) xs","zip (drop x xs) (xs++ys) == zip (drop x xs) xs","zip (drop x xs) (xs++ys) == zip (drop x xs) xs","zip (drop x xs) (xs++ys) == zip (drop x xs) xs","zip (drop x xs) (xs++ys) == zip (drop x xs) xs","zip (drop x xs) (xs++ys) == zip (drop x xs) xs","zip (drop x xs) (xs++ys) == zip (drop x xs) xs","zip (drop x xs) (xs++ys) == zip (drop x xs) xs","zip (drop x xs) (xs++ys) == zip (drop x xs) xs","zip (drop x xs) (xs++ys) == zip (drop x xs) xs","zip (drop x xs) (xs++ys) == zip (drop x xs) xs","zip (take x xs) (xs++ys) == zip xs (take x xs)","zip (take x xs) (xs++ys) == zip xs (take x xs)","zip (take x xs) (take x ys) == zip xs (take x ys)","zip (take x xs) (take x ys) == zip xs (take x ys)","zip (take x xs) (xs++ys) == zip xs (take x xs)","zip (take x xs) (xs++ys) == zip xs (take x xs)","zip (take x xs) (take x ys) == zip xs (take x ys)","zip (take x xs) (take x ys) == zip xs (take x ys)","zip (take x xs) (xs++ys) == zip xs (take x xs)","zip (take x xs) (xs++ys) == zip xs (take x xs)","zip (take x xs) (take x ys) == zip xs (take x ys)","zip (take x xs) (take x ys) == zip xs (take x ys)","zip (take x xs) (xs++ys) == zip xs (take x xs)","zip (take x xs) (xs++ys) == zip xs (take x xs)","zip (take x xs) (take x ys) == zip xs (take x ys)","zip (take x xs) (take x ys) == zip xs (take x ys)","zip (take x xs) (xs++ys) == zip xs (take x xs)","zip (take x xs) (xs++ys) == zip xs (take x xs)","zip (take x xs) (take y xs) == zip (take y xs) (take x xs)","zip (take x xs) (take x ys) == zip xs (take x ys)","zip (take x xs) (take x ys) == zip xs (take x ys)","zip (take x xs) (xs++ys) == zip xs (take x xs)","zip (take x xs) (xs++ys) == zip xs (take x xs)","zip (take x xs) (take y xs) == zip (take y xs) (take x xs)","zip (take x xs) (take x ys) == zip xs (take x ys)","zip (take x xs) (take x ys) == zip xs (take x ys)","zip (take x xs) (xs++ys) == zip xs (take x xs)","zip (take x xs) (xs++ys) == zip xs (take x xs)","zip (take x xs) (take y xs) == zip (take y xs) (take x xs)","zip (take x xs) (take y xs) == zip (take y xs) (take x xs)","zip (take x xs) (take x ys) == zip xs (take x ys)","zip (take x xs) (take x ys) == zip xs (take x ys)","zip (take x xs) (xs++ys) == zip xs (take x xs)","zip (take x xs) (xs++ys) == zip xs (take x xs)","zip (take x xs) (take y xs) == zip (take y xs) (take x xs)","zip (take x xs) (take y xs) == zip (take y xs) (take x xs)","zip (take x xs) (take x ys) == zip xs (take x ys)","zip (take x xs) (take x ys) == zip xs (take x ys)","zip (take x xs) (xs++ys) == zip xs (take x xs)","zip (take x xs) (xs++ys) == zip xs (take x xs)","zip (take x xs) (take y xs) == zip (take y xs) (take x xs)","zip (take x xs) (take y xs) == zip (take y xs) (take x xs)","zip (take x xs) (take x ys) == zip xs (take x ys)","zip (take x xs) (take x ys) == zip xs (take x ys)","drop (S x) (y:xs) == drop x xs","drop (S x) (y:xs) == drop x xs","drop (S x) (y:xs) == drop x xs","drop (S x) (y:xs) == drop x xs","drop (S x) (y:xs) == drop x xs","drop (S x) (y:xs) == drop x xs","drop (S x) (y:xs) == drop x xs","drop (S x) (y:xs) == drop x xs","drop (S x) (y:xs) == drop x xs","drop (S x) (y:xs) == drop x xs","drop (S x) (y:xs) == drop x xs","drop (S x) (y:xs) == drop x xs","drop (S x) (drop y xs) == drop (S y) (drop x xs)","drop (S x) (drop y xs) == drop (S y) (drop x xs)","drop (S x) (drop y xs) == drop (S y) (drop x xs)","drop (S x) (y:xs) == drop x xs","drop (S x) (y:xs) == drop x xs","drop (S x) (y:xs) == drop x xs","drop (S x) (y:xs) == drop x xs","drop (S x) (y:xs) == drop x xs","drop (S x) (y:xs) == drop x xs","drop (S x) (drop y xs) == drop (S y) (drop x xs)","drop (S x) (drop y xs) == drop (S y) (drop x xs)","drop (S x) (drop y xs) == drop (S y) (drop x xs)","drop (S x) (drop y xs) == drop (S y) (drop x xs)","drop (S x) (drop y xs) == drop (S y) (drop x xs)","drop (S x) (drop y xs) == drop (S y) (drop x xs)","take (S x) (y:xs) == y:take x xs","take (S x) (y:xs) == y:take x xs","take (S x) (y:xs) == y:take x xs","take (S x) (y:xs) == y:take x xs","take (S x) (y:xs) == y:take x xs","take (S x) (y:xs) == y:take x xs","take (S x) (y:xs) == y:take x xs","take (S x) (y:xs) == y:take x xs","take (S x) (y:xs) == y:take x xs","take (S x) (y:xs) == y:take x xs","take (S x) (y:xs) == y:take x xs","take (S x) (y:xs) == y:take x xs","take (S x) (y:xs) == y:take x xs","take (S x) (y:xs) == y:take x xs","take (S x) (y:xs) == y:take x xs","take (S x) (y:xs) == y:take x xs","take (S x) (y:xs) == y:take x xs","take (S x) (y:xs) == y:take x xs","drop x (Z:xs) == drop x (x:xs)","drop x (Z:xs) == drop x (x:xs)","drop x (Z:xs) == drop x (x:xs)","drop x (Z:xs) == drop x (x:xs)","drop x (Z:xs) == drop x (x:xs)","drop x (Z:xs) == drop x (x:xs)","drop x (Z:xs) == drop x (x:xs)","drop x (Z:xs) == drop x (x:xs)","drop x (Z:xs) == drop x (x:xs)","zip [] (xs++ys) == zip xs []","zip [] (xs++ys) == zip xs []","zip [] (xs++ys) == zip ys []","zip [] (xs++ys) == zip zs []","zip [] (xs++ys) == zip ys []","zip [] (xs++ys) == zip zs []","zip [] (x:xs) == zip xs []","zip [] (x:xs) == zip ys []","zip [] (x:xs) == zip ys []","zip [] (x:xs) == zip xs []","zip [] (x:xs) == zip ys []","zip [] (x:xs) == zip ys []","zip [] (x:xs) == zip xs []","zip [] (x:xs) == zip ys []","zip [] (x:xs) == zip ys []","zip [] (drop x xs) == zip xs []","zip [] (drop x xs) == zip ys []","zip [] (drop x xs) == zip ys []","zip [] (drop x xs) == zip xs []","zip [] (drop x xs) == zip ys []","zip [] (drop x xs) == zip ys []","zip [] (drop x xs) == zip xs []","zip [] (drop x xs) == zip ys []","zip [] (drop x xs) == zip ys []","zip [] (take x xs) == zip xs []","zip [] (take x xs) == zip ys []","zip [] (take x xs) == zip ys []","zip [] (take x xs) == zip xs []","zip [] (take x xs) == zip ys []","zip [] (take x xs) == zip ys []","zip [] (take x xs) == zip xs []","zip [] (take x xs) == zip ys []","zip [] (take x xs) == zip ys []","[]++(xs++ys) == xs++ys","[]++(xs++ys) == xs++ys","[]++(xs++ys) == xs++ys","[]++(xs++ys) == xs++ys","[]++(xs++ys) == xs++ys","[]++(xs++ys) == xs++ys","[]++(x:xs) == x:xs","[]++(x:xs) == x:xs","[]++(x:xs) == x:xs","[]++(x:xs) == x:xs","[]++(x:xs) == x:xs","[]++(x:xs) == x:xs","[]++(x:xs) == x:xs","[]++(x:xs) == x:xs","[]++(x:xs) == x:xs","[]++drop x xs == drop x xs","[]++drop x xs == drop x xs","[]++drop x xs == drop x xs","[]++drop x xs == drop x xs","[]++drop x xs == drop x xs","[]++drop x xs == drop x xs","[]++drop x xs == drop x xs","[]++drop x xs == drop x xs","[]++drop x xs == drop x xs","[]++take x xs == take x xs","[]++take x xs == take x xs","[]++take x xs == take x xs","[]++take x xs == take x xs","[]++take x xs == take x xs","[]++take x xs == take x xs","[]++take x xs == take x xs","[]++take x xs == take x xs","[]++take x xs == take x xs","drop Z (xs++ys) == xs++ys","drop Z (xs++ys) == xs++ys","drop Z (xs++ys) == xs++ys","drop Z (xs++ys) == xs++ys","drop Z (xs++ys) == xs++ys","drop Z (xs++ys) == xs++ys","drop Z (x:xs) == x:xs","drop Z (x:xs) == x:xs","drop Z (x:xs) == x:xs","drop Z (x:xs) == x:xs","drop Z (x:xs) == x:xs","drop Z (x:xs) == x:xs","drop Z (x:xs) == x:xs","drop Z (x:xs) == x:xs","drop Z (x:xs) == x:xs","drop Z (drop x xs) == drop x xs","drop Z (drop x xs) == drop x xs","drop Z (drop x xs) == drop x xs","drop Z (drop x xs) == drop x xs","drop Z (drop x xs) == drop x xs","drop Z (drop x xs) == drop x xs","drop Z (drop x xs) == drop x xs","drop Z (drop x xs) == drop x xs","drop Z (drop x xs) == drop x xs","drop Z (take x xs) == take x xs","drop Z (take x xs) == take x xs","drop Z (take x xs) == take x xs","drop Z (take x xs) == take x xs","drop Z (take x xs) == take x xs","drop Z (take x xs) == take x xs","drop Z (take x xs) == take x xs","drop Z (take x xs) == take x xs","drop Z (take x xs) == take x xs","take Z (xs++ys) == []","take Z (xs++ys) == []","take Z (xs++ys) == []","take Z (xs++ys) == []","take Z (xs++ys) == []","take Z (xs++ys) == []","take Z (x:xs) == []","take Z (x:xs) == []","take Z (x:xs) == []","take Z (x:xs) == []","take Z (x:xs) == []","take Z (x:xs) == []","take Z (x:xs) == []","take Z (x:xs) == []","take Z (x:xs) == []","take Z (drop x xs) == []","take Z (drop x xs) == []","take Z (drop x xs) == []","take Z (drop x xs) == []","take Z (drop x xs) == []","take Z (drop x xs) == []","take Z (drop x xs) == []","take Z (drop x xs) == []","take Z (drop x xs) == []","take Z (take x xs) == []","take Z (take x xs) == []","take Z (take x xs) == []","take Z (take x xs) == []","take Z (take x xs) == []","take Z (take x xs) == []","take Z (take x xs) == []","take Z (take x xs) == []","take Z (take x xs) == []","zip (xs++ys) [] == zip xs []","zip (xs++ys) [] == zip xs []","zip (xs++ys) [] == zip ys []","zip (xs++ys) [] == zip zs []","zip (xs++ys) [] == zip ys []","zip (xs++ys) [] == zip zs []","zip (x:xs) [] == zip xs []","zip (x:xs) [] == zip ys []","zip (x:xs) [] == zip ys []","zip (x:xs) [] == zip xs []","zip (x:xs) [] == zip ys []","zip (x:xs) [] == zip ys []","zip (x:xs) [] == zip xs []","zip (x:xs) [] == zip ys []","zip (x:xs) [] == zip ys []","zip (drop x xs) [] == zip xs []"]}}],[91.799816,{"PlainProof":{"prop_name":"zip (take y xs) (take x xs) == zip (take x xs) (take y xs)","lemmas":[]}}],[92.022938,{"PlainProof":{"prop_name":"zip (drop x xs) (xs++xs) == zip (drop x xs) xs","lemmas":[]}}],[92.02465,{"Discard":{"discarded":["zip (drop x xs) [] == zip ys []","zip (drop x xs) (xs++xs) == zip (drop x xs) xs","zip (drop x xs) [] == zip ys []","zip (drop x xs) (xs++xs) == zip (drop x xs) xs","zip (drop x xs) [] == zip xs []","zip (drop x xs) (xs++xs) == zip (drop x xs) xs","zip (drop x xs) [] == zip ys []","zip (drop x xs) (xs++xs) == zip (drop x xs) xs","zip (drop x xs) [] == zip ys []","zip (drop x xs) (xs++xs) == zip (drop x xs) xs","zip (drop x xs) [] == zip xs []","zip (drop x xs) (xs++xs) == zip (drop x xs) xs","zip (drop x xs) [] == zip ys []","zip (drop x xs) (xs++xs) == zip (drop x xs) xs","zip (drop x xs) [] == zip ys []","zip (drop x xs) (xs++xs) == zip (drop x xs) xs","zip (take x xs) [] == zip xs []","zip (take x xs) (take x xs) == zip xs (take x xs)","zip (take x xs) (xs++xs) == zip xs (take x xs)","zip (take x xs) [] == zip ys []","zip (take x xs) (take x xs) == zip xs (take x xs)","zip (take x xs) (xs++xs) == zip xs (take x xs)","zip (take x xs) [] == zip ys []","zip (take x xs) (take x xs) == zip xs (take x xs)","zip (take x xs) (xs++xs) == zip xs (take x xs)","zip (take x xs) [] == zip xs []","zip (take x xs) (take x xs) == zip xs (take x xs)","zip (take x xs) (xs++xs) == zip xs (take x xs)","zip (take x xs) [] == zip ys []","zip (take x xs) (take x xs) == zip xs (take x xs)","zip (take x xs) (xs++xs) == zip xs (take x xs)","zip (take x xs) [] == zip ys []","zip (take x xs) (take x xs) == zip xs (take x xs)","zip (take x xs) (xs++xs) == zip xs (take x xs)","zip (take x xs) [] == zip xs []","zip (take x xs) (take x xs) == zip xs (take x xs)","zip (take x xs) (xs++xs) == zip xs (take x xs)","zip (take x xs) [] == zip ys []","zip (take x xs) (take x xs) == zip xs (take x xs)","zip (take x xs) (xs++xs) == zip xs (take x xs)","zip (take x xs) [] == zip ys []","zip (take x xs) (take x xs) == zip xs (take x xs)","zip (take x xs) (xs++xs) == zip xs (take x xs)","(xs++ys)++[] == xs++ys","(xs++ys)++[] == xs++ys","(xs++ys)++[] == xs++ys","(xs++ys)++[] == xs++ys","(xs++ys)++[] == xs++ys","(xs++ys)++[] == xs++ys","(x:xs)++[] == x:xs","(x:xs)++[] == x:xs","(x:xs)++[] == x:xs","(x:xs)++[] == x:xs","(x:xs)++[] == x:xs","(x:xs)++[] == x:xs","(x:xs)++[] == x:xs","(x:xs)++[] == x:xs","(x:xs)++[] == x:xs","drop x xs++[] == drop x xs","drop x xs++[] == drop x xs","drop x xs++[] == drop x xs","drop x xs++[] == drop x xs","drop x xs++[] == drop x xs","drop x xs++[] == drop x xs","drop x xs++[] == drop x xs","drop x xs++[] == drop x xs","drop x xs++[] == drop x xs","take x xs++[] == take x xs","take x xs++drop x xs == xs","take x xs++[] == take x xs","take x xs++drop x xs == xs","take x xs++[] == take x xs","take x xs++drop x xs == xs","take x xs++[] == take x xs","take x xs++drop x xs == xs","take x xs++[] == take x xs","take x xs++drop x xs == xs","take x xs++[] == take x xs","take x xs++drop x xs == xs","take x xs++[] == take x xs","take x xs++drop x xs == xs","take x xs++[] == take x xs","take x xs++drop x xs == xs","take x xs++[] == take x xs","take x xs++drop x xs == xs","zip (xs++xs) (drop x xs) == zip xs (drop x xs)","zip (xs++xs) (drop x xs) == zip xs (drop x xs)","zip (xs++xs) (take x xs) == zip xs (take x xs)","zip (xs++xs) (take x xs) == zip xs (take x xs)","zip (xs++xs) (take x xs) == zip xs (take x xs)","zip (xs++xs) (drop x xs) == zip xs (drop x xs)","zip (xs++xs) (drop x xs) == zip xs (drop x xs)","zip (xs++xs) (drop x xs) == zip xs (drop x xs)","zip (xs++xs) (take x xs) == zip xs (take x xs)","zip (xs++xs) (take x xs) == zip xs (take x xs)","zip (xs++xs) (take x xs) == zip xs (take x xs)","zip (xs++xs) (drop x xs) == zip xs (drop x xs)","zip (xs++xs) (drop x xs) == zip xs (drop x xs)","zip (xs++xs) (drop x xs) == zip xs (drop x xs)","zip (xs++xs) (take x xs) == zip xs (take x xs)","zip (xs++xs) (take x xs) == zip xs (take x xs)","zip (xs++xs) (take x xs) == zip xs (take x xs)","drop (len xs) (xs++ys) == ys","drop (len xs) (xs++ys) == ys"]}}],[92.152817,{"PlainProof":{"prop_name":"drop (len xs) (drop x xs) == []","lemmas":[]}}],[92.165892,{"PlainProof":{"prop_name":"zip (xs++xs) (drop x xs) == zip xs (drop x xs)","lemmas":[]}}],[92.167271,{"Discard":{"discarded":["drop (len xs) (drop x xs) == []","drop (len xs) (drop x xs) == []","drop (len xs) (take x xs) == []","drop (len xs) (take x xs) == []","drop (len xs) (take x xs) == []","drop (len xs) (xs++ys) == ys","drop (len xs) (xs++ys) == ys","drop (len xs) (drop x xs) == []","drop (len xs) (drop x xs) == []","drop (len xs) (drop x xs) == []","drop (len xs) (take x xs) == []","drop (len xs) (take x xs) == []","drop (len xs) (take x xs) == []","drop (len xs) (xs++ys) == ys","drop (len xs) (xs++ys) == ys","drop (len xs) (drop x xs) == []","drop (len xs) (drop x xs) == []","drop (len xs) (drop x xs) == []","drop (len xs) (take x xs) == []","drop (len xs) (take x xs) == []","drop (len xs) (take x xs) == []","drop (S x) (x:xs) == drop x xs","drop (S x) (x:xs) == drop x xs","drop (S x) (x:xs) == drop x xs","drop (S x) (take x xs) == []","drop (S x) (take x xs) == []","drop (S x) (take x xs) == []","drop (S x) (x:xs) == drop x xs","drop (S x) (x:xs) == drop x xs","drop (S x) (x:xs) == drop x xs","drop (S x) (take x xs) == []","drop (S x) (take x xs) == []","drop (S x) (take x xs) == []","drop (S x) (x:xs) == drop x xs","drop (S x) (x:xs) == drop x xs","drop (S x) (x:xs) == drop x xs","drop (S x) (take x xs) == []","drop (S x) (take x xs) == []","drop (S x) (take x xs) == []","take (len xs) (xs++ys) == xs","take (len xs) (xs++ys) == xs","take (len xs) (drop x xs) == drop x xs","take (len xs) (drop x xs) == drop x xs","take (len xs) (drop x xs) == drop x xs","take (len xs) (take x xs) == take x xs","take (len xs) (take x xs) == take x xs","take (len xs) (xs++ys) == xs","take (len xs) (xs++ys) == xs","take (len xs) (drop x xs) == drop x xs","take (len xs) (drop x xs) == drop x xs","take (len xs) (drop x xs) == drop x xs","take (len xs) (take x xs) == take x xs","take (len xs) (take x xs) == take x xs","take (len xs) (take x xs) == take x xs","take (len xs) (xs++ys) == xs","take (len xs) (xs++ys) == xs","take (len xs) (drop x xs) == drop x xs","take (len xs) (drop x xs) == drop x xs","take (len xs) (drop x xs) == drop x xs","take (len xs) (take x xs) == take x xs","take (len xs) (take x xs) == take x xs","take (len xs) (take x xs) == take x xs","take (S x) (x:xs) == x:take x xs","take (S x) (x:xs) == x:take x xs","take (S x) (x:xs) == x:take x xs","take (S x) (take x xs) == take x xs","take (S x) (take x xs) == take x xs","take (S x) (take x xs) == take x xs","take (S x) (x:xs) == x:take x xs","take (S x) (x:xs) == x:take x xs","take (S x) (x:xs) == x:take x xs","take (S x) (take x xs) == take x xs","take (S x) (take x xs) == take x xs","take (S x) (take x xs) == take x xs","take (S x) (x:xs) == x:take x xs","take (S x) (x:xs) == x:take x xs","take (S x) (x:xs) == x:take x xs","take (S x) (take x xs) == take x xs","take (S x) (take x xs) == take x xs","take (S x) (take x xs) == take x xs","(x:[])++xs == x:xs","(x:[])++xs == x:xs","(x:[])++xs == x:xs","(x:[])++xs == x:xs","(x:[])++xs == x:xs","(x:[])++xs == x:xs","(x:[])++xs == x:xs","(x:[])++xs == x:xs","(x:[])++xs == x:xs","(Z:xs)++ys == Z:(xs++ys)","(Z:xs)++ys == Z:(xs++ys)","(Z:xs)++ys == Z:(xs++ys)","(Z:xs)++ys == Z:(xs++ys)","(Z:xs)++ys == Z:(xs++ys)","(Z:xs)++ys == Z:(xs++ys)","len (x:[]) == S Z","len (x:[]) == S Z","len (x:[]) == S Z","len (Z:xs) == len (x:xs)","len (Z:xs) == len (x:xs)","len (Z:xs) == len (x:xs)","zip [] (xs++xs) == zip xs []","zip [] (xs++xs) == zip ys []","zip [] (xs++xs) == zip ys []","[]++(xs++xs) == xs++xs","[]++(xs++xs) == xs++xs","[]++(xs++xs) == xs++xs","drop Z (xs++xs) == xs++xs","drop Z (xs++xs) == xs++xs","drop Z (xs++xs) == xs++xs","take Z (xs++xs) == []","take Z (xs++xs) == []","take Z (xs++xs) == []","zip (xs++xs) [] == zip xs []","zip (xs++xs) [] == zip ys []","zip (xs++xs) [] == zip ys []","(xs++xs)++[] == xs++xs","(xs++xs)++[] == xs++xs","(xs++xs)++[] == xs++xs","drop (len xs) [] == []","drop (len xs) (xs++xs) == xs","drop (len xs) [] == []","drop (len xs) (xs++xs) == xs","drop (len xs) [] == []","drop (len xs) (xs++xs) == xs","drop (S x) [] == []","drop (S x) [] == []","drop (S x) [] == []","take (len xs) [] == []","take (len xs) (xs++xs) == xs","take (len xs) [] == []","take (len xs) (xs++xs) == xs","take (len xs) [] == []","take (len xs) (xs++xs) == xs","take (S x) [] == []","take (S x) [] == []","take (S x) [] == []","(Z:xs)++xs == Z:(xs++xs)","(Z:xs)++xs == Z:(xs++xs)","(Z:xs)++xs == Z:(xs++xs)","zip (x:xs) (y:[]) == zip (x:ys) (y:[])","zip (x:xs) (y:[]) == zip (x:ys) (y:[])","zip (x:xs) (y:[]) == zip (x:ys) (y:[])","zip (x:xs) (y:[]) == zip (x:ys) (y:[])","zip (x:xs) (y:[]) == zip (x:ys) (y:[])","zip (x:xs) (y:[]) == zip (x:ys) (y:[])","zip (x:xs) (y:[]) == zip (x:ys) (y:[])","zip (x:xs) (y:[]) == zip (x:ys) (y:[])","zip (x:xs) (y:[]) == zip (x:ys) (y:[])","zip (x:xs) (y:[]) == zip (x:ys) (y:[])","zip (x:xs) (y:[]) == zip (x:ys) (y:[])","zip (x:xs) (y:[]) == zip (x:ys) (y:[])","zip (x:[]) (y:xs) == zip (x:xs) (y:[])","zip (x:[]) (y:xs) == zip (x:ys) (y:[])","zip (x:[]) (y:xs) == zip (x:ys) (y:[])","zip (x:[]) (y:xs) == zip (x:xs) (y:[])","zip (x:[]) (y:xs) == zip (x:ys) (y:[])","zip (x:[]) (y:xs) == zip (x:ys) (y:[])","zip (x:[]) (y:xs) == zip (x:xs) (y:[])","zip (x:[]) (y:xs) == zip (x:ys) (y:[])","zip (x:[]) (y:xs) == zip (x:ys) (y:[])","zip (x:[]) (y:xs) == zip (x:xs) (y:[])","zip (x:[]) (y:xs) == zip (x:ys) (y:[])","zip (x:[]) (y:xs) == zip (x:ys) (y:[])","zip (x:[]) (y:xs) == zip (x:xs) (y:[])","zip (x:[]) (y:xs) == zip (x:ys) (y:[])","zip (x:[]) (y:xs) == zip (x:ys) (y:[])","zip (x:[]) (y:xs) == zip (x:xs) (y:[])","zip (x:[]) (y:xs) == zip (x:ys) (y:[])","zip (x:[]) (y:xs) == zip (x:ys) (y:[])","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++drop y xs == x:drop y xs","(x:[])++drop y xs == x:drop y xs","(x:[])++drop y xs == x:drop y xs","(x:[])++drop y xs == x:drop y xs","(x:[])++drop y xs == x:drop y xs","(x:[])++drop y xs == x:drop y xs","(x:[])++take y xs == x:take y xs","(x:[])++take y xs == x:take y xs","(x:[])++take y xs == x:take y xs","(x:[])++take y xs == x:take y xs","(x:[])++take y xs == x:take y xs","(x:[])++take y xs == x:take y xs","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++drop y xs == x:drop y xs","(x:[])++drop y xs == x:drop y xs","(x:[])++drop y xs == x:drop y xs","(x:[])++drop y xs == x:drop y xs","(x:[])++drop y xs == x:drop y xs","(x:[])++drop y xs == x:drop y xs","(x:[])++take y xs == x:take y xs","(x:[])++take y xs == x:take y xs","(x:[])++take y xs == x:take y xs","(x:[])++take y xs == x:take y xs","(x:[])++take y xs == x:take y xs","(x:[])++take y xs == x:take y xs","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++drop y xs == x:drop y xs","(x:[])++drop y xs == x:drop y xs","(x:[])++drop y xs == x:drop y xs","(x:[])++drop y xs == x:drop y xs","(x:[])++drop y xs == x:drop y xs","(x:[])++drop y xs == x:drop y xs","(x:[])++take y xs == x:take y xs","(x:[])++take y xs == x:take y xs","(x:[])++take y xs == x:take y xs","(x:[])++take y xs == x:take y xs","(x:[])++take y xs == x:take y xs","(x:[])++take y xs == x:take y xs","zip (x:xs) (x:[]) == zip (x:ys) (x:[])","zip (x:xs) (x:[]) == zip (x:ys) (x:[])","zip (x:xs) (x:[]) == zip (x:ys) (x:[])","zip (x:xs) (x:[]) == zip (x:ys) (x:[])","zip (x:xs) (x:[]) == zip (x:ys) (x:[])","zip (x:xs) (x:[]) == zip (x:ys) (x:[])","zip (xs++xs) (x:[]) == zip xs (x:[])","zip (xs++xs) (x:[]) == zip xs (x:[])","zip (xs++xs) (x:[]) == zip xs (x:[])","zip (xs++xs) (x:[]) == zip xs (x:[])","zip (xs++xs) (x:[]) == zip xs (x:[])","zip (xs++xs) (x:[]) == zip xs (x:[])","zip (xs++xs) (x:[]) == zip xs (x:[])","zip (xs++xs) (x:[]) == zip xs (x:[])","zip (xs++xs) (x:[]) == zip xs (x:[])","drop (S x) (y:[]) == []","drop (S x) (y:[]) == []","drop (S x) (Z:xs) == drop x xs","drop (S x) (Z:xs) == drop x xs","drop (S x) (Z:xs) == drop x xs","drop (S x) (y:[]) == []","drop (S x) (y:[]) == []","drop (S x) (Z:xs) == drop x xs","drop (S x) (Z:xs) == drop x xs","drop (S x) (Z:xs) == drop x xs","drop (S x) (y:[]) == []","drop (S x) (y:[]) == []","drop (S x) (Z:xs) == drop x xs","drop (S x) (Z:xs) == drop x xs","drop (S x) (Z:xs) == drop x xs","take (S x) (y:[]) == y:[]","take (S x) (y:[]) == y:[]","take (S x) (Z:xs) == Z:take x xs","take (S x) (Z:xs) == Z:take x xs","take (S x) (Z:xs) == Z:take x xs","take (S x) (y:[]) == y:[]","take (S x) (y:[]) == y:[]","take (S x) (Z:xs) == Z:take x xs","take (S x) (Z:xs) == Z:take x xs","take (S x) (Z:xs) == Z:take x xs","take (S x) (y:[]) == y:[]","take (S x) (y:[]) == y:[]","take (S x) (Z:xs) == Z:take x xs","take (S x) (Z:xs) == Z:take x xs","take (S x) (Z:xs) == Z:take x xs","zip (x:[]) (x:xs) == zip (x:xs) (x:[])","zip (x:[]) (x:xs) == zip (x:ys) (x:[])","zip (x:[]) (x:xs) == zip (x:ys) (x:[])","zip (x:[]) (xs++xs) == zip (x:[]) xs","zip (x:[]) (xs++xs) == zip (x:[]) xs","zip (x:[]) (xs++xs) == zip (x:[]) xs","zip (x:[]) (x:xs) == zip (x:xs) (x:[])","zip (x:[]) (x:xs) == zip (x:ys) (x:[])","zip (x:[]) (x:xs) == zip (x:ys) (x:[])","zip (x:[]) (xs++xs) == zip (x:[]) xs","zip (x:[]) (xs++xs) == zip (x:[]) xs","zip (x:[]) (xs++xs) == zip (x:[]) xs","zip (x:[]) (x:xs) == zip (x:xs) (x:[])","zip (x:[]) (x:xs) == zip (x:ys) (x:[])","zip (x:[]) (x:xs) == zip (x:ys) (x:[])","zip (x:[]) (xs++xs) == zip (x:[]) xs","zip (x:[]) (xs++xs) == zip (x:[]) xs","zip (x:[]) (xs++xs) == zip (x:[]) xs","(x:[])++(x:xs) == x:(x:xs)","(x:[])++(x:xs) == x:(x:xs)","(x:[])++(x:xs) == x:(x:xs)","(x:[])++drop x xs == x:drop x xs","(x:[])++drop x xs == x:drop x xs","(x:[])++drop x xs == x:drop x xs","(x:[])++take x xs == x:take x xs","(x:[])++take x xs == x:take x xs","(x:[])++take x xs == x:take x xs","(x:[])++(xs++xs) == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","(x:[])++(x:xs) == x:(x:xs)","(x:[])++(x:xs) == x:(x:xs)","(x:[])++(x:xs) == x:(x:xs)","(x:[])++drop x xs == x:drop x xs","(x:[])++drop x xs == x:drop x xs","(x:[])++drop x xs == x:drop x xs","(x:[])++take x xs == x:take x xs","(x:[])++take x xs == x:take x xs","(x:[])++take x xs == x:take x xs","(x:[])++(xs++xs) == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","(x:[])++(x:xs) == x:(x:xs)","(x:[])++(x:xs) == x:(x:xs)","(x:[])++(x:xs) == x:(x:xs)","(x:[])++drop x xs == x:drop x xs","(x:[])++drop x xs == x:drop x xs","(x:[])++drop x xs == x:drop x xs","(x:[])++take x xs == x:take x xs","(x:[])++take x xs == x:take x xs","(x:[])++take x xs == x:take x xs","(x:[])++(xs++xs) == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","drop (S Z) (x:xs) == xs","drop (S Z) (x:xs) == xs","drop (S Z) (x:xs) == xs","drop (S Z) (x:xs) == xs","drop (S Z) (x:xs) == xs","drop (S Z) (x:xs) == xs","drop (S Z) (x:xs) == xs","drop (S Z) (x:xs) == xs","drop (S Z) (x:xs) == xs"]}}],[92.225425,{"PlainProof":{"prop_name":"take (len xs) (take x xs) == take x xs","lemmas":[]}}],[95.274158,{"InductiveProof":{"prop_name":"drop (S Z) (drop x xs) == drop (S x) xs","lemmas":[]}}],[95.285122,{"Discard":{"discarded":["drop (S Z) (drop x xs) == drop (S x) xs","drop (S Z) (drop x xs) == drop (S x) xs","drop (S Z) (drop x xs) == drop (S x) xs","drop (S Z) (drop x xs) == drop (S x) xs","drop (S Z) (drop x xs) == drop (S x) xs","drop (S Z) (drop x xs) == drop (S x) xs","drop (S Z) (drop x xs) == drop (S x) xs","drop (S Z) (drop x xs) == drop (S x) xs","take (S Z) (x:xs) == x:[]","take (S Z) (x:xs) == x:[]","take (S Z) (x:xs) == x:[]","take (S Z) (x:xs) == x:[]","take (S Z) (x:xs) == x:[]","take (S Z) (x:xs) == x:[]","take (S Z) (x:xs) == x:[]","take (S Z) (x:xs) == x:[]","take (S Z) (x:xs) == x:[]","drop x (Z:[]) == drop x (x:[])","drop x (Z:[]) == drop x (x:[])","drop x (Z:[]) == drop x (x:[])","zip [] (x:[]) == zip xs []","zip [] (x:[]) == zip xs []","zip [] (x:[]) == zip xs []","zip [] (Z:xs) == zip xs []","zip [] (Z:xs) == zip ys []","zip [] (Z:xs) == zip ys []","[]++(x:[]) == x:[]","[]++(x:[]) == x:[]","[]++(x:[]) == x:[]","[]++(Z:xs) == Z:xs","[]++(Z:xs) == Z:xs","[]++(Z:xs) == Z:xs","drop Z (x:[]) == x:[]","drop Z (x:[]) == x:[]","drop Z (x:[]) == x:[]","drop Z (Z:xs) == Z:xs","drop Z (Z:xs) == Z:xs","drop Z (Z:xs) == Z:xs","take Z (x:[]) == []","take Z (x:[]) == []","take Z (x:[]) == []","take Z (Z:xs) == []","take Z (Z:xs) == []","take Z (Z:xs) == []","drop (S x) (x:[]) == []","drop (S x) (x:[]) == []","drop (S x) (x:[]) == []","take (S x) (x:[]) == x:[]","take (S x) (x:[]) == x:[]","take (S x) (x:[]) == x:[]","zip (x:[]) [] == zip xs []","zip (x:[]) [] == zip xs []","zip (x:[]) [] == zip xs []","zip (Z:xs) [] == zip xs []","zip (Z:xs) [] == zip ys []","zip (Z:xs) [] == zip ys []","(x:[])++[] == x:[]","(x:[])++[] == x:[]","(x:[])++[] == x:[]","(Z:xs)++[] == Z:xs","(Z:xs)++[] == Z:xs","(Z:xs)++[] == Z:xs","take (S Z) (xs++xs) == take (S Z) xs","take (S Z) (xs++xs) == take (S Z) xs","take (S Z) (xs++xs) == take (S Z) xs","(Z:[])++xs == Z:xs","(Z:[])++xs == Z:xs","(Z:[])++xs == Z:xs","len (Z:[]) == S Z","drop (S Z) [] == []","take (S Z) [] == []","zip (x:xs) (Z:[]) == zip (x:ys) (Z:[])","zip (x:xs) (Z:[]) == zip (x:ys) (Z:[])","zip (x:xs) (Z:[]) == zip (x:ys) (Z:[])","zip (x:xs) (Z:[]) == zip (x:ys) (Z:[])","zip (x:xs) (Z:[]) == zip (x:ys) (Z:[])","zip (x:xs) (Z:[]) == zip (x:ys) (Z:[])","zip (x:[]) (y:[]) == zip (x:xs) (y:[])","zip (x:[]) (y:[]) == zip (x:xs) (y:[])","zip (x:[]) (Z:xs) == zip (x:xs) (Z:[])","zip (x:[]) (Z:xs) == zip (x:ys) (Z:[])","zip (x:[]) (Z:xs) == zip (x:ys) (Z:[])","zip (x:[]) (y:[]) == zip (x:xs) (y:[])","zip (x:[]) (y:[]) == zip (x:xs) (y:[])","zip (x:[]) (Z:xs) == zip (x:xs) (Z:[])","zip (x:[]) (Z:xs) == zip (x:ys) (Z:[])","zip (x:[]) (Z:xs) == zip (x:ys) (Z:[])","zip (x:[]) (y:[]) == zip (x:xs) (y:[])","zip (x:[]) (y:[]) == zip (x:xs) (y:[])","zip (x:[]) (Z:xs) == zip (x:xs) (Z:[])","zip (x:[]) (Z:xs) == zip (x:ys) (Z:[])","zip (x:[]) (Z:xs) == zip (x:ys) (Z:[])","zip (Z:xs) (x:[]) == zip (Z:ys) (x:[])","zip (Z:xs) (x:[]) == zip (Z:ys) (x:[])","zip (Z:xs) (x:[]) == zip (Z:ys) (x:[])","zip (Z:xs) (x:[]) == zip (Z:ys) (x:[])","zip (Z:xs) (x:[]) == zip (Z:ys) (x:[])","zip (Z:xs) (x:[]) == zip (Z:ys) (x:[])","(x:[])++(y:[]) == x:(y:[])","(x:[])++(y:[]) == x:(y:[])","(x:[])++(Z:xs) == x:(Z:xs)","(x:[])++(Z:xs) == x:(Z:xs)","(x:[])++(Z:xs) == x:(Z:xs)","(x:[])++(y:[]) == x:(y:[])","(x:[])++(y:[]) == x:(y:[])","(x:[])++(Z:xs) == x:(Z:xs)","(x:[])++(Z:xs) == x:(Z:xs)","(x:[])++(Z:xs) == x:(Z:xs)","(x:[])++(y:[]) == x:(y:[])","(x:[])++(y:[]) == x:(y:[])","(x:[])++(Z:xs) == x:(Z:xs)","(x:[])++(Z:xs) == x:(Z:xs)","(x:[])++(Z:xs) == x:(Z:xs)","zip (Z:[]) (x:xs) == zip (Z:xs) (x:[])","zip (Z:[]) (x:xs) == zip (Z:ys) (x:[])","zip (Z:[]) (x:xs) == zip (Z:ys) (x:[])","zip (Z:[]) (x:xs) == zip (Z:xs) (x:[])","zip (Z:[]) (x:xs) == zip (Z:ys) (x:[])","zip (Z:[]) (x:xs) == zip (Z:ys) (x:[])","zip (Z:[]) (x:xs) == zip (Z:xs) (x:[])","zip (Z:[]) (x:xs) == zip (Z:ys) (x:[])","zip (Z:[]) (x:xs) == zip (Z:ys) (x:[])","(Z:[])++(xs++ys) == Z:(xs++ys)","(Z:[])++(xs++ys) == Z:(xs++ys)","(Z:[])++(xs++ys) == Z:(xs++ys)","(Z:[])++(xs++ys) == Z:(xs++ys)","(Z:[])++(xs++ys) == Z:(xs++ys)","(Z:[])++(xs++ys) == Z:(xs++ys)","(Z:[])++(x:xs) == Z:(x:xs)","(Z:[])++(x:xs) == Z:(x:xs)","(Z:[])++(x:xs) == Z:(x:xs)","(Z:[])++(x:xs) == Z:(x:xs)","(Z:[])++(x:xs) == Z:(x:xs)","(Z:[])++(x:xs) == Z:(x:xs)","(Z:[])++(x:xs) == Z:(x:xs)","(Z:[])++(x:xs) == Z:(x:xs)","(Z:[])++(x:xs) == Z:(x:xs)","(Z:[])++drop x xs == Z:drop x xs","(Z:[])++drop x xs == Z:drop x xs","(Z:[])++drop x xs == Z:drop x xs","(Z:[])++drop x xs == Z:drop x xs","(Z:[])++drop x xs == Z:drop x xs","(Z:[])++drop x xs == Z:drop x xs","(Z:[])++drop x xs == Z:drop x xs","(Z:[])++drop x xs == Z:drop x xs","(Z:[])++drop x xs == Z:drop x xs","(Z:[])++take x xs == Z:take x xs","(Z:[])++take x xs == Z:take x xs","(Z:[])++take x xs == Z:take x xs","(Z:[])++take x xs == Z:take x xs","(Z:[])++take x xs == Z:take x xs","(Z:[])++take x xs == Z:take x xs","(Z:[])++take x xs == Z:take x xs","(Z:[])++take x xs == Z:take x xs","(Z:[])++take x xs == Z:take x xs","zip (xs++xs) (Z:[]) == zip xs (Z:[])","zip (xs++xs) (Z:[]) == zip xs (Z:[])","zip (xs++xs) (Z:[]) == zip xs (Z:[])","drop (S x) (Z:[]) == []","drop (S x) (Z:[]) == []","drop (S x) (Z:[]) == []","take (S x) (Z:[]) == Z:[]","take (S x) (Z:[]) == Z:[]","take (S x) (Z:[]) == Z:[]","zip (x:[]) (x:[]) == zip (x:xs) (x:[])","zip (x:[]) (x:[]) == zip (x:xs) (x:[])","zip (x:[]) (x:[]) == zip (x:xs) (x:[])","(x:[])++(x:[]) == x:(x:[])","(x:[])++(x:[]) == x:(x:[])","(x:[])++(x:[]) == x:(x:[])","drop (S Z) (x:[]) == []","drop (S Z) (x:[]) == []","drop (S Z) (x:[]) == []","drop (S Z) (Z:xs) == xs","drop (S Z) (Z:xs) == xs","drop (S Z) (Z:xs) == xs","take (S Z) (x:[]) == x:[]","take (S Z) (x:[]) == x:[]","take (S Z) (x:[]) == x:[]","take (S Z) (Z:xs) == Z:[]","take (S Z) (Z:xs) == Z:[]","take (S Z) (Z:xs) == Z:[]","zip (Z:[]) (xs++xs) == zip (Z:[]) xs","zip (Z:[]) (xs++xs) == zip (Z:[]) xs","zip (Z:[]) (xs++xs) == zip (Z:[]) xs","(Z:[])++(xs++xs) == Z:(xs++xs)","(Z:[])++(xs++xs) == Z:(xs++xs)","(Z:[])++(xs++xs) == Z:(xs++xs)","zip [] (Z:[]) == zip xs []","[]++(Z:[]) == Z:[]","drop Z (Z:[]) == Z:[]","take Z (Z:[]) == []","zip (Z:[]) [] == zip xs []","(Z:[])++[] == Z:[]","zip (x:[]) (Z:[]) == zip (x:xs) (Z:[])","zip (x:[]) (Z:[]) == zip (x:xs) (Z:[])","zip (x:[]) (Z:[]) == zip (x:xs) (Z:[])","zip (Z:xs) (Z:[]) == zip (Z:ys) (Z:[])","zip (Z:xs) (Z:[]) == zip (Z:ys) (Z:[])","(x:[])++(Z:[]) == x:(Z:[])","(x:[])++(Z:[]) == x:(Z:[])","(x:[])++(Z:[]) == x:(Z:[])","zip (Z:[]) (x:[]) == zip (Z:xs) (x:[])","zip (Z:[]) (x:[]) == zip (Z:xs) (x:[])","zip (Z:[]) (x:[]) == zip (Z:xs) (x:[])","zip (Z:[]) (Z:xs) == zip (Z:xs) (Z:[])","zip (Z:[]) (Z:xs) == zip (Z:ys) (Z:[])","zip (Z:[]) (Z:xs) == zip (Z:ys) (Z:[])","(Z:[])++(x:[]) == Z:(x:[])","(Z:[])++(x:[]) == Z:(x:[])","(Z:[])++(x:[]) == Z:(x:[])","(Z:[])++(Z:xs) == Z:(Z:xs)","(Z:[])++(Z:xs) == Z:(Z:xs)","(Z:[])++(Z:xs) == Z:(Z:xs)","drop (S Z) (Z:[]) == []","take (S Z) (Z:[]) == Z:[]","zip (Z:[]) (Z:[]) == zip (Z:xs) (Z:[])","(Z:[])++(Z:[]) == Z:(Z:[])"]}}],[101.420073,{"FailedProof":{"prop_name":"drop y (drop x xs) == drop x (drop y xs)"}}],[106.530341,{"FailedProof":{"prop_name":"take y (take x xs) == take x (take y xs)"}}],[106.688637,{"PlainProof":{"prop_name":"zip (drop x xs) (xs++ys) == zip (drop x xs) xs","lemmas":[]}}],[106.718352,{"PlainProof":{"prop_name":"zip (xs++ys) (drop x xs) == zip xs (drop x xs)","lemmas":[]}}],[112.840984,{"FailedProof":{"prop_name":"drop (S y) (drop x xs) == drop (S x) (drop y xs)"}}],[121.066054,{"FailedProof":{"prop_name":"zip (take y xs) (take x ys) == zip (take x xs) (take y ys)"}}],[127.18412,{"FailedProof":{"prop_name":"drop y (drop x xs) == drop x (drop y xs)"}}],[132.28986,{"FailedProof":{"prop_name":"take y (take x xs) == take x (take y xs)"}}],[138.408679,{"FailedProof":{"prop_name":"drop (S y) (drop x xs) == drop (S x) (drop y xs)"}}],[146.628756,{"FailedProof":{"prop_name":"zip (take y xs) (take x ys) == zip (take x xs) (take y ys)"}}],[146.628772,{"StartingUserLemmas":[]}],[153.008465,{"InductiveProof":{"prop_name":"prop_84","lemmas":[]}}],[157.400691,{"InductiveProof":{"prop_name":"prop_83","lemmas":[]}}],[157.400711,{"Finished":{"qs_proved":["zip ys [] == zip xs []","xs++[] == xs","zip (take x xs) ys == zip xs (take x ys)","(xs++ys)++zs == xs++(ys++zs)","len (ys++xs) == len (xs++ys)","zip xs (xs++ys) == zip xs xs","drop x (take x xs) == []","take x (take x xs) == take x xs","zip (xs++ys) xs == zip xs xs","drop (len xs) xs == []","take (len xs) xs == xs","zip (xs++ys) (take x xs) == zip xs (take x xs)","zip (take x xs) (xs++ys) == zip xs (take x xs)","drop x (Z:xs) == drop x (x:xs)","take x xs++drop x xs == xs","drop (len xs) (xs++ys) == ys","drop (len xs) (take x xs) == []","drop (S x) (take x xs) == []","take (len xs) (xs++ys) == xs","zip (xs++xs) (x:[]) == zip xs (x:[])","zip (x:[]) (xs++xs) == zip (x:[]) xs","take (S Z) (xs++xs) == take (S Z) xs","drop (S Z) (drop x xs) == drop (S x) xs"],"unproved":[],"proved":["prop_84","prop_83"],"qs_unproved":["drop x (drop y xs) == drop y (drop x xs)","take x (take y xs) == take y (take x xs)","drop (S x) (drop y xs) == drop (S y) (drop x xs)","zip (take x xs) (take y ys) == zip (take y xs) (take x ys)"]}}]]