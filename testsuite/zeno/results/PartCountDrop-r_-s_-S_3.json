[[3.0e-6,{"Started":[]}],[1.603471,{"FileProcessed":[]}],[5.66087,{"QuickSpecDone":{"eqs":2620,"classes":10348}}],[17.726009,{"InductiveProof":{"prop_name":"y+x == x+y","lemmas":[]}}],[17.748927,{"InductiveProof":{"prop_name":"x-x == Z","lemmas":[]}}],[17.785468,{"PlainProof":{"prop_name":"filter p [] == []","lemmas":[]}}],[18.786198,{"InductiveProof":{"prop_name":"xs++[] == xs","lemmas":[]}}],[18.838736,{"PlainProof":{"prop_name":"take x [] == []","lemmas":[]}}],[18.844674,{"PlainProof":{"prop_name":"drop x [] == []","lemmas":[]}}],[18.862219,{"PlainProof":{"prop_name":"count x [] == Z","lemmas":[]}}],[18.867798,{"PlainProof":{"prop_name":"x+Z == x","lemmas":[]}}],[18.907383,{"PlainProof":{"prop_name":"x-Z == x","lemmas":[]}}],[18.913052,{"PlainProof":{"prop_name":"[]++xs == xs","lemmas":[]}}],[19.085972,{"PlainProof":{"prop_name":"take Z xs == []","lemmas":[]}}],[19.091614,{"PlainProof":{"prop_name":"drop Z xs == xs","lemmas":[]}}],[19.138997,{"PlainProof":{"prop_name":"Z-x == Z","lemmas":[]}}],[19.143088,{"PlainProof":{"prop_name":"rev [] == []","lemmas":[]}}],[19.162059,{"PlainProof":{"prop_name":"len [] == Z","lemmas":[]}}],[23.171693,{"InductiveProof":{"prop_name":"take y (take x xs) == take x (take y xs)","lemmas":[]}}],[28.505855,{"FailedProof":{"prop_name":"drop y (drop x xs) == drop x (drop y xs)"}}],[32.581686,{"FailedProof":{"prop_name":"count x (ys++xs) == count x (xs++ys)"}}],[33.598673,{"InductiveProof":{"prop_name":"y+(x+z) == x+(y+z)","lemmas":[]}}],[35.641994,{"InductiveProof":{"prop_name":"(xs++ys)++zs == xs++(ys++zs)","lemmas":[]}}],[35.809489,{"PlainProof":{"prop_name":"(x:xs)++ys == x:(xs++ys)","lemmas":[]}}],[37.895121,{"InductiveProof":{"prop_name":"drop (x+y) xs == drop x (drop y xs)","lemmas":[]}}],[40.934066,{"InductiveProof":{"prop_name":"(x-y)-z == x-(y+z)","lemmas":[]}}],[42.016308,{"InductiveProof":{"prop_name":"len (ys++xs) == len (xs++ys)","lemmas":[]}}],[44.322039,{"PlainProof":{"prop_name":"len (y:xs) == len (x:xs)","lemmas":[]}}],[46.343818,{"FailedProof":{"prop_name":"filter p (filter p xs) == filter p xs"}}],[48.373532,{"FailedProof":{"prop_name":"filter p (rev xs) == rev (filter p xs)"}}],[50.371645,{"InductiveProof":{"prop_name":"take x (take x xs) == take x xs","lemmas":[]}}],[51.525464,{"InductiveProof":{"prop_name":"drop x (take x xs) == []","lemmas":[]}}],[53.534301,{"FailedProof":{"prop_name":"count x (x:xs) == S (count x xs)"}}],[55.567221,{"FailedProof":{"prop_name":"count x (rev xs) == count x xs"}}],[55.65593,{"PlainProof":{"prop_name":"x+S y == S (x+y)","lemmas":[]}}],[57.738463,{"InductiveProof":{"prop_name":"y+(x-y) == x+(y-x)","lemmas":[]}}],[59.752332,{"FailedProof":{"prop_name":"y-(y-x) == x-(x-y)"}}],[60.803791,{"InductiveProof":{"prop_name":"(x+y)-x == y","lemmas":[]}}],[62.825801,{"InductiveProof":{"prop_name":"len xs-x == len (drop x xs)","lemmas":[]}}],[63.909197,{"FailedProof":{"prop_name":"rev (rev xs) == xs"}}],[64.906034,{"InductiveProof":{"prop_name":"len (rev xs) == len xs","lemmas":[]}}],[64.934447,{"PlainProof":{"prop_name":"S (len xs) == len (x:xs)","lemmas":[]}}],[65.936004,{"InductiveProof":{"prop_name":"take (len xs) xs == xs","lemmas":[]}}],[66.027528,{"PlainProof":{"prop_name":"drop (len xs) xs == []","lemmas":[]}}],[66.041282,{"PlainProof":{"prop_name":"S y-y == S Z","lemmas":[]}}],[70.138617,{"FailedProof":{"prop_name":"filter p xs++filter p ys == filter p (xs++ys)"}}],[74.230163,{"FailedProof":{"prop_name":"take (count x xs) (xs++ys) == take (count x xs) xs"}}],[77.346978,{"InductiveProof":{"prop_name":"take (x+y) (take x xs) == take x xs","lemmas":[]}}],[81.46868,{"FailedProof":{"prop_name":"take (x-y) (take x xs) == take (x-y) xs"}}],[85.551425,{"InductiveProof":{"prop_name":"take (x-y) (drop y xs) == drop y (take x xs)","lemmas":[]}}],[88.796808,{"InductiveProof":{"prop_name":"drop (x+y) (y:xs) == drop (x+y) (x:xs)","lemmas":[]}}],[92.918929,{"FailedProof":{"prop_name":"count x xs+count x ys == count x (xs++ys)"}}],[96.990948,{"FailedProof":{"prop_name":"(x+z)-(z-y) == (x+y)-(y-z)"}}],[101.064541,{"PlainProof":{"prop_name":"take (S x) (y:xs) == y:take x xs","lemmas":[]}}],[101.095397,{"FailedProof":{"prop_name":"(y-z)-(y-x) == (x-z)-(x-y)"}}],[101.138844,{"PlainProof":{"prop_name":"drop (S x) (y:xs) == drop x xs","lemmas":[]}}],[103.155116,{"FailedProof":{"prop_name":"count y (x:[]) == count x (y:[])"}}],[105.221441,{"InductiveProof":{"prop_name":"take x xs++drop x xs == xs","lemmas":[]}}],[106.290846,{"InductiveProof":{"prop_name":"count x xs-len xs == Z","lemmas":[]}}],[108.492034,{"InductiveProof":{"prop_name":"(x+z)-S z == (x+y)-S y","lemmas":[]}}],[110.496964,{"InductiveProof":{"prop_name":"(x-y)-(y-x) == x-y","lemmas":[]}}],[112.58077,{"FailedProof":{"prop_name":"rev xs++rev ys == rev (ys++xs)"}}],[114.599254,{"FailedProof":{"prop_name":"take (len xs) (filter p xs) == filter p xs"}}],[115.707402,{"InductiveProof":{"prop_name":"take (len xs) (xs++ys) == xs","lemmas":[]}}],[115.958525,{"PlainProof":{"prop_name":"take (len xs) (drop x xs) == drop x xs","lemmas":[]}}],[117.079459,{"PlainProof":{"prop_name":"take (S x) (take x xs) == take x xs","lemmas":[]}}],[119.099901,{"FailedProof":{"prop_name":"drop (len xs) (filter p xs) == []"}}],[120.641516,{"InductiveProof":{"prop_name":"drop (len xs) (xs++ys) == ys","lemmas":[]}}],[122.65284,{"FailedProof":{"prop_name":"count (S x) (x:xs) == count (S x) xs"}}],[122.856301,{"PlainProof":{"prop_name":"S x-S y == x-y","lemmas":[]}}],[123.18159,{"PlainProof":{"prop_name":"len xs+len ys == len (xs++ys)","lemmas":[]}}],[125.430427,{"FailedProof":{"prop_name":"S y-(y-x) == S x-(x-y)"}}],[127.452133,{"FailedProof":{"prop_name":"(x+x)-(y+y) == (x-y)+(x-y)"}}],[127.475036,{"PlainProof":{"prop_name":"rev (x:[]) == x:[]","lemmas":[]}}],[127.687758,{"PlainProof":{"prop_name":"drop (len xs) (rev xs) == []","lemmas":[]}}],[129.720372,{"FailedProof":{"prop_name":"count (x+y) (x:[]) == S x-(x+y)"}}],[131.74205,{"FailedProof":{"prop_name":"count (y-x) (y:[]) == count (x-y) (x:[])"}}],[131.781475,{"PlainProof":{"prop_name":"rev xs++(x:[]) == rev (x:xs)","lemmas":[]}}],[132.95302,{"InductiveProof":{"prop_name":"take (x+x) (y:[]) == take x (y:[])","lemmas":[]}}],[133.62112,{"PlainProof":{"prop_name":"count (S x) (Z:xs) == count (S x) xs","lemmas":[]}}],[133.653442,{"PlainProof":{"prop_name":"drop (x+x) (y:[]) == drop x (y:[])","lemmas":[]}}],[135.694247,{"FailedProof":{"prop_name":"count (x+x) (y:[]) == count (y-x) (x:[])"}}],[137.712832,{"FailedProof":{"prop_name":"count (x+x) (Z:xs) == count (x+x) (x:xs)"}}],[138.724802,{"InductiveProof":{"prop_name":"take (S Z) (xs++xs) == take (S Z) xs","lemmas":[]}}],[138.89977,{"InductiveProof":{"prop_name":"S Z-(x+x) == S y-(x+y)","lemmas":[]}}],[140.21433,{"InductiveProof":{"prop_name":"count (count x xs) (Z:[]) == S Z-count x xs","lemmas":[]}}],[140.397586,{"PlainProof":{"prop_name":"count (x+y) (Z:[]) == S Z-(x+y)","lemmas":[]}}],[141.101539,{"PlainProof":{"prop_name":"count (len xs) (Z:[]) == S Z-len xs","lemmas":[]}}],[141.409408,{"InductiveProof":{"prop_name":"count (x-y) (Z:[]) == S Z-(x-y)","lemmas":[]}}],[141.499606,{"Discard":{"discarded":["xs++[] == xs","[]++xs == xs","drop Z xs == xs","rev (rev xs) == xs","take (len xs) xs == xs","take x xs++drop x xs == xs","take x xs++drop x xs == xs","take x xs++drop x xs == xs","take (len xs) (xs++ys) == xs","take (len xs) (xs++ys) == xs","drop (len xs) (xs++ys) == ys","drop (len xs) (xs++ys) == ys","take (len xs) (xs++xs) == xs","drop (len xs) (xs++xs) == xs","drop (S Z) (x:xs) == xs","drop (S Z) (x:xs) == xs","drop (S Z) (x:xs) == xs","drop (S Z) (Z:xs) == xs","xs++[] == xs","[]++xs == xs","drop Z xs == xs","rev (rev xs) == xs","take (len xs) xs == xs","take x xs++drop x xs == xs","take x xs++drop x xs == xs","take x xs++drop x xs == xs","take (len xs) (xs++ys) == xs","take (len xs) (xs++ys) == xs","drop (len xs) (xs++ys) == ys","drop (len xs) (xs++ys) == ys","take (len xs) (xs++xs) == xs","drop (len xs) (xs++xs) == xs","drop (S Z) (x:xs) == xs","drop (S Z) (x:xs) == xs","drop (S Z) (x:xs) == xs","drop (S Z) (Z:xs) == xs","xs++[] == xs","[]++xs == xs","drop Z xs == xs","rev (rev xs) == xs","take (len xs) xs == xs","take x xs++drop x xs == xs","take x xs++drop x xs == xs","take x xs++drop x xs == xs","take (len xs) (xs++ys) == xs","take (len xs) (xs++ys) == xs","drop (len xs) (xs++ys) == ys","drop (len xs) (xs++ys) == ys","take (len xs) (xs++xs) == xs","drop (len xs) (xs++xs) == xs","drop (S Z) (x:xs) == xs","drop (S Z) (x:xs) == xs","drop (S Z) (x:xs) == xs","drop (S Z) (Z:xs) == xs","x+Z == x","x-Z == x","Z+x == x","(x+y)-y == x","(x+y)-y == x","(x+x)-x == x","S x-S Z == x","x+Z == x","x-Z == x","Z+x == x","(x+y)-x == y","(x+y)-y == x","(x+x)-x == x","S x-S Z == x","x+Z == x","x-Z == x","Z+x == x","(x+y)-x == y","(x+y)-x == y","(x+x)-x == x","S x-S Z == x","filter p [] == []","take x [] == []","take x [] == []","take x [] == []","drop x [] == []","drop x [] == []","drop x [] == []","take Z xs == []","take Z xs == []","take Z xs == []","rev [] == []","[]++[] == []","take Z [] == []","drop Z [] == []","drop x (take x xs) == []","drop x (take x xs) == []","drop x (take x xs) == []","drop x (take x xs) == []","drop x (take x xs) == []","drop x (take x xs) == []","drop x (take x xs) == []","drop x (take x xs) == []","drop x (take x xs) == []","drop (len xs) xs == []","drop (len xs) xs == []","drop (len xs) xs == []","drop (x+y) (take x xs) == []","drop (x+y) (take x xs) == []","drop (x+y) (take x xs) == []","drop (x+y) (take y xs) == []","drop (x+y) (take y xs) == []","drop (x+y) (take y xs) == []","drop (x+y) (take x xs) == []","drop (x+y) (take x xs) == []","drop (x+y) (take x xs) == []","drop (x+y) (take y xs) == []","drop (x+y) (take y xs) == []","drop (x+y) (take y xs) == []","drop (x+y) (take x xs) == []","drop (x+y) (take x xs) == []","drop (x+y) (take x xs) == []","drop (x+y) (take y xs) == []","drop (x+y) (take y xs) == []","drop (x+y) (take y xs) == []","take Z (filter p xs) == []","take Z (filter p xs) == []","take Z (filter p xs) == []","take Z (xs++ys) == []","take Z (xs++ys) == []","take Z (xs++ys) == []","take Z (xs++ys) == []","take Z (xs++ys) == []","take Z (xs++ys) == []","take Z (x:xs) == []","take Z (x:xs) == []","take Z (x:xs) == []","take Z (x:xs) == []","take Z (x:xs) == []","take Z (x:xs) == []","take Z (x:xs) == []","take Z (x:xs) == []","take Z (x:xs) == []","take Z (take x xs) == []","take Z (take x xs) == []","take Z (take x xs) == []","take Z (take x xs) == []","take Z (take x xs) == []","take Z (take x xs) == []","take Z (take x xs) == []","take Z (take x xs) == []","take Z (take x xs) == []","take Z (drop x xs) == []","take Z (drop x xs) == []","take Z (drop x xs) == []","take Z (drop x xs) == []","take Z (drop x xs) == []","take Z (drop x xs) == []","take Z (drop x xs) == []","take Z (drop x xs) == []","take Z (drop x xs) == []","take (count x xs) [] == []","take (count x xs) [] == []","take (count x xs) [] == []","take (count x xs) [] == []","take (count x xs) [] == []","take (count x xs) [] == []","take (count x xs) [] == []","take (count x xs) [] == []","take (count x xs) [] == []","take (x+y) [] == []","take (x+y) [] == []","take (x+y) [] == []","take (x-y) [] == []","take (x-y) [] == []","take (x-y) [] == []","take (x-y) [] == []","take (x-y) [] == []","take (x-y) [] == []","drop (count x xs) [] == []","drop (count x xs) [] == []","drop (count x xs) [] == []","drop (count x xs) [] == []","drop (count x xs) [] == []","drop (count x xs) [] == []","drop (count x xs) [] == []","drop (count x xs) [] == []","drop (count x xs) [] == []","drop (x+y) [] == []","drop (x+y) [] == []","drop (x+y) [] == []","drop (x-y) [] == []","drop (x-y) [] == []","drop (x-y) [] == []","drop (x-y) [] == []","drop (x-y) [] == []","drop (x-y) [] == []","drop (len xs) (filter p xs) == []","drop (len xs) (take x xs) == []","drop (len xs) (take x xs) == []","drop (len xs) (take x xs) == []","drop (len xs) (drop x xs) == []","drop (len xs) (drop x xs) == []","drop (len xs) (filter p xs) == []","drop (len xs) (take x xs) == []","drop (len xs) (take x xs) == []","drop (len xs) (take x xs) == []","drop (len xs) (drop x xs) == []","drop (len xs) (drop x xs) == []","drop (len xs) (drop x xs) == []","drop (len xs) (filter p xs) == []","drop (len xs) (take x xs) == []","drop (len xs) (take x xs) == []","drop (len xs) (take x xs) == []","drop (len xs) (drop x xs) == []","drop (len xs) (drop x xs) == []","drop (len xs) (drop x xs) == []","drop (S x) (take x xs) == []","drop (S x) (take x xs) == []","drop (S x) (take x xs) == []","drop (S x) (take x xs) == []","drop (S x) (take x xs) == []","drop (S x) (take x xs) == []","drop (S x) (take x xs) == []","drop (S x) (take x xs) == []","drop (S x) (take x xs) == []","drop (x+x) (take x xs) == []","drop (x+x) (take x xs) == []","drop (x+x) (take x xs) == []","drop (x+x) (take x xs) == []","drop (x+x) (take x xs) == []","drop (x+x) (take x xs) == []","drop (x+x) (take x xs) == []","drop (x+x) (take x xs) == []","drop (x+x) (take x xs) == []","take Z (rev xs) == []","take Z (rev xs) == []","take Z (rev xs) == []","take Z (xs++xs) == []","take Z (xs++xs) == []","take Z (xs++xs) == []","take (len xs) [] == []","take (len xs) [] == []","take (len xs) [] == []","take (S x) [] == []","take (S x) [] == []","take (S x) [] == []","take (x+x) [] == []","take (x+x) [] == []","take (x+x) [] == []","drop (len xs) [] == []","drop (len xs) (rev xs) == []","drop (len xs) [] == []","drop (len xs) (rev xs) == []","drop (len xs) [] == []","drop (len xs) (rev xs) == []","drop (S x) [] == []","drop (S x) [] == []","drop (S x) [] == []","drop (x+x) [] == []","drop (x+x) [] == []","drop (x+x) [] == []","drop (S x) (y:[]) == []","drop (S x) (y:[]) == []","drop (S x) (y:[]) == []","drop (S x) (y:[]) == []","drop (S x) (y:[]) == []","drop (S x) (y:[]) == []","take Z (x:[]) == []","take Z (x:[]) == []","take Z (x:[]) == []","take Z (Z:xs) == []","take Z (Z:xs) == []","take Z (Z:xs) == []","drop (S x) (x:[]) == []","drop (S x) (x:[]) == []","drop (S x) (x:[]) == []","take (count Z xs) [] == []","take (count Z xs) [] == []","take (count Z xs) [] == []","drop (count Z xs) [] == []","drop (count Z xs) [] == []","drop (count Z xs) [] == []","take (S Z) [] == []","drop (S Z) [] == []","drop (S x) (Z:[]) == []","drop (S x) (Z:[]) == []","drop (S x) (Z:[]) == []","drop (S Z) (x:[]) == []","drop (S Z) (x:[]) == []","drop (S Z) (x:[]) == []","take Z (Z:[]) == []","drop (S Z) (Z:[]) == []","x-x == Z","x-x == Z","x-x == Z","count x [] == Z","count x [] == Z","count x [] == Z","Z-x == Z","Z-x == Z","Z-x == Z","len [] == Z","count Z [] == Z","Z+Z == Z","Z-Z == Z","x-(x+y) == Z","x-(x+y) == Z","x-(y+x) == Z","x-(x+y) == Z","x-(y+x) == Z","x-(y+x) == Z","(x-y)-x == Z","(x-y)-x == Z","(x-y)-x == Z","(x-y)-x == Z","(x-y)-x == Z","(x-y)-x == Z","x-S x == Z","x-(x+x) == Z","x-S x == Z","x-(x+x) == Z","x-S x == Z","x-(x+x) == Z","(x-y)-(x+z) == Z","(x-y)-(x+z) == Z","(x-y)-(x+z) == Z","(x-y)-(z+x) == Z","(x-y)-(z+x) == Z","(x-y)-(z+x) == Z","Z-count x xs == Z","Z-count x xs == Z","Z-count x xs == Z","Z-count x xs == Z","Z-count x xs == Z","Z-count x xs == Z","Z-count x xs == Z","Z-count x xs == Z","Z-count x xs == Z","Z-(x+y) == Z","Z-(x+y) == Z","Z-(x+y) == Z","Z-(x-y) == Z","Z-(x-y) == Z","Z-(x-y) == Z","Z-(x-y) == Z","Z-(x-y) == Z","Z-(x-y) == Z","count (count x xs) [] == Z","count (count x xs) [] == Z","count (count x xs) [] == Z","count (count x xs) [] == Z","count (count x xs) [] == Z","count (count x xs) [] == Z","count (count x xs) [] == Z","count (count x xs) [] == Z","count (count x xs) [] == Z","count (x+y) [] == Z","count (x+y) [] == Z","count (x+y) [] == Z","count (x-y) [] == Z","count (x-y) [] == Z","count (x-y) [] == Z","count (x-y) [] == Z","count (x-y) [] == Z","count (x-y) [] == Z","count x xs-count x xs == Z","count x xs-len xs == Z","count x xs-count x xs == Z","count x xs-len xs == Z","count x xs-count x xs == Z","count x xs-len xs == Z","count x xs-count x xs == Z","count x xs-len xs == Z","count x xs-count x xs == Z","count x xs-len xs == Z","count x xs-count x xs == Z","count x xs-len xs == Z","count x xs-count x xs == Z","count x xs-len xs == Z","count x xs-count x xs == Z","count x xs-len xs == Z","count x xs-count x xs == Z","count x xs-len xs == Z","(x+y)-(x+y) == Z","(x+y)-(x+y) == Z","(x+y)-(x+y) == Z","(x-y)-(x+y) == Z","(x-y)-(x-y) == Z","(x-y)-S x == Z","(x-y)-(x+x) == Z","(x-y)-(x+y) == Z","(x-y)-(x-y) == Z","(x-y)-S x == Z","(x-y)-(x+x) == Z","(x-y)-(y+x) == Z","(x-y)-(x-y) == Z","(x-y)-S x == Z","(x-y)-(x+x) == Z","(x-y)-(x+y) == Z","(x-y)-(x-y) == Z","(x-y)-S x == Z","(x-y)-(x+x) == Z","(x-y)-(y+x) == Z","(x-y)-(x-y) == Z","(x-y)-S x == Z","(x-y)-(x+x) == Z","(x-y)-(y+x) == Z","(x-y)-(x-y) == Z","(x-y)-S x == Z","(x-y)-(x+x) == Z","Z-len xs == Z","Z-len xs == Z","Z-len xs == Z","Z-S x == Z","Z-S x == Z","Z-S x == Z","Z-(x+x) == Z","Z-(x+x) == Z","Z-(x+x) == Z","count (len xs) [] == Z","count (len xs) [] == Z","count (len xs) [] == Z","count (S x) [] == Z","count (S x) [] == Z","count (S x) [] == Z","count (x+x) [] == Z","count (x+x) [] == Z","count (x+x) [] == Z","len xs-len xs == Z","len xs-len xs == Z","len xs-len xs == Z","S x-S x == Z","S x-S x == Z","S x-S x == Z","(x+x)-(x+x) == Z","(x+x)-(x+x) == Z","(x+x)-(x+x) == Z","Z-count Z xs == Z","Z-count Z xs == Z","Z-count Z xs == Z"]}}],[141.547246,{"PlainProof":{"prop_name":"drop (len xs) (drop x xs) == []","lemmas":[]}}],[142.551496,{"FailedProof":{"prop_name":"count (S x) (x:[]) == Z"}}],[142.55156,{"Discard":{"discarded":["count (S x) (x:[]) == Z","count (S x) (x:[]) == Z","count (count Z xs) [] == Z","count (count Z xs) [] == Z","count (count Z xs) [] == Z","count Z xs-len xs == Z","count Z xs-len xs == Z","count Z xs-len xs == Z","S Z-S x == Z","S Z-S x == Z","S Z-S x == Z","Z-S Z == Z","count (S Z) [] == Z","count (S x) (Z:[]) == Z","count (S x) (Z:[]) == Z","count (S x) (Z:[]) == Z","count Z xs-count Z xs == Z","count Z xs-count Z xs == Z","count Z xs-count Z xs == Z","S Z-S Z == Z","count (S Z) (Z:[]) == Z","filter p (filter p xs) == filter p xs","[]++filter p xs == filter p xs","drop Z (filter p xs) == filter p xs","filter p xs++[] == filter p xs","take (len xs) (filter p xs) == filter p xs","filter p (filter p xs) == filter p xs","[]++filter p xs == filter p xs","drop Z (filter p xs) == filter p xs","filter p xs++[] == filter p xs","take (len xs) (filter p xs) == filter p xs","filter p (filter p xs) == filter p xs","[]++filter p xs == filter p xs","drop Z (filter p xs) == filter p xs","filter p xs++[] == filter p xs","take (len xs) (filter p xs) == filter p xs","[]++(xs++ys) == xs++ys","drop Z (xs++ys) == xs++ys","(xs++ys)++[] == xs++ys","[]++(xs++ys) == xs++ys","drop Z (xs++ys) == xs++ys","(xs++ys)++[] == xs++ys","[]++(xs++ys) == xs++ys","drop Z (xs++ys) == xs++ys","(xs++ys)++[] == xs++ys","[]++(xs++ys) == xs++ys","drop Z (xs++ys) == xs++ys","(xs++ys)++[] == xs++ys","[]++(xs++ys) == xs++ys","drop Z (xs++ys) == xs++ys","(xs++ys)++[] == xs++ys","[]++(xs++ys) == xs++ys","drop Z (xs++ys) == xs++ys","(xs++ys)++[] == xs++ys","[]++(x:xs) == x:xs","drop Z (x:xs) == x:xs","(x:xs)++[] == x:xs","(x:[])++xs == x:xs","[]++(x:xs) == x:xs","drop Z (x:xs) == x:xs","(x:xs)++[] == x:xs","(x:[])++xs == x:xs","[]++(x:xs) == x:xs","drop Z (x:xs) == x:xs","(x:xs)++[] == x:xs","(x:[])++xs == x:xs","[]++(x:xs) == x:xs","drop Z (x:xs) == x:xs","(x:xs)++[] == x:xs","(x:[])++xs == x:xs","[]++(x:xs) == x:xs","drop Z (x:xs) == x:xs","(x:xs)++[] == x:xs","(x:[])++xs == x:xs","[]++(x:xs) == x:xs","drop Z (x:xs) == x:xs","(x:xs)++[] == x:xs","(x:[])++xs == x:xs","[]++(x:xs) == x:xs","drop Z (x:xs) == x:xs","(x:xs)++[] == x:xs","(x:[])++xs == x:xs","[]++(x:xs) == x:xs","drop Z (x:xs) == x:xs","(x:xs)++[] == x:xs","(x:[])++xs == x:xs","[]++(x:xs) == x:xs","drop Z (x:xs) == x:xs","(x:xs)++[] == x:xs","(x:[])++xs == x:xs","take x (take x xs) == take x xs","take (x+y) (take x xs) == take x xs","take (x+y) (take x xs) == take x xs","[]++take x xs == take x xs","drop Z (take x xs) == take x xs","take x xs++[] == take x xs","take (len xs) (take x xs) == take x xs","take (S x) (take x xs) == take x xs","take (x+x) (take x xs) == take x xs","take x (take x xs) == take x xs","take (x+y) (take x xs) == take x xs","take (x+y) (take x xs) == take x xs","[]++take x xs == take x xs","drop Z (take x xs) == take x xs","take x xs++[] == take x xs","take (len xs) (take x xs) == take x xs","take (S x) (take x xs) == take x xs","take (x+x) (take x xs) == take x xs","take x (take x xs) == take x xs","take (x+y) (take x xs) == take x xs","take (x+y) (take x xs) == take x xs","[]++take x xs == take x xs","drop Z (take x xs) == take x xs","take x xs++[] == take x xs","take (len xs) (take x xs) == take x xs","take (S x) (take x xs) == take x xs","take (x+x) (take x xs) == take x xs","take x (take x xs) == take x xs","take (x+y) (take y xs) == take y xs","take (x+y) (take x xs) == take x xs","[]++take x xs == take x xs","drop Z (take x xs) == take x xs","take x xs++[] == take x xs","take (len xs) (take x xs) == take x xs","take (S x) (take x xs) == take x xs","take (x+x) (take x xs) == take x xs","take x (take x xs) == take x xs","take (x+y) (take y xs) == take y xs","take (x+y) (take x xs) == take x xs","[]++take x xs == take x xs","drop Z (take x xs) == take x xs","take x xs++[] == take x xs","take (len xs) (take x xs) == take x xs","take (S x) (take x xs) == take x xs","take (x+x) (take x xs) == take x xs","take x (take x xs) == take x xs","take (x+y) (take y xs) == take y xs","take (x+y) (take x xs) == take x xs","[]++take x xs == take x xs","drop Z (take x xs) == take x xs","take x xs++[] == take x xs","take (len xs) (take x xs) == take x xs","take (S x) (take x xs) == take x xs","take (x+x) (take x xs) == take x xs","take x (take x xs) == take x xs","take (x+y) (take y xs) == take y xs","take (x+y) (take y xs) == take y xs","[]++take x xs == take x xs","drop Z (take x xs) == take x xs","take x xs++[] == take x xs","take (len xs) (take x xs) == take x xs","take (S x) (take x xs) == take x xs","take (x+x) (take x xs) == take x xs","take x (take x xs) == take x xs","take (x+y) (take y xs) == take y xs","take (x+y) (take y xs) == take y xs","[]++take x xs == take x xs","drop Z (take x xs) == take x xs","take x xs++[] == take x xs","take (len xs) (take x xs) == take x xs","take (S x) (take x xs) == take x xs","take (x+x) (take x xs) == take x xs","take x (take x xs) == take x xs","take (x+y) (take y xs) == take y xs","take (x+y) (take y xs) == take y xs","[]++take x xs == take x xs","drop Z (take x xs) == take x xs","take x xs++[] == take x xs","take (len xs) (take x xs) == take x xs","take (S x) (take x xs) == take x xs","take (x+x) (take x xs) == take x xs","drop (S x) (y:xs) == drop x xs","drop (S x) (y:xs) == drop x xs","[]++drop x xs == drop x xs","drop Z (drop x xs) == drop x xs","drop x xs++[] == drop x xs","take (len xs) (drop x xs) == drop x xs","drop (S x) (x:xs) == drop x xs","drop (S x) (Z:xs) == drop x xs","drop (S x) (y:xs) == drop x xs","drop (S x) (y:xs) == drop x xs","[]++drop x xs == drop x xs","drop Z (drop x xs) == drop x xs","drop x xs++[] == drop x xs","take (len xs) (drop x xs) == drop x xs","drop (S x) (x:xs) == drop x xs","drop (S x) (Z:xs) == drop x xs","drop (S x) (y:xs) == drop x xs","drop (S x) (y:xs) == drop x xs","[]++drop x xs == drop x xs","drop Z (drop x xs) == drop x xs","drop x xs++[] == drop x xs","take (len xs) (drop x xs) == drop x xs","drop (S x) (x:xs) == drop x xs","drop (S x) (Z:xs) == drop x xs","drop (S x) (y:xs) == drop x xs","drop (S x) (y:xs) == drop x xs","[]++drop x xs == drop x xs","drop Z (drop x xs) == drop x xs","drop x xs++[] == drop x xs","take (len xs) (drop x xs) == drop x xs","drop (S x) (x:xs) == drop x xs","drop (S x) (Z:xs) == drop x xs","drop (S x) (y:xs) == drop x xs","drop (S x) (y:xs) == drop x xs","[]++drop x xs == drop x xs","drop Z (drop x xs) == drop x xs","drop x xs++[] == drop x xs","take (len xs) (drop x xs) == drop x xs","drop (S x) (x:xs) == drop x xs","drop (S x) (Z:xs) == drop x xs","drop (S x) (y:xs) == drop x xs","drop (S x) (y:xs) == drop x xs","[]++drop x xs == drop x xs","drop Z (drop x xs) == drop x xs","drop x xs++[] == drop x xs","take (len xs) (drop x xs) == drop x xs","drop (S x) (x:xs) == drop x xs","drop (S x) (Z:xs) == drop x xs","drop (S x) (y:xs) == drop x xs","drop (S x) (y:xs) == drop x xs","[]++drop x xs == drop x xs","drop Z (drop x xs) == drop x xs","drop x xs++[] == drop x xs","take (len xs) (drop x xs) == drop x xs","drop (S x) (x:xs) == drop x xs","drop (S x) (Z:xs) == drop x xs","drop (S x) (y:xs) == drop x xs","drop (S x) (y:xs) == drop x xs","[]++drop x xs == drop x xs","drop Z (drop x xs) == drop x xs","drop x xs++[] == drop x xs","take (len xs) (drop x xs) == drop x xs","drop (S x) (x:xs) == drop x xs","drop (S x) (Z:xs) == drop x xs","drop (S x) (y:xs) == drop x xs","drop (S x) (y:xs) == drop x xs","[]++drop x xs == drop x xs","drop Z (drop x xs) == drop x xs","drop x xs++[] == drop x xs","take (len xs) (drop x xs) == drop x xs","drop (S x) (x:xs) == drop x xs","drop (S x) (Z:xs) == drop x xs","count x (rev xs) == count x xs","Z+count x xs == count x xs","count x xs+Z == count x xs","count x xs-Z == count x xs","count x (rev xs) == count x xs","Z+count x xs == count x xs","count x xs+Z == count x xs","count x xs-Z == count x xs","count x (rev xs) == count x xs","Z+count x xs == count x xs","count x xs+Z == count x xs","count x xs-Z == count x xs","count x (rev xs) == count x xs","Z+count x xs == count x xs","count x xs+Z == count x xs","count x xs-Z == count x xs","count x (rev xs) == count x xs","Z+count x xs == count x xs","count x xs+Z == count x xs","count x xs-Z == count x xs","count x (rev xs) == count x xs","Z+count x xs == count x xs","count x xs+Z == count x xs","count x xs-Z == count x xs","count x (rev xs) == count x xs","Z+count x xs == count x xs","count x xs+Z == count x xs","count x xs-Z == count x xs","count x (rev xs) == count x xs","Z+count x xs == count x xs","count x xs+Z == count x xs","count x xs-Z == count x xs","count x (rev xs) == count x xs","Z+count x xs == count x xs","count x xs+Z == count x xs","count x xs-Z == count x xs","x+y == y+x","Z+(x+y) == x+y","(x+y)+Z == x+y","(x+y)-Z == x+y","x+y == y+x","Z+(x+y) == x+y","(x+y)+Z == x+y","(x+y)-Z == x+y","x+y == y+x","Z+(x+y) == x+y","(x+y)+Z == x+y","(x+y)-Z == x+y","(x+y)-(z+y) == x-z","Z+(x-y) == x-y","(x-y)+Z == x-y","(x+y)-(y+y) == x-y","(x-y)-Z == x-y","(x-y)-(y-x) == x-y","S x-S y == x-y","(x+x)-(x+y) == x-y","(x+y)-(y+z) == x-z","Z+(x-y) == x-y","(x-y)+Z == x-y","(x+y)-(y+y) == x-y","(x-y)-Z == x-y","(x-y)-(y-x) == x-y","S x-S y == x-y","(x+x)-(x+y) == x-y","(x+y)-(z+y) == x-z","Z+(x-y) == x-y","(x-y)+Z == x-y","(x+y)-(x+x) == y-x","(x-y)-Z == x-y","(x-y)-(y-x) == x-y","S x-S y == x-y","(x+x)-(y+x) == x-y","(x+y)-(x+z) == y-z","Z+(x-y) == x-y","(x-y)+Z == x-y","(x+y)-(y+y) == x-y","(x-y)-Z == x-y","(x-y)-(y-x) == x-y","S x-S y == x-y","(x+x)-(x+y) == x-y","(x+y)-(z+x) == y-z","Z+(x-y) == x-y","(x-y)+Z == x-y","(x+y)-(x+x) == y-x","(x-y)-Z == x-y","(x-y)-(y-x) == x-y","S x-S y == x-y","(x+x)-(y+x) == x-y","(x+y)-(x+z) == y-z","Z+(x-y) == x-y","(x-y)+Z == x-y","(x+y)-(x+x) == y-x","(x-y)-Z == x-y","(x-y)-(y-x) == x-y","S x-S y == x-y","(x+x)-(y+x) == x-y","[]++rev xs == rev xs","drop Z (rev xs) == rev xs","rev xs++[] == rev xs","take (len xs) (rev xs) == rev xs","[]++rev xs == rev xs","drop Z (rev xs) == rev xs","rev xs++[] == rev xs","take (len xs) (rev xs) == rev xs","[]++rev xs == rev xs","drop Z (rev xs) == rev xs","rev xs++[] == rev xs","take (len xs) (rev xs) == rev xs","len (rev xs) == len xs","Z+len xs == len xs","len xs+Z == len xs","len xs-Z == len xs","len (rev xs) == len xs","Z+len xs == len xs","len xs+Z == len xs","len xs-Z == len xs","len (rev xs) == len xs","Z+len xs == len xs","len xs+Z == len xs","len xs-Z == len xs","x+S Z == S x","Z+S x == S x","S x+Z == S x","S x-Z == S x","S Z+x == S x","x+S Z == S x","Z+S x == S x","S x+Z == S x","S x-Z == S x","S Z+x == S x","x+S Z == S x","Z+S x == S x","S x+Z == S x","S x-Z == S x","S Z+x == S x","[]++(xs++xs) == xs++xs","drop Z (xs++xs) == xs++xs","(xs++xs)++[] == xs++xs","[]++(xs++xs) == xs++xs","drop Z (xs++xs) == xs++xs","(xs++xs)++[] == xs++xs","[]++(xs++xs) == xs++xs","drop Z (xs++xs) == xs++xs","(xs++xs)++[] == xs++xs","Z+(x+x) == x+x","(x+x)+Z == x+x","(x+x)-Z == x+x","Z+(x+x) == x+x","(x+x)+Z == x+x","(x+x)-Z == x+x","Z+(x+x) == x+x","(x+x)+Z == x+x","(x+x)-Z == x+x","rev (x:[]) == x:[]","take (S x) (y:[]) == y:[]","take (S x) (y:[]) == y:[]","take (S Z) (x:xs) == x:[]","take (S Z) (x:xs) == x:[]","take (S Z) (x:xs) == x:[]","[]++(x:[]) == x:[]","drop Z (x:[]) == x:[]","take (S x) (x:[]) == x:[]","(x:[])++[] == x:[]","take (S Z) (x:[]) == x:[]","rev (x:[]) == x:[]","take (S x) (y:[]) == y:[]","take (S x) (y:[]) == y:[]","take (S Z) (x:xs) == x:[]","take (S Z) (x:xs) == x:[]","take (S Z) (x:xs) == x:[]","[]++(x:[]) == x:[]","drop Z (x:[]) == x:[]","take (S x) (x:[]) == x:[]","(x:[])++[] == x:[]","take (S Z) (x:[]) == x:[]","rev (x:[]) == x:[]","take (S x) (y:[]) == y:[]","take (S x) (y:[]) == y:[]","take (S Z) (x:xs) == x:[]","take (S Z) (x:xs) == x:[]","take (S Z) (x:xs) == x:[]","[]++(x:[]) == x:[]","drop Z (x:[]) == x:[]","take (S x) (x:[]) == x:[]","(x:[])++[] == x:[]","take (S Z) (x:[]) == x:[]","[]++(Z:xs) == Z:xs","drop Z (Z:xs) == Z:xs","(Z:xs)++[] == Z:xs","(Z:[])++xs == Z:xs","[]++(Z:xs) == Z:xs","drop Z (Z:xs) == Z:xs","(Z:xs)++[] == Z:xs","(Z:[])++xs == Z:xs","[]++(Z:xs) == Z:xs","drop Z (Z:xs) == Z:xs","(Z:xs)++[] == Z:xs","(Z:[])++xs == Z:xs","Z+count Z xs == count Z xs","count Z xs+Z == count Z xs","count Z xs-Z == count Z xs","count Z (rev xs) == count Z xs","Z+count Z xs == count Z xs","count Z xs+Z == count Z xs","count Z xs-Z == count Z xs","count Z (rev xs) == count Z xs","Z+count Z xs == count Z xs","count Z xs+Z == count Z xs","count Z xs-Z == count Z xs","S x-x == S Z","S x-x == S Z","S x-x == S Z","len (x:[]) == S Z","len (x:[]) == S Z","len (x:[]) == S Z"]}}],[143.587901,{"FailedProof":{"prop_name":"count Z (rev xs) == count Z xs"}}],[144.584365,{"InductiveProof":{"prop_name":"count x (x:[]) == S Z","lemmas":[]}}],[144.58462,{"Discard":{"discarded":["count x (x:[]) == S Z","count x (x:[]) == S Z","len (Z:[]) == S Z","Z+S Z == S Z","S Z+Z == S Z","S Z-Z == S Z","count Z (Z:[]) == S Z","rev (Z:[]) == Z:[]","take (S x) (Z:[]) == Z:[]","take (S x) (Z:[]) == Z:[]","take (S x) (Z:[]) == Z:[]","take (S Z) (Z:xs) == Z:[]","take (S Z) (Z:xs) == Z:[]","take (S Z) (Z:xs) == Z:[]","[]++(Z:[]) == Z:[]","drop Z (Z:[]) == Z:[]","(Z:[])++[] == Z:[]","take (S Z) (Z:[]) == Z:[]","filter p xs++filter p ys == filter p (xs++ys)","filter p xs++filter p ys == filter p (xs++ys)","filter p xs++filter p ys == filter p (xs++ys)","filter p xs++filter p ys == filter p (xs++ys)","filter p xs++filter p ys == filter p (xs++ys)","filter p xs++filter p ys == filter p (xs++ys)","(xs++ys)++zs == xs++(ys++zs)","(xs++ys)++zs == xs++(ys++zs)","(xs++ys)++zs == xs++(ys++zs)","(xs++ys)++zs == xs++(ys++zs)","(xs++ys)++zs == xs++(ys++zs)","(xs++ys)++zs == xs++(ys++zs)","(x:[])++filter p xs == x:filter p xs","(x:[])++filter p xs == x:filter p xs","(x:[])++filter p xs == x:filter p xs","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","take (S x) (y:xs) == y:take x xs","(x:[])++take y xs == x:take y xs","take (S x) (y:xs) == y:take x xs","(x:[])++take y xs == x:take y xs","take (S x) (y:xs) == y:take x xs","(x:[])++take y xs == x:take y xs","take (S x) (y:xs) == y:take x xs","(x:[])++take y xs == x:take y xs","take (S x) (y:xs) == y:take x xs","(x:[])++take y xs == x:take y xs","take (S x) (y:xs) == y:take x xs","(x:[])++take y xs == x:take y xs","(x:[])++drop y xs == x:drop y xs","(x:[])++drop y xs == x:drop y xs","(x:[])++drop y xs == x:drop y xs","(x:[])++drop y xs == x:drop y xs","(x:[])++drop y xs == x:drop y xs","(x:[])++drop y xs == x:drop y xs","(x:[])++filter p xs == x:filter p xs","(x:[])++filter p xs == x:filter p xs","(x:[])++filter p xs == x:filter p xs","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","take (S x) (y:xs) == y:take x xs","(x:[])++take y xs == x:take y xs","take (S x) (y:xs) == y:take x xs","(x:[])++take y xs == x:take y xs","take (S x) (y:xs) == y:take x xs","(x:[])++take y xs == x:take y xs","take (S x) (y:xs) == y:take x xs","(x:[])++take y xs == x:take y xs","take (S x) (y:xs) == y:take x xs","(x:[])++take y xs == x:take y xs","take (S x) (y:xs) == y:take x xs","(x:[])++take y xs == x:take y xs","(x:[])++drop y xs == x:drop y xs","(x:[])++drop y xs == x:drop y xs","(x:[])++drop y xs == x:drop y xs","(x:[])++drop y xs == x:drop y xs","(x:[])++drop y xs == x:drop y xs","(x:[])++drop y xs == x:drop y xs","(x:[])++filter p xs == x:filter p xs","(x:[])++filter p xs == x:filter p xs","(x:[])++filter p xs == x:filter p xs","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","take (S x) (y:xs) == y:take x xs","(x:[])++take y xs == x:take y xs","take (S x) (y:xs) == y:take x xs","(x:[])++take y xs == x:take y xs","take (S x) (y:xs) == y:take x xs","(x:[])++take y xs == x:take y xs","take (S x) (y:xs) == y:take x xs","(x:[])++take y xs == x:take y xs","take (S x) (y:xs) == y:take x xs","(x:[])++take y xs == x:take y xs","take (S x) (y:xs) == y:take x xs","(x:[])++take y xs == x:take y xs","(x:[])++drop y xs == x:drop y xs","(x:[])++drop y xs == x:drop y xs","(x:[])++drop y xs == x:drop y xs","(x:[])++drop y xs == x:drop y xs","(x:[])++drop y xs == x:drop y xs","(x:[])++drop y xs == x:drop y xs","take x (take y xs) == take y (take x xs)","take x (take y xs) == take y (take x xs)","take x (take y xs) == take y (take x xs)","take x (take y xs) == take y (take x xs)","take x (take y xs) == take y (take x xs)","take x (take y xs) == take y (take x xs)","take x (take y xs) == take y (take x xs)","take x (take y xs) == take y (take x xs)","take x (take y xs) == take y (take x xs)","take (x-y) (drop y xs) == drop y (take x xs)","take (x-y) (drop y xs) == drop y (take x xs)","take (x-y) (drop y xs) == drop y (take x xs)","take (x-y) (drop y xs) == drop y (take x xs)","take (x-y) (drop y xs) == drop y (take x xs)","take (x-y) (drop y xs) == drop y (take x xs)","drop x (drop y xs) == drop y (drop x xs)","drop (x+y) xs == drop x (drop y xs)","drop x (drop y xs) == drop y (drop x xs)","drop (x+y) xs == drop x (drop y xs)","drop x (drop y xs) == drop y (drop x xs)","drop (x+y) xs == drop x (drop y xs)","drop x (drop y xs) == drop y (drop x xs)","drop (x+y) xs == drop x (drop y xs)","drop x (drop y xs) == drop y (drop x xs)","drop (x+y) xs == drop x (drop y xs)","drop x (drop y xs) == drop y (drop x xs)","drop (x+y) xs == drop x (drop y xs)","take (x-y) (drop y xs) == drop y (take x xs)","take (x-y) (drop y xs) == drop y (take x xs)","take (x-y) (drop y xs) == drop y (take x xs)","take (x-y) (drop y xs) == drop y (take x xs)","take (x-y) (drop y xs) == drop y (take x xs)","take (x-y) (drop y xs) == drop y (take x xs)","drop x (drop y xs) == drop y (drop x xs)","drop (x+y) xs == drop x (drop y xs)","drop x (drop y xs) == drop y (drop x xs)","drop (x+y) xs == drop x (drop y xs)","drop x (drop y xs) == drop y (drop x xs)","drop (x+y) xs == drop x (drop y xs)","take (x-y) (drop y xs) == drop y (take x xs)","take (x-y) (drop y xs) == drop y (take x xs)","take (x-y) (drop y xs) == drop y (take x xs)","take (x-y) (drop y xs) == drop y (take x xs)","take (x-y) (drop y xs) == drop y (take x xs)","take (x-y) (drop y xs) == drop y (take x xs)","count x (xs++ys) == count x (ys++xs)","count x xs+count x ys == count x (xs++ys)","count x (xs++ys) == count x (ys++xs)","count x xs+count x ys == count x (xs++ys)","count x xs+count x ys == count x (ys++xs)","count x (xs++ys) == count x (ys++xs)","count x xs+count x ys == count x (xs++ys)","count x xs+count x ys == count x (ys++xs)","count x (xs++ys) == count x (ys++xs)","count x xs+count x ys == count x (xs++ys)","count x xs+count x ys == count x (ys++xs)","count x (xs++ys) == count x (ys++xs)","count x xs+count x ys == count x (xs++ys)","count x xs+count x ys == count x (ys++xs)","count x (xs++ys) == count x (ys++xs)","count x xs+count x ys == count x (xs++ys)","count x xs+count x ys == count x (ys++xs)","count x (xs++ys) == count x (ys++xs)","count x xs+count x ys == count x (xs++ys)","count x xs+count x ys == count x (ys++xs)","count x (xs++ys) == count x (ys++xs)","count x xs+count x ys == count x (xs++ys)","count x xs+count x ys == count x (ys++xs)","count x (xs++ys) == count x (ys++xs)","count x xs+count x ys == count x (xs++ys)","count x xs+count x ys == count x (ys++xs)","count x xs+y == y+count x xs","count x xs+y == y+count x xs","count x xs+y == y+count x xs","count x xs+y == y+count x xs","count x xs+y == y+count x xs","count x xs+y == y+count x xs","x+(y+z) == y+(x+z)","x+(y+z) == y+(z+x)","(x+y)+z == x+(y+z)","(x+y)+z == x+(z+y)","(x+y)+z == z+(x+y)","(x-y)+z == z+(x-y)","(x-y)+z == z+(x-y)","count x xs+y == y+count x xs","count x xs+y == y+count x xs","count x xs+y == y+count x xs","count x xs+y == y+count x xs","count x xs+y == y+count x xs","count x xs+y == y+count x xs","(x-y)+z == z+(x-y)","(x-y)+z == z+(x-y)","count x xs+y == y+count x xs","count x xs+y == y+count x xs","count x xs+y == y+count x xs","count x xs+y == y+count x xs","count x xs+y == y+count x xs","count x xs+y == y+count x xs","(x-y)+z == z+(x-y)","(x-y)+z == z+(x-y)","(x-y)-z == x-(y+z)","(x-y)-z == x-(z+y)","(x-y)-z == x-(y+z)","(x-y)-z == x-(z+y)","(x-y)-z == x-(y+z)","(x-y)-z == x-(z+y)"]}}],[148.71784,{"FailedProof":{"prop_name":"count x ys+count x xs == count x (xs++ys)"}}],[154.775879,{"FailedProof":{"prop_name":"take (count y xs) (zs++zs) == take (count y xs) zs"}}],[154.775972,{"Discard":{"discarded":["take (count x xs) (ys++ys) == take (count x xs) ys","take (count x xs) (ys++ys) == take (count x xs) ys","take (x-y) (take x xs) == take (x-y) xs","take (x-y) (take x xs) == take (x-y) xs","take (x-y) (take x xs) == take (x-y) xs","take (x-y) (take x xs) == take (x-y) xs","take (x-y) (take x xs) == take (x-y) xs","take (x-y) (take x xs) == take (x-y) xs","take (x-y) (take x xs) == take (x-y) xs","take (x-y) (take x xs) == take (x-y) xs","take (x-y) (take x xs) == take (x-y) xs","take (x-y) (take x xs) == take (x-y) xs","take (x-y) (take x xs) == take (x-y) xs","take (x-y) (take x xs) == take (x-y) xs","take (x-y) (take x xs) == take (x-y) xs","take (x-y) (take x xs) == take (x-y) xs","take (x-y) (take x xs) == take (x-y) xs","take (x-y) (take x xs) == take (x-y) xs","take (x-y) (take x xs) == take (x-y) xs","take (x-y) (take x xs) == take (x-y) xs","count (count x xs) (rev ys) == count (count x xs) ys","count (count x xs) (rev ys) == count (count x xs) ys","count (count x xs) (rev ys) == count (count x xs) ys","count (count x xs) (rev ys) == count (count x xs) ys","count (count x xs) (rev ys) == count (count x xs) ys","count (count x xs) (rev ys) == count (count x xs) ys","count (count x xs) (rev ys) == count (count x xs) ys","count (count x xs) (rev ys) == count (count x xs) ys","count (count x xs) (rev ys) == count (count x xs) ys","count (count x xs) (rev ys) == count (count x xs) ys","count (count x xs) (rev ys) == count (count x xs) ys","count (count x xs) (rev ys) == count (count x xs) ys","count (count x xs) (rev ys) == count (count x xs) ys","count (count x xs) (rev ys) == count (count x xs) ys","count (count x xs) (rev ys) == count (count x xs) ys","count (count x xs) (rev ys) == count (count x xs) ys","count (count x xs) (rev ys) == count (count x xs) ys"]}}],[158.883192,{"FailedProof":{"prop_name":"count (count x xs) (rev ys) == count (count x xs) ys"}}],[163.439678,{"FailedProof":{"prop_name":"count (x+y) (rev xs) == count (x+y) xs"}}],[163.439756,{"Discard":{"discarded":["count (x+y) (rev xs) == count (x+y) xs","count (x+y) (rev xs) == count (x+y) xs","count (x+y) (rev xs) == count (x+y) xs","count (x+y) (rev xs) == count (x+y) xs","count (x+y) (rev xs) == count (x+y) xs","count (x+y) (rev xs) == count (x+y) xs","count (x+y) (rev xs) == count (x+y) xs","count (x+y) (rev xs) == count (x+y) xs","count (x-y) (rev xs) == count (x-y) xs","count (x-y) (rev xs) == count (x-y) xs","count (x-y) (rev xs) == count (x-y) xs","count (x-y) (rev xs) == count (x-y) xs","count (x-y) (rev xs) == count (x-y) xs","count (x-y) (rev xs) == count (x-y) xs","count (x-y) (rev xs) == count (x-y) xs","count (x-y) (rev xs) == count (x-y) xs","count (x-y) (rev xs) == count (x-y) xs","count (x-y) (rev xs) == count (x-y) xs","count (x-y) (rev xs) == count (x-y) xs","count (x-y) (rev xs) == count (x-y) xs","count (x-y) (rev xs) == count (x-y) xs","count (x-y) (rev xs) == count (x-y) xs","count (x-y) (rev xs) == count (x-y) xs","count (x-y) (rev xs) == count (x-y) xs","count (x-y) (rev xs) == count (x-y) xs","filter p (rev xs) == rev (filter p xs)","filter p (rev xs) == rev (filter p xs)","filter p (rev xs) == rev (filter p xs)","rev xs++rev ys == rev (ys++xs)","rev xs++rev ys == rev (ys++xs)","rev xs++rev ys == rev (ys++xs)","rev xs++rev ys == rev (ys++xs)","rev xs++rev ys == rev (ys++xs)","rev xs++rev ys == rev (ys++xs)","rev xs++(x:[]) == rev (x:xs)","rev xs++(x:[]) == rev (x:xs)","rev xs++(x:[]) == rev (x:xs)","rev xs++(x:[]) == rev (x:xs)","rev xs++(x:[]) == rev (x:xs)","rev xs++(x:[]) == rev (x:xs)","rev xs++(x:[]) == rev (x:xs)","rev xs++(x:[]) == rev (x:xs)","rev xs++(x:[]) == rev (x:xs)","len (xs++ys) == len (ys++xs)","len xs+len ys == len (xs++ys)","len xs+len ys == len (ys++xs)","len (xs++ys) == len (ys++xs)","len xs+len ys == len (xs++ys)","len xs+len ys == len (ys++xs)","len (xs++ys) == len (ys++xs)","len xs+len ys == len (xs++ys)","len xs+len ys == len (ys++xs)","len (x:xs) == len (y:xs)","len (x:xs) == len (y:xs)","S (len xs) == len (x:xs)","len (Z:xs) == len (x:xs)","len xs+S Z == len (x:xs)","S Z+len xs == len (x:xs)","len (x:xs) == len (y:xs)","len (x:xs) == len (y:xs)","S (len xs) == len (x:xs)","len (Z:xs) == len (x:xs)","len xs+S Z == len (x:xs)","S Z+len xs == len (x:xs)","len (x:xs) == len (y:xs)","len (x:xs) == len (y:xs)","S (len xs) == len (x:xs)","len (Z:xs) == len (x:xs)","len xs+S Z == len (x:xs)","S Z+len xs == len (x:xs)","len xs-x == len (drop x xs)","len xs-x == len (drop x xs)","len xs-x == len (drop x xs)","len xs-x == len (drop x xs)","len xs-x == len (drop x xs)","len xs-x == len (drop x xs)","len xs-x == len (drop x xs)","len xs-x == len (drop x xs)","len xs-x == len (drop x xs)","count x (x:xs) == S (count x xs)","count x xs+S Z == S (count x xs)","S Z+count x xs == S (count x xs)","count x (x:xs) == S (count x xs)","count x xs+S Z == S (count x xs)","S Z+count x xs == S (count x xs)","count x (x:xs) == S (count x xs)","count x xs+S Z == S (count x xs)","S Z+count x xs == S (count x xs)","count x (x:xs) == S (count x xs)","count x xs+S Z == S (count x xs)","S Z+count x xs == S (count x xs)","count x (x:xs) == S (count x xs)","count x xs+S Z == S (count x xs)","S Z+count x xs == S (count x xs)","count x (x:xs) == S (count x xs)","count x xs+S Z == S (count x xs)","S Z+count x xs == S (count x xs)","count x (x:xs) == S (count x xs)","count x xs+S Z == S (count x xs)","S Z+count x xs == S (count x xs)","count x (x:xs) == S (count x xs)","count x xs+S Z == S (count x xs)","S Z+count x xs == S (count x xs)","count x (x:xs) == S (count x xs)","count x xs+S Z == S (count x xs)","S Z+count x xs == S (count x xs)","x+S y == S (x+y)","x+S y == S (y+x)","S x+y == S (x+y)","S x+y == S (y+x)","(x+y)+S Z == S (x+y)","S Z+(x+y) == S (x+y)","x+S y == S (x+y)","x+S y == S (y+x)","S x+y == S (x+y)","S x+y == S (y+x)","(x+y)+S Z == S (x+y)","S Z+(x+y) == S (x+y)","x+S y == S (x+y)","x+S y == S (y+x)","S x+y == S (x+y)","S x+y == S (y+x)","(x+y)+S Z == S (x+y)","S Z+(x+y) == S (x+y)","(x-y)+S Z == S (x-y)","S Z+(x-y) == S (x-y)","(x-y)+S Z == S (x-y)","S Z+(x-y) == S (x-y)","(x-y)+S Z == S (x-y)","S Z+(x-y) == S (x-y)","(x-y)+S Z == S (x-y)","S Z+(x-y) == S (x-y)","(x-y)+S Z == S (x-y)","S Z+(x-y) == S (x-y)","(x-y)+S Z == S (x-y)","S Z+(x-y) == S (x-y)"]}}],[167.566297,{"FailedProof":{"prop_name":"count (x-y) (rev xs) == count (x-y) xs"}}],[169.59711,{"FailedProof":{"prop_name":"filter p xs++filter p xs == filter p (xs++xs)"}}],[169.597196,{"Discard":{"discarded":["filter p xs++filter p xs == filter p (xs++xs)","filter p xs++filter p xs == filter p (xs++xs)","(xs++xs)++ys == xs++(xs++ys)","(xs++xs)++ys == xs++(xs++ys)","(xs++ys)++xs == xs++(ys++xs)","(xs++ys)++xs == xs++(ys++xs)","(xs++ys)++ys == xs++(ys++ys)","(xs++ys)++ys == xs++(ys++ys)","(xs++ys)++xs == xs++(ys++xs)","(xs++xs)++ys == xs++(xs++ys)","(xs++xs)++ys == xs++(xs++ys)","(xs++ys)++xs == xs++(ys++xs)","(xs++ys)++ys == xs++(ys++ys)","(xs++ys)++ys == xs++(ys++ys)","(xs++ys)++xs == xs++(ys++xs)","(xs++ys)++xs == xs++(ys++xs)","(xs++xs)++ys == xs++(xs++ys)","(xs++xs)++ys == xs++(xs++ys)","(xs++ys)++ys == xs++(ys++ys)","(xs++ys)++ys == xs++(ys++ys)","(x:[])++(x:xs) == x:(x:xs)","(x:[])++(x:xs) == x:(x:xs)","(x:[])++(x:xs) == x:(x:xs)","take (S x) (x:xs) == x:take x xs","(x:[])++take x xs == x:take x xs","take (S x) (x:xs) == x:take x xs","(x:[])++take x xs == x:take x xs","take (S x) (x:xs) == x:take x xs","(x:[])++take x xs == x:take x xs","(x:[])++drop x xs == x:drop x xs","(x:[])++drop x xs == x:drop x xs","(x:[])++drop x xs == x:drop x xs","(x:[])++rev xs == x:rev xs","(x:[])++rev xs == x:rev xs","(x:[])++rev xs == x:rev xs","(x:xs)++xs == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","(x:xs)++xs == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","(x:xs)++xs == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","(x:[])++(x:xs) == x:(x:xs)","(x:[])++(x:xs) == x:(x:xs)","(x:[])++(x:xs) == x:(x:xs)","take (S x) (x:xs) == x:take x xs","(x:[])++take x xs == x:take x xs","take (S x) (x:xs) == x:take x xs","(x:[])++take x xs == x:take x xs","take (S x) (x:xs) == x:take x xs","(x:[])++take x xs == x:take x xs","(x:[])++drop x xs == x:drop x xs","(x:[])++drop x xs == x:drop x xs","(x:[])++drop x xs == x:drop x xs","(x:[])++rev xs == x:rev xs","(x:[])++rev xs == x:rev xs","(x:[])++rev xs == x:rev xs","(x:xs)++xs == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","(x:xs)++xs == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","(x:xs)++xs == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","(x:[])++(x:xs) == x:(x:xs)","(x:[])++(x:xs) == x:(x:xs)","(x:[])++(x:xs) == x:(x:xs)","take (S x) (x:xs) == x:take x xs","(x:[])++take x xs == x:take x xs","take (S x) (x:xs) == x:take x xs","(x:[])++take x xs == x:take x xs","take (S x) (x:xs) == x:take x xs","(x:[])++take x xs == x:take x xs","(x:[])++drop x xs == x:drop x xs","(x:[])++drop x xs == x:drop x xs","(x:[])++drop x xs == x:drop x xs","(x:[])++rev xs == x:rev xs","(x:[])++rev xs == x:rev xs","(x:[])++rev xs == x:rev xs","(x:xs)++xs == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","(x:xs)++xs == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","(x:xs)++xs == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","drop x (Z:xs) == drop x (x:xs)","drop x (Z:xs) == drop x (x:xs)","drop x (Z:xs) == drop x (x:xs)","drop (x+x) xs == drop x (drop x xs)","drop (x+x) xs == drop x (drop x xs)","drop (x+x) xs == drop x (drop x xs)","drop x (Z:xs) == drop x (x:xs)","drop x (Z:xs) == drop x (x:xs)","drop x (Z:xs) == drop x (x:xs)","drop (x+x) xs == drop x (drop x xs)","drop (x+x) xs == drop x (drop x xs)","drop (x+x) xs == drop x (drop x xs)","drop x (Z:xs) == drop x (x:xs)","drop x (Z:xs) == drop x (x:xs)","drop x (Z:xs) == drop x (x:xs)","drop (x+x) xs == drop x (drop x xs)","drop (x+x) xs == drop x (drop x xs)","drop (x+x) xs == drop x (drop x xs)","count x xs+count x xs == count x (xs++xs)","count x xs+count x xs == count x (xs++xs)","count x xs+count x xs == count x (xs++xs)","count x xs+count x xs == count x (xs++xs)","count x xs+count x xs == count x (xs++xs)","count x xs+count x xs == count x (xs++xs)","count x xs+count x xs == count x (xs++xs)","count x xs+count x xs == count x (xs++xs)","count x xs+x == x+count x xs","count x xs+x == x+count x xs","count x xs+x == x+count x xs","x+(y+y) == y+(y+x)","(x+y)+x == x+(x+y)","(x+x)+y == x+(x+y)","x+(y+y) == y+(y+x)","(x+y)+x == x+(x+y)","(x+x)+y == x+(x+y)","(x-y)+x == x+(x-y)","(x-y)+x == x+(x-y)","x+(y-x) == y+(x-y)","(x-y)+y == x+(y-x)","(x-y)+y == y+(x-y)","x+(y-x) == y+(x-y)","(x-y)+y == x+(y-x)","(x-y)+y == y+(x-y)","len xs+x == x+len xs","len xs+x == x+len xs","len xs+x == x+len xs","x+(y+x) == y+(x+x)","(x+y)+y == x+(y+y)","(x+x)+y == y+(x+x)","x+(y+x) == y+(x+x)","(x+y)+y == x+(y+y)","(x+x)+y == y+(x+x)","count x xs+x == x+count x xs","count x xs+x == x+count x xs","count x xs+x == x+count x xs","x+(y+y) == y+(y+x)","(x+y)+x == x+(x+y)","(x+x)+y == x+(x+y)","(x-y)+x == x+(x-y)","(x-y)+x == x+(x-y)","x+(y-x) == y+(x-y)","(x-y)+y == x+(y-x)","(x-y)+y == y+(x-y)","len xs+x == x+len xs","len xs+x == x+len xs","len xs+x == x+len xs","x+(y+x) == y+(x+x)","(x+y)+y == x+(y+y)","(x+x)+y == y+(x+x)","count x xs+x == x+count x xs","count x xs+x == x+count x xs","count x xs+x == x+count x xs","(x-y)+x == x+(x-y)","(x-y)+x == x+(x-y)","len xs+x == x+len xs","len xs+x == x+len xs","len xs+x == x+len xs","x-(x-y) == y-(y-x)","x-(x-y) == y-(y-x)","(x-y)-S Z == x-S y","(x-y)-S Z == x-S y","(x-y)-y == x-(y+y)","(x-y)-y == x-(y+y)","x-(x-y) == y-(y-x)","(x-y)-S Z == x-S y","(x-y)-S Z == x-S y","(x-y)-y == x-(y+y)","(x-y)-y == x-(y+y)","(x-y)-S Z == x-S y","(x-y)-S Z == x-S y","(x-y)-y == x-(y+y)","(x-y)-y == x-(y+y)","take (count x xs) (xs++ys) == take (count x xs) xs","take (count x xs) (xs++ys) == take (count x xs) xs"]}}],[171.648365,{"FailedProof":{"prop_name":"count x xs+count x xs == count x (xs++xs)"}}],[173.678927,{"FailedProof":{"prop_name":"take (count x xs) (xs++xs) == take (count x xs) xs"}}],[173.679022,{"Discard":{"discarded":["take (count x xs) (xs++ys) == take (count x xs) xs","take (count x xs) (xs++ys) == take (count x xs) xs","take (count x xs) (xs++xs) == take (count x xs) xs","take (count x xs) (xs++ys) == take (count x xs) xs","take (count x xs) (xs++ys) == take (count x xs) xs","take (count x xs) (xs++xs) == take (count x xs) xs","take (count x xs) (xs++ys) == take (count x xs) xs","take (count x xs) (xs++ys) == take (count x xs) xs","take (count x xs) (xs++xs) == take (count x xs) xs","take (count x xs) (xs++ys) == take (count x xs) xs","take (count x xs) (xs++ys) == take (count x xs) xs","take (count x xs) (xs++xs) == take (count x xs) xs","take (count x xs) (xs++ys) == take (count x xs) xs","take (count x xs) (xs++ys) == take (count x xs) xs","take (count x xs) (xs++xs) == take (count x xs) xs","take (count x xs) (xs++ys) == take (count x xs) xs","take (count x xs) (xs++ys) == take (count x xs) xs","take (count x xs) (xs++xs) == take (count x xs) xs","take (count x xs) (xs++ys) == take (count x xs) xs","take (count x xs) (xs++ys) == take (count x xs) xs","take (count x xs) (xs++xs) == take (count x xs) xs","take (count x xs) (xs++ys) == take (count x xs) xs","take (count x xs) (xs++ys) == take (count x xs) xs","take (count x xs) (xs++xs) == take (count x xs) xs","count (count x xs) (rev xs) == count (count x xs) xs","count (count x xs) (rev xs) == count (count x xs) xs","count (count x xs) (rev xs) == count (count x xs) xs","count (count x xs) (rev xs) == count (count x xs) xs","count (count x xs) (rev xs) == count (count x xs) xs","count (count x xs) (rev xs) == count (count x xs) xs","count (count x xs) (rev xs) == count (count x xs) xs","count (count x xs) (rev xs) == count (count x xs) xs","drop (S Z) (drop x xs) == drop (S x) xs","drop (S Z) (drop x xs) == drop (S x) xs","drop (S Z) (drop x xs) == drop (S x) xs","drop (S Z) (drop x xs) == drop (S x) xs","drop (S Z) (drop x xs) == drop (S x) xs","drop (S Z) (drop x xs) == drop (S x) xs","drop (S Z) (drop x xs) == drop (S x) xs","drop (S Z) (drop x xs) == drop (S x) xs","drop (S Z) (drop x xs) == drop (S x) xs"]}}],[175.720867,{"FailedProof":{"prop_name":"count (count x xs) (rev xs) == count (count x xs) xs"}}],[177.749253,{"FailedProof":{"prop_name":"count (len xs) (rev ys) == count (len xs) ys"}}],[177.749332,{"Discard":{"discarded":["count (len xs) (rev ys) == count (len xs) ys","count (len xs) (rev ys) == count (len xs) ys","count (len xs) (rev ys) == count (len xs) ys","count (len xs) (rev ys) == count (len xs) ys","count (len xs) (rev ys) == count (len xs) ys","count (S x) (x:xs) == count (S x) xs","count (S x) (Z:xs) == count (S x) xs","count (S x) (x:xs) == count (S x) xs","count (S x) (rev xs) == count (S x) xs","count (S x) (Z:xs) == count (S x) xs","count (S x) (x:xs) == count (S x) xs","count (S x) (rev xs) == count (S x) xs","count (S x) (Z:xs) == count (S x) xs","count (S x) (x:xs) == count (S x) xs","count (S x) (rev xs) == count (S x) xs","count (S x) (Z:xs) == count (S x) xs","count (S x) (x:xs) == count (S x) xs","count (S x) (rev xs) == count (S x) xs","count (S x) (Z:xs) == count (S x) xs","count (S x) (x:xs) == count (S x) xs","count (S x) (rev xs) == count (S x) xs","count (S x) (Z:xs) == count (S x) xs","count (S x) (x:xs) == count (S x) xs","count (S x) (rev xs) == count (S x) xs","count (S x) (Z:xs) == count (S x) xs","count (S x) (x:xs) == count (S x) xs","count (S x) (rev xs) == count (S x) xs","count (S x) (Z:xs) == count (S x) xs","count (S x) (x:xs) == count (S x) xs","count (S x) (rev xs) == count (S x) xs","count (S x) (Z:xs) == count (S x) xs"]}}],[179.791589,{"FailedProof":{"prop_name":"count (S x) (rev xs) == count (S x) xs"}}],[181.821525,{"FailedProof":{"prop_name":"count (x+x) (rev xs) == count (x+x) xs"}}],[181.821606,{"Discard":{"discarded":["count (x+x) (rev xs) == count (x+x) xs","count (x+x) (rev xs) == count (x+x) xs","count (x+x) (rev xs) == count (x+x) xs","count (x+x) (rev xs) == count (x+x) xs","count (x+x) (rev xs) == count (x+x) xs","count (x+x) (rev xs) == count (x+x) xs","count (x+x) (rev xs) == count (x+x) xs","count (x+x) (rev xs) == count (x+x) xs","rev xs++rev xs == rev (xs++xs)","rev xs++rev xs == rev (xs++xs)","len xs+len xs == len (xs++xs)","len xs+len xs == len (xs++xs)","len xs+len xs == len (xs++xs)","S x+S Z == S (S x)","S Z+S x == S (S x)","S x+S Z == S (S x)","S Z+S x == S (S x)","S x+S Z == S (S x)","S Z+S x == S (S x)","x+S x == S (x+x)","S x+x == S (x+x)","(x+x)+S Z == S (x+x)","S Z+(x+x) == S (x+x)","x+S x == S (x+x)","S x+x == S (x+x)","(x+x)+S Z == S (x+x)","S Z+(x+x) == S (x+x)","x+S x == S (x+x)","S x+x == S (x+x)","(x+x)+S Z == S (x+x)","S Z+(x+x) == S (x+x)","(xs++xs)++xs == xs++(xs++xs)","(xs++xs)++xs == xs++(xs++xs)","(xs++xs)++xs == xs++(xs++xs)","(x+x)+x == x+(x+x)","(x+x)+x == x+(x+x)","(x+x)+x == x+(x+x)"]}}],[182.84516,{"FailedProof":{"prop_name":"rev xs++rev xs == rev (xs++xs)"}}],[183.857861,{"FailedProof":{"prop_name":"count (len xs) (rev xs) == count (len xs) xs"}}],[183.857931,{"Discard":{"discarded":["count (len xs) (rev xs) == count (len xs) xs","count (len xs) (rev xs) == count (len xs) xs","drop (x+y) (drop z xs) == drop (x+z) (drop y xs)","drop (x+y) (drop z xs) == drop (z+x) (drop y xs)","drop (x+y) (drop z xs) == drop (x+z) (drop y xs)","drop (x+y) (drop z xs) == drop (z+x) (drop y xs)","drop (x+y) (drop z xs) == drop (x+z) (drop y xs)","drop (x+y) (drop z xs) == drop (z+x) (drop y xs)","count (count x xs) (ys++zs) == count (count x xs) (zs++ys)","count (count x xs) (ys++zs) == count (count x xs) (zs++ys)","count (count x xs) (ys++zs) == count (count x xs) (zs++ys)","count (count x xs) (ys++zs) == count (count x xs) (zs++ys)","count (count x xs) (ys++zs) == count (count x xs) (zs++ys)","count (count x xs) (ys++zs) == count (count x xs) (zs++ys)","count (count x xs) (ys++zs) == count (count x xs) (zs++ys)","count (count x xs) (ys++zs) == count (count x xs) (zs++ys)"]}}],[192.496003,{"FailedProof":{"prop_name":"count (count x xs) (zs++ys) == count (count x xs) (ys++zs)"}}],[201.005295,{"FailedProof":{"prop_name":"count (x+y) (ys++xs) == count (x+y) (xs++ys)"}}],[201.00539,{"Discard":{"discarded":["count (x+y) (xs++ys) == count (x+y) (ys++xs)","count (x+y) (xs++ys) == count (x+y) (ys++xs)","count (x+y) (xs++ys) == count (x+y) (ys++xs)","count (x+y) (xs++ys) == count (x+y) (ys++xs)","count (x+y) (xs++ys) == count (x+y) (ys++xs)","count (x+y) (xs++ys) == count (x+y) (ys++xs)","count (x+y) (xs++ys) == count (x+y) (ys++xs)","count (x+y) (xs++ys) == count (x+y) (ys++xs)","count (x-y) (xs++ys) == count (x-y) (ys++xs)","count (x-y) (xs++ys) == count (x-y) (ys++xs)","count (x-y) (xs++ys) == count (x-y) (ys++xs)","count (x-y) (xs++ys) == count (x-y) (ys++xs)","count (x-y) (xs++ys) == count (x-y) (ys++xs)","count (x-y) (xs++ys) == count (x-y) (ys++xs)","count (x-y) (xs++ys) == count (x-y) (ys++xs)","count (x-y) (xs++ys) == count (x-y) (ys++xs)","count (x-y) (xs++ys) == count (x-y) (ys++xs)","count (x-y) (xs++ys) == count (x-y) (ys++xs)","count (x-y) (xs++ys) == count (x-y) (ys++xs)","count (x-y) (xs++ys) == count (x-y) (ys++xs)","count (x-y) (xs++ys) == count (x-y) (ys++xs)","count (x-y) (xs++ys) == count (x-y) (ys++xs)","count (x-y) (xs++ys) == count (x-y) (ys++xs)","count (x-y) (xs++ys) == count (x-y) (ys++xs)","count (x-y) (xs++ys) == count (x-y) (ys++xs)","count x xs+count y ys == count y ys+count x xs","count x xs+count y ys == count y ys+count x xs","count x xs+count y ys == count y ys+count x xs","count x xs+count y ys == count y ys+count x xs","(x+y)+count z xs == count z xs+(x+y)","(x-y)+count z xs == count z xs+(x-y)","(x-y)+count z xs == count z xs+(x-y)","count x xs+count y ys == count y ys+count x xs","count x xs+count y ys == count y ys+count x xs","count x xs+count y ys == count y ys+count x xs","count x xs+count y ys == count y ys+count x xs","(x+y)+count z xs == count z xs+(x+y)","(x-y)+count z xs == count z xs+(x-y)","(x-y)+count z xs == count z xs+(x-y)","count x xs+count y ys == count y ys+count x xs","count x xs+count y ys == count y ys+count x xs","count x xs+count y ys == count y ys+count x xs","count x xs+count y ys == count y ys+count x xs","(x+y)+count z xs == count z xs+(x+y)","(x-y)+count z xs == count z xs+(x-y)","(x-y)+count z xs == count z xs+(x-y)","count x xs+count y ys == count y ys+count x xs","count x xs+count y ys == count y ys+count x xs","(x+y)+count z xs == count z xs+(x+y)","(x-y)+count z xs == count z xs+(x-y)","(x-y)+count z xs == count z xs+(x-y)","count x xs+count y ys == count y ys+count x xs","count x xs+count y ys == count y ys+count x xs","(x+y)+count z xs == count z xs+(x+y)","(x-y)+count z xs == count z xs+(x-y)","(x-y)+count z xs == count z xs+(x-y)","count x xs+count y ys == count y ys+count x xs","count x xs+count y ys == count y ys+count x xs","(x+y)+count z xs == count z xs+(x+y)","(x-y)+count z xs == count z xs+(x-y)","(x-y)+count z xs == count z xs+(x-y)","(x+y)+count z xs == count z xs+(x+y)","(x-y)+count z xs == count z xs+(x-y)","(x-y)+count z xs == count z xs+(x-y)","(x+y)+count z xs == count z xs+(x+y)","(x-y)+count z xs == count z xs+(x-y)","(x-y)+count z xs == count z xs+(x-y)","(x+y)+count z xs == count z xs+(x+y)","(x-y)+count z xs == count z xs+(x-y)","(x-y)+count z xs == count z xs+(x-y)","drop (x+y) (y:xs) == drop (x+y) (x:xs)","drop (x+y) (Z:xs) == drop (x+y) (x:xs)","drop (x+y) (y:xs) == drop (x+y) (x:xs)","drop (x+y) (Z:xs) == drop (x+y) (x:xs)","drop (x+y) (y:xs) == drop (x+y) (x:xs)","drop (x+y) (Z:xs) == drop (x+y) (x:xs)","drop (x+x) (drop y xs) == drop (x+y) (drop x xs)","drop (x+x) (drop y xs) == drop (x+y) (drop x xs)","drop (x+x) (drop y xs) == drop (x+y) (drop x xs)","drop (x+x) (drop y xs) == drop (y+x) (drop x xs)","drop (x+x) (drop y xs) == drop (y+x) (drop x xs)","drop (x+x) (drop y xs) == drop (y+x) (drop x xs)","drop (x+y) (y:xs) == drop (x+y) (x:xs)","drop (x+y) (Z:xs) == drop (x+y) (x:xs)","drop (x+y) (y:xs) == drop (x+y) (x:xs)","drop (x+y) (Z:xs) == drop (x+y) (x:xs)","drop (x+y) (y:xs) == drop (x+y) (x:xs)","drop (x+y) (Z:xs) == drop (x+y) (x:xs)","drop (x+x) (drop y xs) == drop (x+y) (drop x xs)","drop (x+x) (drop y xs) == drop (x+y) (drop x xs)","drop (x+x) (drop y xs) == drop (x+y) (drop x xs)","drop (x+x) (drop y xs) == drop (y+x) (drop x xs)","drop (x+x) (drop y xs) == drop (y+x) (drop x xs)","drop (x+x) (drop y xs) == drop (y+x) (drop x xs)","drop (x+y) (y:xs) == drop (x+y) (x:xs)","drop (x+y) (Z:xs) == drop (x+y) (x:xs)","drop (x+y) (y:xs) == drop (x+y) (x:xs)","drop (x+y) (Z:xs) == drop (x+y) (x:xs)","drop (x+y) (y:xs) == drop (x+y) (x:xs)","drop (x+y) (Z:xs) == drop (x+y) (x:xs)","drop (x+x) (drop y xs) == drop (x+y) (drop x xs)","drop (x+x) (drop y xs) == drop (x+y) (drop x xs)","drop (x+x) (drop y xs) == drop (x+y) (drop x xs)","drop (x+x) (drop y xs) == drop (y+x) (drop x xs)","drop (x+x) (drop y xs) == drop (y+x) (drop x xs)","drop (x+x) (drop y xs) == drop (y+x) (drop x xs)","drop (x-y) (drop y xs) == drop (y-x) (drop x xs)","drop (x-y) (drop y xs) == drop (y-x) (drop x xs)","drop (x-y) (drop y xs) == drop (y-x) (drop x xs)","drop (x-y) (drop y xs) == drop (y-x) (drop x xs)","drop (x-y) (drop y xs) == drop (y-x) (drop x xs)","drop (x-y) (drop y xs) == drop (y-x) (drop x xs)","drop (x-y) (drop y xs) == drop (y-x) (drop x xs)","drop (x-y) (drop y xs) == drop (y-x) (drop x xs)","drop (x-y) (drop y xs) == drop (y-x) (drop x xs)"]}}],[209.957513,{"FailedProof":{"prop_name":"count (x-y) (ys++xs) == count (x-y) (xs++ys)"}}],[214.042138,{"FailedProof":{"prop_name":"count (count x xs) (ys++xs) == count (count x xs) (xs++ys)"}}],[214.042627,{"Discard":{"discarded":["count (count x xs) (ys++xs) == count (count x xs) (xs++ys)","count (count x xs) (ys++xs) == count (count x xs) (xs++ys)","count (count x xs) (xs++ys) == count (count x xs) (ys++xs)","count (count x xs) (xs++ys) == count (count x xs) (ys++xs)","count (count x xs) (ys++xs) == count (count x xs) (xs++ys)","count (count x xs) (ys++xs) == count (count x xs) (xs++ys)","count (count x xs) (xs++ys) == count (count x xs) (ys++xs)","count (count x xs) (ys++xs) == count (count x xs) (xs++ys)","count (count x xs) (xs++ys) == count (count x xs) (ys++xs)","count (count x xs) (xs++ys) == count (count x xs) (ys++xs)","count (count x xs) (ys++xs) == count (count x xs) (xs++ys)","count (count x xs) (ys++xs) == count (count x xs) (xs++ys)","count (count x xs) (xs++ys) == count (count x xs) (ys++xs)","count (count x xs) (ys++xs) == count (count x xs) (xs++ys)","count (count x xs) (xs++ys) == count (count x xs) (ys++xs)","count (count x xs) (xs++ys) == count (count x xs) (ys++xs)","count x xs+count y xs == count y xs+count x xs","count x xs+count y xs == count y xs+count x xs","(x+y)+count x xs == count x xs+(x+y)","(x+y)+count x xs == count x xs+(x+y)","(x-y)+count x xs == count x xs+(x-y)","(x-y)+count x xs == count x xs+(x-y)","(x-y)+count y xs == count y xs+(x-y)","(x-y)+count y xs == count y xs+(x-y)","len xs+count x ys == count x ys+len xs","len xs+count x ys == count x ys+len xs","S x+count y xs == count y xs+S x","S x+count y xs == count y xs+S x","(x+x)+count y xs == count y xs+(x+x)","(x+x)+count y xs == count y xs+(x+x)","count x xs+count y xs == count y xs+count x xs","count x xs+count y xs == count y xs+count x xs","(x+y)+count x xs == count x xs+(x+y)","(x+y)+count x xs == count x xs+(x+y)","(x-y)+count x xs == count x xs+(x-y)","(x-y)+count x xs == count x xs+(x-y)","(x-y)+count y xs == count y xs+(x-y)","(x-y)+count y xs == count y xs+(x-y)","len xs+count x ys == count x ys+len xs","len xs+count x ys == count x ys+len xs","S x+count y xs == count y xs+S x","S x+count y xs == count y xs+S x","(x+x)+count y xs == count y xs+(x+x)","(x+x)+count y xs == count y xs+(x+x)","count x xs+count y xs == count y xs+count x xs","count x xs+count y xs == count y xs+count x xs","(x+y)+count x xs == count x xs+(x+y)","(x+y)+count x xs == count x xs+(x+y)","(x-y)+count x xs == count x xs+(x-y)","(x-y)+count x xs == count x xs+(x-y)","(x-y)+count y xs == count y xs+(x-y)","(x-y)+count y xs == count y xs+(x-y)","len xs+count x ys == count x ys+len xs","len xs+count x ys == count x ys+len xs","S x+count y xs == count y xs+S x","S x+count y xs == count y xs+S x","(x+x)+count y xs == count y xs+(x+x)","(x+x)+count y xs == count y xs+(x+x)","count x xs+count y xs == count y xs+count x xs","(x+y)+count y xs == count y xs+(x+y)","(x+y)+count x xs == count x xs+(x+y)","(x-y)+count y xs == count y xs+(x-y)","(x-y)+count x xs == count x xs+(x-y)","(x-y)+count x xs == count x xs+(x-y)","(x-y)+count y xs == count y xs+(x-y)","len xs+count x ys == count x ys+len xs","len xs+count x ys == count x ys+len xs","S x+count y xs == count y xs+S x","S x+count y xs == count y xs+S x","(x+x)+count y xs == count y xs+(x+x)","(x+x)+count y xs == count y xs+(x+x)","count x xs+count y xs == count y xs+count x xs","(x+y)+count y xs == count y xs+(x+y)","(x+y)+count x xs == count x xs+(x+y)","(x-y)+count y xs == count y xs+(x-y)","(x-y)+count x xs == count x xs+(x-y)","(x-y)+count x xs == count x xs+(x-y)","(x-y)+count y xs == count y xs+(x-y)","len xs+count x ys == count x ys+len xs","len xs+count x ys == count x ys+len xs","S x+count y xs == count y xs+S x","S x+count y xs == count y xs+S x","(x+x)+count y xs == count y xs+(x+x)","(x+x)+count y xs == count y xs+(x+x)","count x xs+count y xs == count y xs+count x xs","(x+y)+count y xs == count y xs+(x+y)","(x+y)+count x xs == count x xs+(x+y)","(x-y)+count y xs == count y xs+(x-y)","(x-y)+count x xs == count x xs+(x-y)","(x-y)+count x xs == count x xs+(x-y)","(x-y)+count y xs == count y xs+(x-y)","len xs+count x ys == count x ys+len xs","len xs+count x ys == count x ys+len xs","S x+count y xs == count y xs+S x","S x+count y xs == count y xs+S x","(x+x)+count y xs == count y xs+(x+x)","(x+x)+count y xs == count y xs+(x+x)","(x+y)+count y xs == count y xs+(x+y)","(x+y)+count y xs == count y xs+(x+y)","(x-y)+count y xs == count y xs+(x-y)","(x-y)+count y xs == count y xs+(x-y)","(x-y)+count x xs == count x xs+(x-y)","(x-y)+count x xs == count x xs+(x-y)","len xs+count x ys == count x ys+len xs","len xs+count x ys == count x ys+len xs","S x+count y xs == count y xs+S x","S x+count y xs == count y xs+S x","(x+x)+count y xs == count y xs+(x+x)","(x+x)+count y xs == count y xs+(x+x)","(x+y)+count y xs == count y xs+(x+y)","(x+y)+count y xs == count y xs+(x+y)","(x-y)+count y xs == count y xs+(x-y)","(x-y)+count y xs == count y xs+(x-y)","(x-y)+count x xs == count x xs+(x-y)","(x-y)+count x xs == count x xs+(x-y)","len xs+count x ys == count x ys+len xs","len xs+count x ys == count x ys+len xs","S x+count y xs == count y xs+S x","S x+count y xs == count y xs+S x","(x+x)+count y xs == count y xs+(x+x)","(x+x)+count y xs == count y xs+(x+x)","(x+y)+count y xs == count y xs+(x+y)","(x+y)+count y xs == count y xs+(x+y)","(x-y)+count y xs == count y xs+(x-y)","(x-y)+count y xs == count y xs+(x-y)","(x-y)+count x xs == count x xs+(x-y)","(x-y)+count x xs == count x xs+(x-y)","len xs+count x ys == count x ys+len xs","len xs+count x ys == count x ys+len xs","S x+count y xs == count y xs+S x","S x+count y xs == count y xs+S x","(x+x)+count y xs == count y xs+(x+x)","(x+x)+count y xs == count y xs+(x+x)","(x+y)+(x+z) == (x+z)+(x+y)","(x+y)+(z+z) == (z+x)+(z+y)","(x+x)+(y+z) == (x+y)+(x+z)","(x+y)+(z+z) == (x+z)+(z+y)","(x+y)+(z+x) == (z+x)+(x+y)","(x+x)+(y+z) == (y+x)+(x+z)","(x-y)+(x+z) == (x+z)+(x-y)","(x-y)+(z+x) == (z+x)+(x-y)","(x+y)+(z-y) == (z+x)+(y-z)","(x-y)+(z+y) == (x+z)+(y-x)","(x-y)+(y+z) == (y+z)+(x-y)","(x+y)+(z-y) == (x+z)+(y-z)","(x-y)+(z+y) == (z+x)+(y-x)","(x-y)+(z+y) == (z+y)+(x-y)","len xs+(x+y) == (x+y)+len xs","len xs+(x+y) == (x+y)+len xs","len xs+(x+y) == (x+y)+len xs","(x+y)+S z == (x+z)+S y","(x+y)+S z == (z+x)+S y","S x+(y+z) == (x+y)+S z","S x+(y+z) == (y+x)+S z","S x+(y+z) == (y+z)+S x","(x+y)+(z+y) == (x+z)+(y+y)","(x+y)+(z+y) == (z+x)+(y+y)","(x+x)+(y+z) == (y+z)+(x+x)","(x-y)+(x+z) == (x+z)+(x-y)","(x+y)+(z-x) == (z+y)+(x-z)","(x-y)+(y+z) == (x+z)+(y-x)","(x-y)+(y+z) == (y+z)+(x-y)","(x-y)+(z+x) == (z+x)+(x-y)","len xs+(x+y) == (x+y)+len xs","len xs+(x+y) == (x+y)+len xs","len xs+(x+y) == (x+y)+len xs","(x-y)+(x+z) == (x+z)+(x-y)","(x-y)+(z+x) == (z+x)+(x-y)","len xs+(x+y) == (x+y)+len xs","len xs+(x+y) == (x+y)+len xs","len xs+(x+y) == (x+y)+len xs","(x-y)+(x-z) == (x-z)+(x-y)","(x-y)+(z-x) == (z-x)+(x-y)","(x-y)+(y-z) == (y-z)+(x-y)","(x-y)+(z-y) == (z-y)+(x-y)","len xs+(x-y) == (x-y)+len xs","len xs+(x-y) == (x-y)+len xs","len xs+(x-y) == (x-y)+len xs","S x+(y-z) == (y-z)+S x","(x+x)+(y-z) == (y-z)+(x+x)","(x-y)+(y-z) == (y-z)+(x-y)","(x-y)+(z-y) == (z-y)+(x-y)","(x-y)+(z-x) == (z-x)+(x-y)","len xs+(x-y) == (x-y)+len xs","len xs+(x-y) == (x-y)+len xs","len xs+(x-y) == (x-y)+len xs","S x+(y-z) == (y-z)+S x","(x+x)+(y-z) == (y-z)+(x+x)","(x-y)+(x-z) == (x-z)+(x-y)","(x-y)+(z-y) == (z-y)+(x-y)","(x-y)+(y-z) == (y-z)+(x-y)","len xs+(x-y) == (x-y)+len xs","len xs+(x-y) == (x-y)+len xs","len xs+(x-y) == (x-y)+len xs","S x+(y-z) == (y-z)+S x","(x+x)+(y-z) == (y-z)+(x+x)","(x-y)+(z-x) == (z-x)+(x-y)","len xs+(x-y) == (x-y)+len xs","len xs+(x-y) == (x-y)+len xs","len xs+(x-y) == (x-y)+len xs","S x+(y-z) == (y-z)+S x","(x+x)+(y-z) == (y-z)+(x+x)","(x-y)+(x-z) == (x-z)+(x-y)","len xs+(x-y) == (x-y)+len xs","len xs+(x-y) == (x-y)+len xs","len xs+(x-y) == (x-y)+len xs","S x+(y-z) == (y-z)+S x","(x+x)+(y-z) == (y-z)+(x+x)","len xs+(x-y) == (x-y)+len xs","len xs+(x-y) == (x-y)+len xs","len xs+(x-y) == (x-y)+len xs","S x+(y-z) == (y-z)+S x","(x+x)+(y-z) == (y-z)+(x+x)"]}}],[218.171057,{"FailedProof":{"prop_name":"count (count x ys) (ys++xs) == count (count x ys) (xs++ys)"}}],[220.52002,{"InductiveProof":{"prop_name":"(y+z)-(z-x) == (x+y)-(x-z)","lemmas":[]}}],[220.520525,{"Discard":{"discarded":["(x+y)-(y-z) == (x+z)-(z-y)","(x+y)-(x-z) == (z+y)-(z-x)","(x-y)-(z+z) == (x-z)-(z+y)","(x-y)-(x-z) == (z-y)-(z-x)","(x-y)-(z-y) == (x-z)-(y-z)","(x-y)-S z == (x-z)-S y","(x-y)-(z+y) == (x-z)-(y+y)","(x-y)-(x-z) == (z-y)-(z-x)","(x-y)-(z+z) == (x-z)-(z+y)","(x-y)-(x-z) == (z-y)-(z-x)","(x-y)-(z-y) == (x-z)-(y-z)","(x-y)-S z == (x-z)-S y","(x-y)-(z+y) == (x-z)-(y+y)","(x-y)-(z+z) == (x-z)-(z+y)","(x-y)-(z-y) == (x-z)-(y-z)","(x-y)-S z == (x-z)-S y","(x-y)-(z+y) == (x-z)-(y+y)","drop (S x) (drop y xs) == drop (S y) (drop x xs)","drop (S x) (drop y xs) == drop (S y) (drop x xs)","drop (S x) (drop y xs) == drop (S y) (drop x xs)","drop (S x) (drop y xs) == drop (S y) (drop x xs)","drop (S x) (drop y xs) == drop (S y) (drop x xs)","drop (S x) (drop y xs) == drop (S y) (drop x xs)","drop (S x) (drop y xs) == drop (S y) (drop x xs)","drop (S x) (drop y xs) == drop (S y) (drop x xs)","drop (S x) (drop y xs) == drop (S y) (drop x xs)","count (len xs) (ys++zs) == count (len xs) (zs++ys)","count (len xs) (ys++zs) == count (len xs) (zs++ys)"]}}],[224.640393,{"FailedProof":{"prop_name":"count (len xs) (zs++ys) == count (len xs) (ys++zs)"}}],[228.742494,{"FailedProof":{"prop_name":"count (S x) (ys++xs) == count (S x) (xs++ys)"}}],[228.74257,{"Discard":{"discarded":["count (S x) (xs++ys) == count (S x) (ys++xs)","count (S x) (xs++ys) == count (S x) (ys++xs)","count (S x) (xs++ys) == count (S x) (ys++xs)","count (S x) (xs++ys) == count (S x) (ys++xs)","count (S x) (xs++ys) == count (S x) (ys++xs)","count (S x) (xs++ys) == count (S x) (ys++xs)","count (S x) (xs++ys) == count (S x) (ys++xs)","count (S x) (xs++ys) == count (S x) (ys++xs)","count (x+x) (xs++ys) == count (x+x) (ys++xs)","count (x+x) (xs++ys) == count (x+x) (ys++xs)","count (x+x) (xs++ys) == count (x+x) (ys++xs)","count (x+x) (xs++ys) == count (x+x) (ys++xs)","count (x+x) (xs++ys) == count (x+x) (ys++xs)","count (x+x) (xs++ys) == count (x+x) (ys++xs)","count (x+x) (xs++ys) == count (x+x) (ys++xs)","count (x+x) (xs++ys) == count (x+x) (ys++xs)","(x:[])++(y:[]) == x:(y:[])","(x:[])++(y:[]) == x:(y:[])","(x:[])++(Z:xs) == x:(Z:xs)","(x:[])++(Z:xs) == x:(Z:xs)","(x:[])++(Z:xs) == x:(Z:xs)","(x:[])++(y:[]) == x:(y:[])","(x:[])++(y:[]) == x:(y:[])","(x:[])++(Z:xs) == x:(Z:xs)","(x:[])++(Z:xs) == x:(Z:xs)","(x:[])++(Z:xs) == x:(Z:xs)","(x:[])++(y:[]) == x:(y:[])","(x:[])++(y:[]) == x:(y:[])","(x:[])++(Z:xs) == x:(Z:xs)","(x:[])++(Z:xs) == x:(Z:xs)","(x:[])++(Z:xs) == x:(Z:xs)","take (x+x) (y:[]) == take x (y:[])","take (x+x) (y:[]) == take x (y:[])","take (x+x) (y:[]) == take x (y:[])","take (x+x) (y:[]) == take x (y:[])","take (x+x) (y:[]) == take x (y:[])","take (x+x) (y:[]) == take x (y:[])","drop (x+x) (y:[]) == drop x (y:[])","drop (x+x) (y:[]) == drop x (y:[])","drop (x+x) (y:[]) == drop x (y:[])","drop (x+x) (y:[]) == drop x (y:[])","drop (x+x) (y:[]) == drop x (y:[])","drop (x+x) (y:[]) == drop x (y:[])","count x (y:[]) == count y (x:[])","count x (y:[]) == count y (x:[])","count x (y:[]) == count y (x:[])","count Z xs+x == x+count Z xs","count Z xs+x == x+count Z xs","count Z xs+x == x+count Z xs","count Z xs+x == x+count Z xs","count Z xs+x == x+count Z xs","count Z xs+x == x+count Z xs","count Z xs+x == x+count Z xs","count Z xs+x == x+count Z xs","count Z xs+x == x+count Z xs","(Z:[])++filter p xs == Z:filter p xs","(Z:[])++filter p xs == Z:filter p xs","(Z:[])++filter p xs == Z:filter p xs","(Z:xs)++ys == Z:(xs++ys)","(Z:[])++(xs++ys) == Z:(xs++ys)","(Z:xs)++ys == Z:(xs++ys)","(Z:[])++(xs++ys) == Z:(xs++ys)","(Z:xs)++ys == Z:(xs++ys)","(Z:[])++(xs++ys) == Z:(xs++ys)","(Z:xs)++ys == Z:(xs++ys)","(Z:[])++(xs++ys) == Z:(xs++ys)","(Z:xs)++ys == Z:(xs++ys)","(Z:[])++(xs++ys) == Z:(xs++ys)","(Z:xs)++ys == Z:(xs++ys)","(Z:[])++(xs++ys) == Z:(xs++ys)","(Z:[])++(x:xs) == Z:(x:xs)","(Z:[])++(x:xs) == Z:(x:xs)","(Z:[])++(x:xs) == Z:(x:xs)","(Z:[])++(x:xs) == Z:(x:xs)","(Z:[])++(x:xs) == Z:(x:xs)","(Z:[])++(x:xs) == Z:(x:xs)","(Z:[])++(x:xs) == Z:(x:xs)","(Z:[])++(x:xs) == Z:(x:xs)","(Z:[])++(x:xs) == Z:(x:xs)","take (S x) (Z:xs) == Z:take x xs","(Z:[])++take x xs == Z:take x xs","take (S x) (Z:xs) == Z:take x xs","(Z:[])++take x xs == Z:take x xs","take (S x) (Z:xs) == Z:take x xs","(Z:[])++take x xs == Z:take x xs","take (S x) (Z:xs) == Z:take x xs","(Z:[])++take x xs == Z:take x xs","take (S x) (Z:xs) == Z:take x xs","(Z:[])++take x xs == Z:take x xs","take (S x) (Z:xs) == Z:take x xs","(Z:[])++take x xs == Z:take x xs","take (S x) (Z:xs) == Z:take x xs","(Z:[])++take x xs == Z:take x xs","take (S x) (Z:xs) == Z:take x xs","(Z:[])++take x xs == Z:take x xs","take (S x) (Z:xs) == Z:take x xs","(Z:[])++take x xs == Z:take x xs","(Z:[])++drop x xs == Z:drop x xs","(Z:[])++drop x xs == Z:drop x xs","(Z:[])++drop x xs == Z:drop x xs","(Z:[])++drop x xs == Z:drop x xs","(Z:[])++drop x xs == Z:drop x xs","(Z:[])++drop x xs == Z:drop x xs","(Z:[])++drop x xs == Z:drop x xs","(Z:[])++drop x xs == Z:drop x xs","(Z:[])++drop x xs == Z:drop x xs"]}}],[232.864047,{"FailedProof":{"prop_name":"count (x+x) (ys++xs) == count (x+x) (xs++ys)"}}],[234.912332,{"FailedProof":{"prop_name":"count Z (ys++xs) == count Z (xs++ys)"}}],[236.979243,{"FailedProof":{"prop_name":"count Z xs+count Z ys == count Z (xs++ys)"}}],[239.02853,{"FailedProof":{"prop_name":"count Z ys+count Z xs == count Z (xs++ys)"}}],[239.028654,{"Discard":{"discarded":["count Z (xs++ys) == count Z (ys++xs)","count Z xs+count Z ys == count Z (xs++ys)","count Z xs+count Z ys == count Z (ys++xs)","count Z (xs++ys) == count Z (ys++xs)","count Z xs+count Z ys == count Z (xs++ys)","count Z xs+count Z ys == count Z (ys++xs)","len xs+count x xs == count x xs+len xs","S x+count x xs == count x xs+S x","(x+x)+count x xs == count x xs+(x+x)","len xs+count x xs == count x xs+len xs","S x+count x xs == count x xs+S x","(x+x)+count x xs == count x xs+(x+x)","len xs+count x xs == count x xs+len xs","S x+count x xs == count x xs+S x","(x+x)+count x xs == count x xs+(x+x)","len xs+count x xs == count x xs+len xs","S x+count x xs == count x xs+S x","(x+x)+count x xs == count x xs+(x+x)","len xs+count x xs == count x xs+len xs","S x+count x xs == count x xs+S x","(x+x)+count x xs == count x xs+(x+x)","len xs+count x xs == count x xs+len xs","S x+count x xs == count x xs+S x","(x+x)+count x xs == count x xs+(x+x)","len xs+count x xs == count x xs+len xs","S x+count x xs == count x xs+S x","(x+x)+count x xs == count x xs+(x+x)","len xs+count x xs == count x xs+len xs","S x+count x xs == count x xs+S x","(x+x)+count x xs == count x xs+(x+x)","len xs+count x xs == count x xs+len xs","S x+count x xs == count x xs+S x","(x+x)+count x xs == count x xs+(x+x)","(x+x)+(y+y) == (x+y)+(x+y)","(x+x)+(y+y) == (y+x)+(y+x)","(x-y)+(x+y) == (x+y)+(x-y)","(x-y)+(y+y) == (y+x)+(y-x)","(x+x)+(y-x) == (x+y)+(x-y)","(x-y)+(y+y) == (x+y)+(y-x)","(x-y)+(y+x) == (y+x)+(x-y)","(x+x)+(y-x) == (y+x)+(x-y)","S x+(x+y) == (x+y)+S x","S x+(y+y) == (y+x)+S y","(x+x)+S y == (x+y)+S x","S x+(y+y) == (x+y)+S y","S x+(y+x) == (y+x)+S x","(x+x)+S y == (y+x)+S x","(x+x)+(x+y) == (x+y)+(x+x)","(x+x)+(y+x) == (y+x)+(x+x)","(x+x)+(y+y) == (x+y)+(x+y)","(x+x)+(y+y) == (y+x)+(y+x)","(x-y)+(x+y) == (x+y)+(x-y)","(x-y)+(y+y) == (y+x)+(y-x)","(x+x)+(y-x) == (x+y)+(x-y)","(x-y)+(y+y) == (x+y)+(y-x)","(x-y)+(y+x) == (y+x)+(x-y)","(x+x)+(y-x) == (y+x)+(x-y)","S x+(x+y) == (x+y)+S x","S x+(y+y) == (y+x)+S y","(x+x)+S y == (x+y)+S x","S x+(y+y) == (x+y)+S y","S x+(y+x) == (y+x)+S x","(x+x)+S y == (y+x)+S x","(x+x)+(x+y) == (x+y)+(x+x)","(x+x)+(y+x) == (y+x)+(x+x)","(x+x)+(y+y) == (x+y)+(x+y)","(x+x)+(y+y) == (y+x)+(y+x)","(x-y)+(x+y) == (x+y)+(x-y)","(x-y)+(y+y) == (y+x)+(y-x)","(x+x)+(y-x) == (x+y)+(x-y)","(x-y)+(y+y) == (x+y)+(y-x)","(x-y)+(y+x) == (y+x)+(x-y)","(x+x)+(y-x) == (y+x)+(x-y)","S x+(x+y) == (x+y)+S x","S x+(y+y) == (y+x)+S y","(x+x)+S y == (x+y)+S x","S x+(y+y) == (x+y)+S y","S x+(y+x) == (y+x)+S x","(x+x)+S y == (y+x)+S x","(x+x)+(x+y) == (x+y)+(x+x)","(x+x)+(y+x) == (y+x)+(x+x)","(x+x)-(y+y) == (x-y)+(x-y)","(x-y)+(y-x) == (y-x)+(x-y)","S x+(x-y) == (x-y)+S x","(x-y)+S y == (y-x)+S x","S x+(y-x) == (x-y)+S y","S x+(y-x) == (y-x)+S x","(x+x)+(x-y) == (x-y)+(x+x)","(x+x)-(y+y) == (x-y)+(x-y)","(x-y)+(y-x) == (y-x)+(x-y)","S x+(x-y) == (x-y)+S x","(x-y)+S y == (y-x)+S x","S x+(y-x) == (x-y)+S y","S x+(y-x) == (y-x)+S x","(x+x)+(x-y) == (x-y)+(x+x)","(x+x)-(y+y) == (x-y)+(x-y)","S x+(x-y) == (x-y)+S x","(x+x)+(x-y) == (x-y)+(x+x)","(x+x)-(y+y) == (x-y)+(x-y)","(x-y)+(y-x) == (y-x)+(x-y)","S x+(x-y) == (x-y)+S x","(x-y)+S y == (y-x)+S x","S x+(y-x) == (x-y)+S y","S x+(y-x) == (y-x)+S x","(x+x)+(x-y) == (x-y)+(x+x)","(x+x)-(y+y) == (x-y)+(x-y)","S x+(x-y) == (x-y)+S x","(x+x)+(x-y) == (x-y)+(x+x)","(x+x)-(y+y) == (x-y)+(x-y)","S x+(x-y) == (x-y)+S x","(x+x)+(x-y) == (x-y)+(x+x)","(x+x)-(x-y) == (y+x)-(y-x)","(x+x)-(x-y) == (x+y)-(y-x)","(x+y)-S y == (z+x)-S z","x-S Z == (y+x)-S y","(x+x)-S x == (y+x)-S y","(x+y)-S y == (x+z)-S z","x-S Z == (x+y)-S y","(x+x)-S x == (x+y)-S y","(x+x)-(x-y) == (y+x)-(y-x)","(x+x)-(x-y) == (x+y)-(y-x)","(x+y)-S x == (z+y)-S z","x-S Z == (y+x)-S y","(x+x)-S x == (y+x)-S y","(x+x)-(x-y) == (y+x)-(y-x)","(x+x)-(x-y) == (x+y)-(y-x)","drop (x+x) (Z:xs) == drop (x+x) (x:xs)","drop (x+x) (Z:xs) == drop (x+x) (x:xs)","drop (x+x) (Z:xs) == drop (x+x) (x:xs)","drop (x+x) (Z:xs) == drop (x+x) (x:xs)","drop (x+x) (Z:xs) == drop (x+x) (x:xs)","drop (x+x) (Z:xs) == drop (x+x) (x:xs)","drop (x+x) (Z:xs) == drop (x+x) (x:xs)","drop (x+x) (Z:xs) == drop (x+x) (x:xs)","drop (x+x) (Z:xs) == drop (x+x) (x:xs)","count (len xs) (ys++xs) == count (len xs) (xs++ys)"]}}],[241.100788,{"FailedProof":{"prop_name":"count (len xs) (ys++xs) == count (len xs) (xs++ys)"}}],[243.149703,{"FailedProof":{"prop_name":"count (len ys) (ys++xs) == count (len ys) (xs++ys)"}}],[243.150275,{"Discard":{"discarded":["count (len xs) (ys++xs) == count (len xs) (xs++ys)","count (len xs) (xs++ys) == count (len xs) (ys++xs)","count (len xs) (xs++ys) == count (len xs) (ys++xs)","count (x+x) (Z:xs) == count (x+x) (x:xs)","count (x+x) (Z:xs) == count (x+x) (x:xs)","count (x+x) (Z:xs) == count (x+x) (x:xs)","count (x+x) (Z:xs) == count (x+x) (x:xs)","count (x+x) (Z:xs) == count (x+x) (x:xs)","count (x+x) (Z:xs) == count (x+x) (x:xs)","count (x+x) (Z:xs) == count (x+x) (x:xs)","count (x+x) (Z:xs) == count (x+x) (x:xs)","count (x+x) (Z:xs) == count (x+x) (x:xs)","S x+len xs == len xs+S x","S x+len xs == len xs+S x","S x+len xs == len xs+S x","(x+x)+len xs == len xs+(x+x)","(x+x)+len xs == len xs+(x+x)","(x+x)+len xs == len xs+(x+x)","S x+len xs == len xs+S x","S x+len xs == len xs+S x","S x+len xs == len xs+S x","(x+x)+len xs == len xs+(x+x)","(x+x)+len xs == len xs+(x+x)","(x+x)+len xs == len xs+(x+x)","S x+len xs == len xs+S x","S x+len xs == len xs+S x","S x+len xs == len xs+S x","(x+x)+len xs == len xs+(x+x)","(x+x)+len xs == len xs+(x+x)","(x+x)+len xs == len xs+(x+x)","S x+S y == S y+S x","S x+S y == S y+S x","S x+S y == S y+S x","S x-(y+x) == S z-(z+y)","S x-(x+x) == S y-(y+x)","S Z-x == S y-(y+x)","count (x+y) (x:[]) == S x-(x+y)","count x (Z:[]) == S y-(y+x)"]}}],[247.268209,{"PlainProof":{"prop_name":"count Z (y:[]) == S x-(x+y)","lemmas":[]}}],[247.291418,{"FailedProof":{"prop_name":"count (y+z) (z:[]) == S x-(x+y)"}}],[247.292385,{"Discard":{"discarded":["S Z-(x+x) == S y-(y+x)","count (x+x) (Z:[]) == S y-(y+x)","S x-(x+y) == S z-(z+y)","S x-(x+x) == S y-(y+x)","S Z-x == S y-(y+x)","count (x+y) (x:[]) == S x-(x+y)"]}}],[249.363436,{"FailedProof":{"prop_name":"count (y+y) (y:[]) == S x-(x+y)"}}],[254.02064,{"FailedProof":{"prop_name":"count (y+z) (y:[]) == S x-(x+z)"}}],[254.020769,{"Discard":{"discarded":["count x (Z:[]) == S y-(y+x)","count Z (x:[]) == S y-(y+x)","count (x+x) (x:[]) == S y-(y+x)","S Z-(x+x) == S y-(y+x)","count (x+x) (Z:[]) == S y-(y+x)","S x-(x-y) == S y-(y-x)","S x-(x-y) == S y-(y-x)","S x-(y+x) == S z-(y+z)","S x-(x+x) == S y-(x+y)","S Z-x == S y-(x+y)"]}}],[256.064672,{"FailedProof":{"prop_name":"count (x+y) (y:[]) == S y-(x+y)"}}],[260.164454,{"FailedProof":{"prop_name":"count (x+z) (z:[]) == S y-(x+y)"}}],[260.165099,{"Discard":{"discarded":["count x (Z:[]) == S y-(x+y)","count Z (x:[]) == S y-(x+y)","S Z-(x+x) == S y-(x+y)","count (x+x) (Z:[]) == S y-(x+y)","S x-(x-y) == S y-(y-x)"]}}],[262.218601,{"FailedProof":{"prop_name":"count (x+x) (x:[]) == S y-(x+y)"}}],[264.269315,{"FailedProof":{"prop_name":"take (count Z zs) (xs++xs) == take (count Z zs) xs"}}],[264.269399,{"Discard":{"discarded":["take (count Z xs) (ys++ys) == take (count Z xs) ys","count (count Z xs) (rev ys) == count (count Z xs) ys","count (count Z xs) (rev ys) == count (count Z xs) ys","count (count Z xs) (rev ys) == count (count Z xs) ys","count (count Z xs) (rev ys) == count (count Z xs) ys","count (count Z xs) (rev ys) == count (count Z xs) ys","rev xs++(Z:[]) == rev (Z:xs)","rev xs++(Z:[]) == rev (Z:xs)","rev xs++(Z:[]) == rev (Z:xs)"]}}],[266.309727,{"FailedProof":{"prop_name":"count (count Z xs) (rev ys) == count (count Z xs) ys"}}],[266.31738,{"PlainProof":{"prop_name":"count Z (Z:xs) == S (count Z xs)","lemmas":[]}}],[266.317683,{"Discard":{"discarded":["count Z xs+S Z == S (count Z xs)","S Z+count Z xs == S (count Z xs)","count Z (Z:xs) == S (count Z xs)","count Z xs+S Z == S (count Z xs)","S Z+count Z xs == S (count Z xs)","count Z (Z:xs) == S (count Z xs)","count Z xs+S Z == S (count Z xs)","S Z+count Z xs == S (count Z xs)","(x:[])++(x:[]) == x:(x:[])","(x:[])++(x:[]) == x:(x:[])","(x:[])++(x:[]) == x:(x:[])","take (x+x) (x:[]) == take x (x:[])","take (x+x) (x:[]) == take x (x:[])","take (x+x) (x:[]) == take x (x:[])","drop x (Z:[]) == drop x (x:[])","drop (x+x) (x:[]) == drop x (x:[])","drop (x+x) (Z:[]) == drop x (x:[])","drop x (Z:[]) == drop x (x:[])","drop (x+x) (x:[]) == drop x (x:[])","drop (x+x) (Z:[]) == drop x (x:[])","drop x (Z:[]) == drop x (x:[])","drop (x+x) (x:[]) == drop x (x:[])","drop (x+x) (Z:[]) == drop x (x:[])","(Z:[])++rev xs == Z:rev xs","(Z:[])++rev xs == Z:rev xs","(Z:[])++rev xs == Z:rev xs","(Z:xs)++xs == Z:(xs++xs)","(Z:[])++(xs++xs) == Z:(xs++xs)","(Z:xs)++xs == Z:(xs++xs)","(Z:[])++(xs++xs) == Z:(xs++xs)","(Z:xs)++xs == Z:(xs++xs)","(Z:[])++(xs++xs) == Z:(xs++xs)","count Z xs+count Z xs == count Z (xs++xs)","count Z xs+count Z xs == count Z (xs++xs)","(x+x)+S x == S x+(x+x)","(x+x)+S x == S x+(x+x)","(x+x)+S x == S x+(x+x)"]}}],[267.351514,{"FailedProof":{"prop_name":"count Z xs+count Z xs == count Z (xs++xs)"}}],[269.401486,{"FailedProof":{"prop_name":"take (count Z xs) (xs++ys) == take (count Z xs) xs"}}],[269.401569,{"Discard":{"discarded":["take (count Z xs) (xs++ys) == take (count Z xs) xs","take (count Z xs) (xs++ys) == take (count Z xs) xs","take (count Z xs) (xs++ys) == take (count Z xs) xs","take (count Z xs) (xs++xs) == take (count Z xs) xs","take (count Z xs) (xs++ys) == take (count Z xs) xs","take (count Z xs) (xs++ys) == take (count Z xs) xs","take (count Z xs) (xs++xs) == take (count Z xs) xs"]}}],[270.426938,{"FailedProof":{"prop_name":"take (count Z xs) (xs++xs) == take (count Z xs) xs"}}],[271.44014,{"FailedProof":{"prop_name":"count (count Z xs) (rev xs) == count (count Z xs) xs"}}],[271.440226,{"Discard":{"discarded":["count (count Z xs) (rev xs) == count (count Z xs) xs","count (count Z xs) (rev xs) == count (count Z xs) xs","take (S Z) (xs++xs) == take (S Z) xs","take (S Z) (xs++xs) == take (S Z) xs","take (S Z) (xs++xs) == take (S Z) xs","count (S Z) (Z:xs) == count (S Z) xs","count (S Z) (rev xs) == count (S Z) xs","count (S Z) (Z:xs) == count (S Z) xs","count (S Z) (rev xs) == count (S Z) xs","count (S Z) (Z:xs) == count (S Z) xs","S Z+S Z == S (S Z)","count Z xs+count x ys == count x ys+count Z xs","count Z xs+count x ys == count x ys+count Z xs","count Z xs+count x ys == count x ys+count Z xs","count Z xs+count x ys == count x ys+count Z xs","count Z xs+count x ys == count x ys+count Z xs","count Z xs+count x ys == count x ys+count Z xs","count Z xs+count x ys == count x ys+count Z xs","count Z xs+count x ys == count x ys+count Z xs","count Z xs+count x ys == count x ys+count Z xs","count Z xs+count x ys == count x ys+count Z xs","count Z xs+count x ys == count x ys+count Z xs","count Z xs+count x ys == count x ys+count Z xs","count Z xs+count x ys == count x ys+count Z xs","count Z xs+count x ys == count x ys+count Z xs","count Z xs+count x ys == count x ys+count Z xs","count Z xs+count x ys == count x ys+count Z xs","count Z xs+count x ys == count x ys+count Z xs","count Z xs+count x ys == count x ys+count Z xs","count Z xs+(x+y) == (x+y)+count Z xs","count Z xs+(x+y) == (x+y)+count Z xs","count Z xs+(x+y) == (x+y)+count Z xs","count Z xs+(x+y) == (x+y)+count Z xs","count Z xs+(x+y) == (x+y)+count Z xs","count Z xs+(x+y) == (x+y)+count Z xs","count Z xs+(x+y) == (x+y)+count Z xs","count Z xs+(x+y) == (x+y)+count Z xs","count Z xs+(x+y) == (x+y)+count Z xs","count Z xs+(x-y) == (x-y)+count Z xs","count Z xs+(x-y) == (x-y)+count Z xs","count Z xs+(x-y) == (x-y)+count Z xs","count Z xs+(x-y) == (x-y)+count Z xs","count Z xs+(x-y) == (x-y)+count Z xs","count Z xs+(x-y) == (x-y)+count Z xs","count Z xs+(x-y) == (x-y)+count Z xs","count Z xs+(x-y) == (x-y)+count Z xs","count Z xs+(x-y) == (x-y)+count Z xs","count Z xs+(x-y) == (x-y)+count Z xs","count Z xs+(x-y) == (x-y)+count Z xs","count Z xs+(x-y) == (x-y)+count Z xs","count Z xs+(x-y) == (x-y)+count Z xs","count Z xs+(x-y) == (x-y)+count Z xs","count Z xs+(x-y) == (x-y)+count Z xs","count Z xs+(x-y) == (x-y)+count Z xs","count Z xs+(x-y) == (x-y)+count Z xs","count Z xs+(x-y) == (x-y)+count Z xs"]}}],[272.472236,{"FailedProof":{"prop_name":"count (S Z) (rev xs) == count (S Z) xs"}}],[276.575996,{"FailedProof":{"prop_name":"count (count Z xs) (zs++ys) == count (count Z xs) (ys++zs)"}}],[276.576084,{"Discard":{"discarded":["count (count Z xs) (ys++zs) == count (count Z xs) (zs++ys)","count (count Z xs) (ys++zs) == count (count Z xs) (zs++ys)","drop (x+y) (y:[]) == drop (x+y) (x:[])","drop (x+y) (Z:[]) == drop (x+y) (x:[])","drop (x+y) (y:[]) == drop (x+y) (x:[])","drop (x+y) (Z:[]) == drop (x+y) (x:[])","drop (x+y) (y:[]) == drop (x+y) (x:[])","drop (x+y) (Z:[]) == drop (x+y) (x:[])","count (x-y) (x:[]) == count (y-x) (y:[])","count (x+x) (y:[]) == count (y-x) (x:[])","count (x-y) (x:[]) == count (y-x) (y:[])","count (x+x) (y:[]) == count (y-x) (x:[])","count (x+x) (y:[]) == count (y-x) (x:[])","count (x-y) (x:[]) == count (y-x) (y:[])","count (x+x) (y:[]) == count (y-x) (x:[])","count (x+x) (y:[]) == count (y-x) (x:[])","count (x+x) (y:[]) == count (y-x) (x:[])","count Z xs+count x xs == count x xs+count Z xs","count Z xs+count x xs == count x xs+count Z xs","count Z xs+count x xs == count x xs+count Z xs","count Z xs+count x xs == count x xs+count Z xs","count Z xs+count x xs == count x xs+count Z xs","count Z xs+count x xs == count x xs+count Z xs","count Z xs+count x xs == count x xs+count Z xs","count Z xs+count x xs == count x xs+count Z xs","count Z xs+count x xs == count x xs+count Z xs","count Z xs+len ys == len ys+count Z xs","count Z xs+len ys == len ys+count Z xs","count Z xs+len ys == len ys+count Z xs","count Z xs+len ys == len ys+count Z xs","count Z xs+len ys == len ys+count Z xs","count Z xs+len ys == len ys+count Z xs","count Z xs+S x == S x+count Z xs","count Z xs+S x == S x+count Z xs","count Z xs+S x == S x+count Z xs","count Z xs+S x == S x+count Z xs","count Z xs+S x == S x+count Z xs","count Z xs+S x == S x+count Z xs","count Z xs+S x == S x+count Z xs","count Z xs+S x == S x+count Z xs","count Z xs+S x == S x+count Z xs","count Z xs+(x+x) == (x+x)+count Z xs","count Z xs+(x+x) == (x+x)+count Z xs","count Z xs+(x+x) == (x+x)+count Z xs","count Z xs+(x+x) == (x+x)+count Z xs","count Z xs+(x+x) == (x+x)+count Z xs","count Z xs+(x+x) == (x+x)+count Z xs","count Z xs+(x+x) == (x+x)+count Z xs","count Z xs+(x+x) == (x+x)+count Z xs","count Z xs+(x+x) == (x+x)+count Z xs","count (count Z xs) (ys++xs) == count (count Z xs) (xs++ys)"]}}],[278.641065,{"FailedProof":{"prop_name":"count (count Z xs) (ys++xs) == count (count Z xs) (xs++ys)"}}],[280.690966,{"FailedProof":{"prop_name":"count (count Z ys) (ys++xs) == count (count Z ys) (xs++ys)"}}],[280.691057,{"Discard":{"discarded":["count (count Z xs) (ys++xs) == count (count Z xs) (xs++ys)","count (count Z xs) (xs++ys) == count (count Z xs) (ys++xs)","count (count Z xs) (xs++ys) == count (count Z xs) (ys++xs)","count (S Z) (xs++ys) == count (S Z) (ys++xs)","count (S Z) (xs++ys) == count (S Z) (ys++xs)","count (count x xs) (Z:[]) == S Z-count x xs","count (count x xs) (Z:[]) == S Z-count x xs","count (count x xs) (Z:[]) == S Z-count x xs","count (count x xs) (Z:[]) == S Z-count x xs","count (count x xs) (Z:[]) == S Z-count x xs","count (count x xs) (Z:[]) == S Z-count x xs","count (count x xs) (Z:[]) == S Z-count x xs","count (count x xs) (Z:[]) == S Z-count x xs","count (count x xs) (Z:[]) == S Z-count x xs","count (x+y) (Z:[]) == S Z-(x+y)","count (x+y) (Z:[]) == S Z-(x+y)","count (x+y) (Z:[]) == S Z-(x+y)","count (x-y) (Z:[]) == S Z-(x-y)","count (x-y) (Z:[]) == S Z-(x-y)","count (x-y) (Z:[]) == S Z-(x-y)","count (x-y) (Z:[]) == S Z-(x-y)","count (x-y) (Z:[]) == S Z-(x-y)","count (x-y) (Z:[]) == S Z-(x-y)","(x:[])++(Z:[]) == x:(Z:[])","(x:[])++(Z:[]) == x:(Z:[])","(x:[])++(Z:[]) == x:(Z:[])","take (x+x) (Z:[]) == take x (Z:[])","take (x+x) (Z:[]) == take x (Z:[])","take (x+x) (Z:[]) == take x (Z:[])","(Z:[])++(x:[]) == Z:(x:[])","(Z:[])++(x:[]) == Z:(x:[])","(Z:[])++(x:[]) == Z:(x:[])","(Z:[])++(Z:xs) == Z:(Z:xs)","(Z:[])++(Z:xs) == Z:(Z:xs)","(Z:[])++(Z:xs) == Z:(Z:xs)","count Z xs+len xs == len xs+count Z xs","count Z xs+len xs == len xs+count Z xs","count Z xs+len xs == len xs+count Z xs","count (len xs) (Z:[]) == S Z-len xs","count (len xs) (Z:[]) == S Z-len xs","count (len xs) (Z:[]) == S Z-len xs","count (count Z xs) (Z:[]) == S Z-count Z xs","count (count Z xs) (Z:[]) == S Z-count Z xs","count (count Z xs) (Z:[]) == S Z-count Z xs","(Z:[])++(Z:[]) == Z:(Z:[])"]}}],[282.749791,{"FailedProof":{"prop_name":"count (S Z) (ys++xs) == count (S Z) (xs++ys)"}}],[282.749845,{"Discard":{"discarded":["drop x (drop y xs) == drop y (drop x xs)"]}}],[286.870898,{"FailedProof":{"prop_name":"count x (ys++xs) == count x (xs++ys)"}}],[288.900807,{"FailedProof":{"prop_name":"filter p (filter p xs) == filter p xs"}}],[290.942117,{"FailedProof":{"prop_name":"filter p (rev xs) == rev (filter p xs)"}}],[291.438948,{"PlainProof":{"prop_name":"count x (x:xs) == S (count x xs)","lemmas":[]}}],[291.44001,{"Discard":{"discarded":["x-(x-y) == y-(y-x)"]}}],[293.48476,{"FailedProof":{"prop_name":"count x (rev xs) == count x xs"}}],[294.497434,{"FailedProof":{"prop_name":"rev (rev xs) == xs"}}],[298.624005,{"FailedProof":{"prop_name":"filter p xs++filter p ys == filter p (xs++ys)"}}],[302.734762,{"FailedProof":{"prop_name":"take (count x xs) (xs++ys) == take (count x xs) xs"}}],[306.875971,{"FailedProof":{"prop_name":"take (x-y) (take x xs) == take (x-y) xs"}}],[311.065308,{"FailedProof":{"prop_name":"count x xs+count x ys == count x (xs++ys)"}}],[311.065362,{"Discard":{"discarded":["(x+y)-(y-z) == (x+z)-(z-y)"]}}],[313.745617,{"InductiveProof":{"prop_name":"(y-z)-(y-x) == (x-z)-(x-y)","lemmas":[]}}],[315.766969,{"FailedProof":{"prop_name":"count y (x:[]) == count x (y:[])"}}],[317.825489,{"FailedProof":{"prop_name":"rev xs++rev ys == rev (ys++xs)"}}],[319.845085,{"FailedProof":{"prop_name":"take (len xs) (filter p xs) == filter p xs"}}],[321.887272,{"FailedProof":{"prop_name":"drop (len xs) (filter p xs) == []"}}],[323.908809,{"FailedProof":{"prop_name":"count (S x) (x:xs) == count (S x) xs"}}],[325.772696,{"PlainProof":{"prop_name":"S y-(y-x) == S x-(x-y)","lemmas":[]}}],[327.785911,{"FailedProof":{"prop_name":"(x+x)-(y+y) == (x-y)+(x-y)"}}],[329.821431,{"FailedProof":{"prop_name":"count (x+y) (x:[]) == S x-(x+y)"}}],[331.843489,{"FailedProof":{"prop_name":"count (y-x) (y:[]) == count (x-y) (x:[])"}}],[333.877846,{"FailedProof":{"prop_name":"count (x+x) (y:[]) == count (y-x) (x:[])"}}],[335.899143,{"FailedProof":{"prop_name":"count (x+x) (Z:xs) == count (x+x) (x:xs)"}}],[336.920126,{"FailedProof":{"prop_name":"count (S x) (x:[]) == Z"}}],[337.932131,{"FailedProof":{"prop_name":"count Z (rev xs) == count Z xs"}}],[342.060388,{"FailedProof":{"prop_name":"count x ys+count x xs == count x (xs++ys)"}}],[346.167081,{"FailedProof":{"prop_name":"take (count y xs) (zs++zs) == take (count y xs) zs"}}],[350.279021,{"FailedProof":{"prop_name":"count (count x xs) (rev ys) == count (count x xs) ys"}}],[354.862611,{"FailedProof":{"prop_name":"count (x+y) (rev xs) == count (x+y) xs"}}],[358.993207,{"FailedProof":{"prop_name":"count (x-y) (rev xs) == count (x-y) xs"}}],[361.024345,{"FailedProof":{"prop_name":"filter p xs++filter p xs == filter p (xs++xs)"}}],[363.068907,{"FailedProof":{"prop_name":"count x xs+count x xs == count x (xs++xs)"}}],[365.099598,{"FailedProof":{"prop_name":"take (count x xs) (xs++xs) == take (count x xs) xs"}}],[367.144451,{"FailedProof":{"prop_name":"count (count x xs) (rev xs) == count (count x xs) xs"}}],[369.173184,{"FailedProof":{"prop_name":"count (len xs) (rev ys) == count (len xs) ys"}}],[371.21607,{"FailedProof":{"prop_name":"count (S x) (rev xs) == count (S x) xs"}}],[373.246477,{"FailedProof":{"prop_name":"count (x+x) (rev xs) == count (x+x) xs"}}],[374.27024,{"FailedProof":{"prop_name":"rev xs++rev xs == rev (xs++xs)"}}],[375.283229,{"FailedProof":{"prop_name":"count (len xs) (rev xs) == count (len xs) xs"}}],[383.938622,{"FailedProof":{"prop_name":"count (count x xs) (zs++ys) == count (count x xs) (ys++zs)"}}],[391.723209,{"FailedProof":{"prop_name":"count (x+y) (ys++xs) == count (x+y) (xs++ys)"}}],[400.356636,{"FailedProof":{"prop_name":"count (x-y) (ys++xs) == count (x-y) (xs++ys)"}}],[404.472266,{"FailedProof":{"prop_name":"count (count x xs) (ys++xs) == count (count x xs) (xs++ys)"}}],[408.76908,{"FailedProof":{"prop_name":"count (count x ys) (ys++xs) == count (count x ys) (xs++ys)"}}],[412.868359,{"FailedProof":{"prop_name":"count (len xs) (zs++ys) == count (len xs) (ys++zs)"}}],[416.987883,{"FailedProof":{"prop_name":"count (S x) (ys++xs) == count (S x) (xs++ys)"}}],[421.089491,{"FailedProof":{"prop_name":"count (x+x) (ys++xs) == count (x+x) (xs++ys)"}}],[423.151953,{"FailedProof":{"prop_name":"count Z (ys++xs) == count Z (xs++ys)"}}],[425.202225,{"FailedProof":{"prop_name":"count Z xs+count Z ys == count Z (xs++ys)"}}],[427.263759,{"FailedProof":{"prop_name":"count Z ys+count Z xs == count Z (xs++ys)"}}],[429.313425,{"FailedProof":{"prop_name":"count (len xs) (ys++xs) == count (len xs) (xs++ys)"}}],[431.377964,{"FailedProof":{"prop_name":"count (len ys) (ys++xs) == count (len ys) (xs++ys)"}}],[435.509593,{"FailedProof":{"prop_name":"count (y+z) (z:[]) == S x-(x+y)"}}],[437.583263,{"FailedProof":{"prop_name":"count (y+y) (y:[]) == S x-(x+y)"}}],[441.68658,{"FailedProof":{"prop_name":"count (y+z) (y:[]) == S x-(x+z)"}}],[443.724706,{"FailedProof":{"prop_name":"count (x+y) (y:[]) == S y-(x+y)"}}],[447.844676,{"FailedProof":{"prop_name":"count (x+z) (z:[]) == S y-(x+y)"}}],[449.893178,{"FailedProof":{"prop_name":"count (x+x) (x:[]) == S y-(x+y)"}}],[451.945598,{"FailedProof":{"prop_name":"take (count Z zs) (xs++xs) == take (count Z zs) xs"}}],[453.990951,{"FailedProof":{"prop_name":"count (count Z xs) (rev ys) == count (count Z xs) ys"}}],[455.004459,{"FailedProof":{"prop_name":"count Z xs+count Z xs == count Z (xs++xs)"}}],[457.064971,{"FailedProof":{"prop_name":"take (count Z xs) (xs++ys) == take (count Z xs) xs"}}],[458.078018,{"FailedProof":{"prop_name":"take (count Z xs) (xs++xs) == take (count Z xs) xs"}}],[459.102374,{"FailedProof":{"prop_name":"count (count Z xs) (rev xs) == count (count Z xs) xs"}}],[460.114921,{"FailedProof":{"prop_name":"count (S Z) (rev xs) == count (S Z) xs"}}],[464.234058,{"FailedProof":{"prop_name":"count (count Z xs) (zs++ys) == count (count Z xs) (ys++zs)"}}],[466.284639,{"FailedProof":{"prop_name":"count (count Z xs) (ys++xs) == count (count Z xs) (xs++ys)"}}],[468.351941,{"FailedProof":{"prop_name":"count (count Z ys) (ys++xs) == count (count Z ys) (xs++ys)"}}],[470.40186,{"FailedProof":{"prop_name":"count (S Z) (ys++xs) == count (S Z) (xs++ys)"}}],[474.527548,{"FailedProof":{"prop_name":"count x (ys++xs) == count x (xs++ys)"}}],[476.556902,{"FailedProof":{"prop_name":"filter p (filter p xs) == filter p xs"}}],[478.605384,{"FailedProof":{"prop_name":"filter p (rev xs) == rev (filter p xs)"}}],[480.634773,{"FailedProof":{"prop_name":"count x (rev xs) == count x xs"}}],[481.660695,{"FailedProof":{"prop_name":"rev (rev xs) == xs"}}],[485.774922,{"FailedProof":{"prop_name":"filter p xs++filter p ys == filter p (xs++ys)"}}],[489.903065,{"FailedProof":{"prop_name":"take (count x xs) (xs++ys) == take (count x xs) xs"}}],[494.029628,{"FailedProof":{"prop_name":"take (x-y) (take x xs) == take (x-y) xs"}}],[498.158939,{"FailedProof":{"prop_name":"count x xs+count x ys == count x (xs++ys)"}}],[500.170042,{"FailedProof":{"prop_name":"count y (x:[]) == count x (y:[])"}}],[502.248024,{"FailedProof":{"prop_name":"rev xs++rev ys == rev (ys++xs)"}}],[504.26894,{"FailedProof":{"prop_name":"take (len xs) (filter p xs) == filter p xs"}}],[506.483251,{"FailedProof":{"prop_name":"drop (len xs) (filter p xs) == []"}}],[508.501468,{"FailedProof":{"prop_name":"count (S x) (x:xs) == count (S x) xs"}}],[510.536105,{"FailedProof":{"prop_name":"(x+x)-(y+y) == (x-y)+(x-y)"}}],[512.558413,{"FailedProof":{"prop_name":"count (x+y) (x:[]) == S x-(x+y)"}}],[514.590219,{"FailedProof":{"prop_name":"count (y-x) (y:[]) == count (x-y) (x:[])"}}],[516.612141,{"FailedProof":{"prop_name":"count (x+x) (y:[]) == count (y-x) (x:[])"}}],[518.644142,{"FailedProof":{"prop_name":"count (x+x) (Z:xs) == count (x+x) (x:xs)"}}],[519.650101,{"FailedProof":{"prop_name":"count (S x) (x:[]) == Z"}}],[520.675708,{"FailedProof":{"prop_name":"count Z (rev xs) == count Z xs"}}],[524.782183,{"FailedProof":{"prop_name":"count x ys+count x xs == count x (xs++ys)"}}],[528.904018,{"FailedProof":{"prop_name":"take (count y xs) (zs++zs) == take (count y xs) zs"}}],[532.998219,{"FailedProof":{"prop_name":"count (count x xs) (rev ys) == count (count x xs) ys"}}],[537.596858,{"FailedProof":{"prop_name":"count (x+y) (rev xs) == count (x+y) xs"}}],[541.713279,{"FailedProof":{"prop_name":"count (x-y) (rev xs) == count (x-y) xs"}}],[543.754964,{"FailedProof":{"prop_name":"filter p xs++filter p xs == filter p (xs++xs)"}}],[545.786278,{"FailedProof":{"prop_name":"count x xs+count x xs == count x (xs++xs)"}}],[547.827562,{"FailedProof":{"prop_name":"take (count x xs) (xs++xs) == take (count x xs) xs"}}],[549.858259,{"FailedProof":{"prop_name":"count (count x xs) (rev xs) == count (count x xs) xs"}}],[551.903127,{"FailedProof":{"prop_name":"count (len xs) (rev ys) == count (len xs) ys"}}],[553.933612,{"FailedProof":{"prop_name":"count (S x) (rev xs) == count (S x) xs"}}],[555.974464,{"FailedProof":{"prop_name":"count (x+x) (rev xs) == count (x+x) xs"}}],[556.987236,{"FailedProof":{"prop_name":"rev xs++rev xs == rev (xs++xs)"}}],[558.027906,{"FailedProof":{"prop_name":"count (len xs) (rev xs) == count (len xs) xs"}}],[566.589272,{"FailedProof":{"prop_name":"count (count x xs) (zs++ys) == count (count x xs) (ys++zs)"}}],[575.391041,{"FailedProof":{"prop_name":"count (x+y) (ys++xs) == count (x+y) (xs++ys)"}}],[583.108694,{"FailedProof":{"prop_name":"count (x-y) (ys++xs) == count (x-y) (xs++ys)"}}],[587.239223,{"FailedProof":{"prop_name":"count (count x xs) (ys++xs) == count (count x xs) (xs++ys)"}}],[591.34733,{"FailedProof":{"prop_name":"count (count x ys) (ys++xs) == count (count x ys) (xs++ys)"}}],[595.474368,{"FailedProof":{"prop_name":"count (len xs) (zs++ys) == count (len xs) (ys++zs)"}}],[599.774476,{"FailedProof":{"prop_name":"count (S x) (ys++xs) == count (S x) (xs++ys)"}}],[603.889215,{"FailedProof":{"prop_name":"count (x+x) (ys++xs) == count (x+x) (xs++ys)"}}],[605.937389,{"FailedProof":{"prop_name":"count Z (ys++xs) == count Z (xs++ys)"}}],[607.997909,{"FailedProof":{"prop_name":"count Z xs+count Z ys == count Z (xs++ys)"}}],[610.048534,{"FailedProof":{"prop_name":"count Z ys+count Z xs == count Z (xs++ys)"}}],[612.106704,{"FailedProof":{"prop_name":"count (len xs) (ys++xs) == count (len xs) (xs++ys)"}}],[614.155376,{"FailedProof":{"prop_name":"count (len ys) (ys++xs) == count (len ys) (xs++ys)"}}],[618.300587,{"FailedProof":{"prop_name":"count (y+z) (z:[]) == S x-(x+y)"}}],[620.356901,{"FailedProof":{"prop_name":"count (y+y) (y:[]) == S x-(x+y)"}}],[624.471281,{"FailedProof":{"prop_name":"count (y+z) (y:[]) == S x-(x+z)"}}],[626.481876,{"FailedProof":{"prop_name":"count (x+y) (y:[]) == S y-(x+y)"}}],[630.60326,{"FailedProof":{"prop_name":"count (x+z) (z:[]) == S y-(x+y)"}}],[632.64216,{"FailedProof":{"prop_name":"count (x+x) (x:[]) == S y-(x+y)"}}],[634.703679,{"FailedProof":{"prop_name":"take (count Z zs) (xs++xs) == take (count Z zs) xs"}}],[636.733436,{"FailedProof":{"prop_name":"count (count Z xs) (rev ys) == count (count Z xs) ys"}}],[637.758724,{"FailedProof":{"prop_name":"count Z xs+count Z xs == count Z (xs++xs)"}}],[639.808522,{"FailedProof":{"prop_name":"take (count Z xs) (xs++ys) == take (count Z xs) xs"}}],[640.834882,{"FailedProof":{"prop_name":"take (count Z xs) (xs++xs) == take (count Z xs) xs"}}],[641.848152,{"FailedProof":{"prop_name":"count (count Z xs) (rev xs) == count (count Z xs) xs"}}],[642.876923,{"FailedProof":{"prop_name":"count (S Z) (rev xs) == count (S Z) xs"}}],[646.978881,{"FailedProof":{"prop_name":"count (count Z xs) (zs++ys) == count (count Z xs) (ys++zs)"}}],[649.043708,{"FailedProof":{"prop_name":"count (count Z xs) (ys++xs) == count (count Z xs) (xs++ys)"}}],[651.094292,{"FailedProof":{"prop_name":"count (count Z ys) (ys++xs) == count (count Z ys) (xs++ys)"}}],[653.15433,{"FailedProof":{"prop_name":"count (S Z) (ys++xs) == count (S Z) (xs++ys)"}}],[653.154336,{"StartingUserLemmas":[]}],[656.495859,{"InductiveProof":{"prop_name":"prop_79","lemmas":[]}}],[656.528818,{"PlainProof":{"prop_name":"prop_54","lemmas":[]}}],[656.538774,{"PlainProof":{"prop_name":"prop_10","lemmas":[]}}],[656.575923,{"PlainProof":{"prop_name":"prop_08","lemmas":[]}}],[656.584187,{"PlainProof":{"prop_name":"prop_09","lemmas":[]}}],[656.606061,{"PlainProof":{"prop_name":"prop_07","lemmas":[]}}],[656.629193,{"PlainProof":{"prop_name":"prop_06","lemmas":[]}}],[657.729762,{"InductiveProof":{"prop_name":"prop_65","lemmas":[]}}],[658.739962,{"InductiveProof":{"prop_name":"prop_18","lemmas":[]}}],[660.880309,{"InductiveProof":{"prop_name":"prop_70","lemmas":[]}}],[661.888981,{"InductiveProof":{"prop_name":"prop_69","lemmas":[]}}],[662.127692,{"PlainProof":{"prop_name":"prop_17","lemmas":[]}}],[662.896834,{"InductiveProof":{"prop_name":"prop_21","lemmas":[]}}],[667.06948,{"FailedProof":{"prop_name":"prop_76"}}],[671.145641,{"FailedProof":{"prop_name":"prop_75"}}],[675.227899,{"FailedProof":{"prop_name":"prop_39"}}],[676.271816,{"PlainProof":{"prop_name":"prop_05","lemmas":[]}}],[676.29923,{"PlainProof":{"prop_name":"prop_04","lemmas":[]}}],[677.255098,{"FailedProof":{"prop_name":"prop_38"}}],[681.330948,{"FailedProof":{"prop_name":"prop_03"}}],[684.43185,{"PlainProof":{"prop_name":"prop_56","lemmas":[]}}],[684.45485,{"PlainProof":{"prop_name":"prop_13","lemmas":[]}}],[684.476206,{"PlainProof":{"prop_name":"prop_11","lemmas":[]}}],[684.546451,{"PlainProof":{"prop_name":"prop_35","lemmas":[]}}],[685.442178,{"FailedProof":{"prop_name":"prop_02"}}],[687.48833,{"FailedProof":{"prop_name":"prop_37"}}],[689.567148,{"FailedProof":{"prop_name":"prop_28"}}],[693.667824,{"FailedProof":{"prop_name":"prop_27"}}],[697.750365,{"FailedProof":{"prop_name":"prop_26"}}],[701.83991,{"FailedProof":{"prop_name":"prop_14"}}],[705.892219,{"FailedProof":{"prop_name":"prop_71"}}],[707.927029,{"FailedProof":{"prop_name":"prop_30"}}],[709.976835,{"FailedProof":{"prop_name":"prop_29"}}],[712.018385,{"FailedProof":{"prop_name":"prop_68"}}],[714.050209,{"FailedProof":{"prop_name":"prop_66"}}],[716.233547,{"PlainProof":{"prop_name":"prop_19","lemmas":[]}}],[717.109493,{"InductiveProof":{"prop_name":"prop_55","lemmas":[]}}],[719.15195,{"FailedProof":{"prop_name":"prop_15"}}],[722.371853,{"InductiveProof":{"prop_name":"prop_12","lemmas":[]}}],[723.438943,{"InductiveProof":{"prop_name":"prop_25","lemmas":[]}}],[725.437057,{"InductiveProof":{"prop_name":"prop_24","lemmas":[]}}],[726.505257,{"InductiveProof":{"prop_name":"prop_23","lemmas":[]}}],[730.517948,{"InductiveProof":{"prop_name":"prop_22","lemmas":[]}}],[731.627692,{"InductiveProof":{"prop_name":"prop_34","lemmas":[]}}],[733.58438,{"InductiveProof":{"prop_name":"prop_33","lemmas":[]}}],[734.69057,{"InductiveProof":{"prop_name":"prop_32","lemmas":[]}}],[738.66531,{"InductiveProof":{"prop_name":"prop_31","lemmas":[]}}],[739.68332,{"FailedProof":{"prop_name":"prop_47"}}],[741.718632,{"FailedProof":{"prop_name":"prop_73"}}],[743.752476,{"FailedProof":{"prop_name":"prop_52"}}],[745.789205,{"FailedProof":{"prop_name":"prop_53"}}],[746.023549,{"PlainProof":{"prop_name":"prop_81","lemmas":[]}}],[746.806875,{"FailedProof":{"prop_name":"prop_20"}}],[749.914142,{"InductiveProof":{"prop_name":"prop_80","lemmas":[]}}],[751.957348,{"FailedProof":{"prop_name":"prop_74"}}],[753.392842,{"PlainProof":{"prop_name":"prop_57","lemmas":[]}}],[753.418506,{"PlainProof":{"prop_name":"prop_42","lemmas":[]}}],[754.008849,{"FailedProof":{"prop_name":"prop_72"}}],[756.460731,{"PlainProof":{"prop_name":"prop_40","lemmas":[]}}],[756.485379,{"PlainProof":{"prop_name":"prop_01","lemmas":[]}}],[757.232084,{"InductiveProof":{"prop_name":"prop_41","lemmas":[]}}],[759.267608,{"FailedProof":{"prop_name":"prop_43"}}],[759.507402,{"InductiveProof":{"prop_name":"prop_36","lemmas":[]}}],[761.575861,{"FailedProof":{"prop_name":"prop_85"}}],[765.734235,{"FailedProof":{"prop_name":"prop_84"}}],[769.950868,{"FailedProof":{"prop_name":"prop_83"}}],[773.627617,{"InductiveProof":{"prop_name":"prop_82","lemmas":[]}}],[777.002745,{"PlainProof":{"prop_name":"prop_46","lemmas":[]}}],[777.033022,{"PlainProof":{"prop_name":"prop_45","lemmas":[]}}],[777.531418,{"PlainProof":{"prop_name":"prop_44","lemmas":[]}}],[777.594477,{"InductiveProof":{"prop_name":"prop_58","lemmas":[]}}],[778.611469,{"FailedProof":{"prop_name":"prop_67"}}],[779.628125,{"FailedProof":{"prop_name":"prop_50"}}],[781.70208,{"FailedProof":{"prop_name":"prop_51"}}],[783.735317,{"FailedProof":{"prop_name":"prop_49"}}],[784.75621,{"FailedProof":{"prop_name":"prop_48"}}],[786.909966,{"FailedProof":{"prop_name":"prop_64"}}],[788.945541,{"FailedProof":{"prop_name":"prop_63"}}],[790.990247,{"FailedProof":{"prop_name":"prop_62"}}],[793.023932,{"FailedProof":{"prop_name":"prop_61"}}],[795.057646,{"FailedProof":{"prop_name":"prop_60"}}],[796.832564,{"PlainProof":{"prop_name":"prop_16","lemmas":[]}}],[797.101593,{"FailedProof":{"prop_name":"prop_59"}}],[798.118884,{"FailedProof":{"prop_name":"prop_78"}}],[800.151257,{"FailedProof":{"prop_name":"prop_77"}}],[800.151349,{"Finished":{"proved":["prop_79","prop_65","prop_18","prop_70","prop_69","prop_21","prop_55","prop_12","prop_25","prop_24","prop_23","prop_22","prop_34","prop_33","prop_32","prop_31","prop_80","prop_41","prop_36","prop_82","prop_58","prop_54","prop_10","prop_08","prop_09","prop_07","prop_06","prop_17","prop_05","prop_04","prop_56","prop_13","prop_11","prop_35","prop_19","prop_81","prop_57","prop_42","prop_40","prop_01","prop_46","prop_45","prop_44","prop_16"],"qs_proved":["y+x == x+y","x-x == Z","xs++[] == xs","take y (take x xs) == take x (take y xs)","y+(x+z) == x+(y+z)","(xs++ys)++zs == xs++(ys++zs)","drop (x+y) xs == drop x (drop y xs)","(x-y)-z == x-(y+z)","len (ys++xs) == len (xs++ys)","take x (take x xs) == take x xs","drop x (take x xs) == []","y+(x-y) == x+(y-x)","(x+y)-x == y","len xs-x == len (drop x xs)","len (rev xs) == len xs","take (len xs) xs == xs","take (x+y) (take x xs) == take x xs","take (x-y) (drop y xs) == drop y (take x xs)","drop (x+y) (y:xs) == drop (x+y) (x:xs)","take x xs++drop x xs == xs","count x xs-len xs == Z","(x+z)-S z == (x+y)-S y","(x-y)-(y-x) == x-y","take (len xs) (xs++ys) == xs","drop (len xs) (xs++ys) == ys","take (x+x) (y:[]) == take x (y:[])","take (S Z) (xs++xs) == take (S Z) xs","S Z-(x+x) == S y-(x+y)","count (count x xs) (Z:[]) == S Z-count x xs","count (x-y) (Z:[]) == S Z-(x-y)","count x (x:[]) == S Z","(y+z)-(z-x) == (x+y)-(x-z)","(y-z)-(y-x) == (x-z)-(x-y)"],"unproved":["prop_76","prop_75","prop_39","prop_38","prop_03","prop_02","prop_37","prop_28","prop_27","prop_26","prop_14","prop_71","prop_30","prop_29","prop_68","prop_66","prop_15","prop_47","prop_73","prop_52","prop_53","prop_20","prop_74","prop_72","prop_43","prop_85","prop_84","prop_83","prop_67","prop_50","prop_51","prop_49","prop_48","prop_64","prop_63","prop_62","prop_61","prop_60","prop_59","prop_78","prop_77"],"qs_unproved":["count x (xs++ys) == count x (ys++xs)","filter p (filter p xs) == filter p xs","filter p (rev xs) == rev (filter p xs)","count x (rev xs) == count x xs","rev (rev xs) == xs","filter p xs++filter p ys == filter p (xs++ys)","take (count x xs) (xs++ys) == take (count x xs) xs","take (x-y) (take x xs) == take (x-y) xs","count x xs+count x ys == count x (xs++ys)","count x (y:[]) == count y (x:[])","rev xs++rev ys == rev (ys++xs)","take (len xs) (filter p xs) == filter p xs","drop (len xs) (filter p xs) == []","count (S x) (x:xs) == count (S x) xs","(x+x)-(y+y) == (x-y)+(x-y)","count (x+y) (x:[]) == S x-(x+y)","count (x-y) (x:[]) == count (y-x) (y:[])","count (x+x) (y:[]) == count (y-x) (x:[])","count (x+x) (Z:xs) == count (x+x) (x:xs)","count (S x) (x:[]) == Z","count Z (rev xs) == count Z xs","count x xs+count x ys == count x (ys++xs)","take (count x xs) (ys++ys) == take (count x xs) ys","count (count x xs) (rev ys) == count (count x xs) ys","count (x+y) (rev xs) == count (x+y) xs","count (x-y) (rev xs) == count (x-y) xs","filter p xs++filter p xs == filter p (xs++xs)","count x xs+count x xs == count x (xs++xs)","take (count x xs) (xs++xs) == take (count x xs) xs","count (count x xs) (rev xs) == count (count x xs) xs","count (len xs) (rev ys) == count (len xs) ys","count (S x) (rev xs) == count (S x) xs","count (x+x) (rev xs) == count (x+x) xs","rev xs++rev xs == rev (xs++xs)","count (len xs) (rev xs) == count (len xs) xs","count (count x xs) (ys++zs) == count (count x xs) (zs++ys)","count (x+y) (xs++ys) == count (x+y) (ys++xs)","count (x-y) (xs++ys) == count (x-y) (ys++xs)","count (count x xs) (ys++xs) == count (count x xs) (xs++ys)","count (count x xs) (xs++ys) == count (count x xs) (ys++xs)","count (len xs) (ys++zs) == count (len xs) (zs++ys)","count (S x) (xs++ys) == count (S x) (ys++xs)","count (x+x) (xs++ys) == count (x+x) (ys++xs)","count Z (xs++ys) == count Z (ys++xs)","count Z xs+count Z ys == count Z (xs++ys)","count Z xs+count Z ys == count Z (ys++xs)","count (len xs) (ys++xs) == count (len xs) (xs++ys)","count (len xs) (xs++ys) == count (len xs) (ys++xs)","count (x+y) (y:[]) == S z-(z+x)","count (x+x) (x:[]) == S y-(y+x)","count (x+y) (x:[]) == S z-(z+y)","count (x+y) (y:[]) == S y-(x+y)","count (x+y) (y:[]) == S z-(x+z)","count (x+x) (x:[]) == S y-(x+y)","take (count Z xs) (ys++ys) == take (count Z xs) ys","count (count Z xs) (rev ys) == count (count Z xs) ys","count Z xs+count Z xs == count Z (xs++xs)","take (count Z xs) (xs++ys) == take (count Z xs) xs","take (count Z xs) (xs++xs) == take (count Z xs) xs","count (count Z xs) (rev xs) == count (count Z xs) xs","count (S Z) (rev xs) == count (S Z) xs","count (count Z xs) (ys++zs) == count (count Z xs) (zs++ys)","count (count Z xs) (ys++xs) == count (count Z xs) (xs++ys)","count (count Z xs) (xs++ys) == count (count Z xs) (ys++xs)","count (S Z) (xs++ys) == count (S Z) (ys++xs)"]}}]]