[[1.0e-6,{"Started":[]}],[0.876439,{"FileProcessed":[]}],[1.863223,{"QuickSpecDone":{"eqs":396,"classes":1310}}],[3.256824,{"InductiveProof":{"prop_name":"xs++[] == xs","lemmas":[]}}],[3.340045,{"InductiveProof":{"prop_name":"zip ys [] == zip xs []","lemmas":[]}}],[3.41529,{"PlainProof":{"prop_name":"[]++xs == xs","lemmas":[]}}],[3.419825,{"PlainProof":{"prop_name":"zip [] xs == zip xs []","lemmas":[]}}],[3.475818,{"PlainProof":{"prop_name":"rev [] == []","lemmas":[]}}],[3.4975,{"PlainProof":{"prop_name":"(x:xs)++ys == x:(xs++ys)","lemmas":[]}}],[7.717532,{"InductiveProof":{"prop_name":"(xs++ys)++zs == xs++(ys++zs)","lemmas":[]}}],[8.855377,{"InductiveProof":{"prop_name":"zip xs (xs++ys) == zip xs xs","lemmas":[]}}],[10.919277,{"InductiveProof":{"prop_name":"zip (xs++ys) xs == zip xs xs","lemmas":[]}}],[12.096925,{"FailedProof":{"prop_name":"rev (rev xs) == xs"}}],[16.363791,{"InductiveProof":{"prop_name":"rev xs++rev ys == rev (ys++xs)","lemmas":[]}}],[16.426403,{"FailedProof":{"prop_name":"zip (xs++ys) (rev xs) == zip xs (rev xs)"}}],[19.642447,{"PlainProof":{"prop_name":"rev (x:[]) == x:[]","lemmas":[]}}],[20.739026,{"FailedProof":{"prop_name":"zip (rev xs) (xs++ys) == zip (rev xs) xs"}}],[20.831983,{"PlainProof":{"prop_name":"zip (x:ys) (y:[]) == zip (x:xs) (y:[])","lemmas":[]}}],[20.832414,{"PlainProof":{"prop_name":"zip (x:[]) (y:xs) == zip (x:xs) (y:[])","lemmas":[]}}],[20.886155,{"PlainProof":{"prop_name":"rev xs++(x:[]) == rev (x:xs)","lemmas":[]}}],[22.890203,{"InductiveProof":{"prop_name":"zip (xs++xs) (x:[]) == zip xs (x:[])","lemmas":[]}}],[22.902353,{"Discard":{"discarded":["xs++[] == xs","xs++[] == xs","xs++[] == xs","zip xs [] == zip ys []","zip xs [] == zip ys []","[]++xs == xs","[]++xs == xs","[]++xs == xs","zip [] xs == zip xs []","zip [] xs == zip ys []","zip [] xs == zip ys []","rev [] == []","[]++[] == []","zip [] [] == zip xs []","(x:xs)++ys == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(x:xs)++ys == x:(xs++ys)","(xs++ys)++zs == xs++(ys++zs)","(xs++ys)++zs == xs++(ys++zs)","(xs++ys)++zs == xs++(ys++zs)","(xs++ys)++zs == xs++(ys++zs)","(xs++ys)++zs == xs++(ys++zs)","(xs++ys)++zs == xs++(ys++zs)","zip xs (xs++ys) == zip xs xs","zip xs (xs++ys) == zip xs xs","zip xs (xs++ys) == zip xs xs","zip xs (xs++ys) == zip xs xs","zip xs (xs++ys) == zip xs xs","zip xs (xs++ys) == zip xs xs","(x:xs)++xs == x:(xs++xs)","(x:xs)++xs == x:(xs++xs)","(x:xs)++xs == x:(xs++xs)","(x:xs)++xs == x:(xs++xs)","(x:xs)++xs == x:(xs++xs)","(x:xs)++xs == x:(xs++xs)","(x:xs)++xs == x:(xs++xs)","(x:xs)++xs == x:(xs++xs)","(x:xs)++xs == x:(xs++xs)","(xs++ys)++xs == xs++(ys++xs)","(xs++ys)++ys == xs++(ys++ys)","(xs++ys)++xs == xs++(ys++xs)","(xs++ys)++ys == xs++(ys++ys)","(xs++ys)++ys == xs++(ys++ys)","(xs++ys)++xs == xs++(ys++xs)","(xs++ys)++xs == xs++(ys++xs)","(xs++ys)++ys == xs++(ys++ys)","(xs++ys)++ys == xs++(ys++ys)","(xs++ys)++xs == xs++(ys++xs)","(xs++ys)++ys == xs++(ys++ys)","(xs++ys)++xs == xs++(ys++xs)","zip (xs++ys) xs == zip xs xs","zip (xs++ys) xs == zip xs xs","zip (xs++ys) xs == zip xs xs","zip (xs++ys) xs == zip xs xs","zip (xs++ys) xs == zip xs xs","zip (xs++ys) xs == zip xs xs","(xs++xs)++ys == xs++(xs++ys)","(xs++xs)++ys == xs++(xs++ys)","(xs++xs)++ys == xs++(xs++ys)","(xs++xs)++ys == xs++(xs++ys)","(xs++xs)++ys == xs++(xs++ys)","(xs++xs)++ys == xs++(xs++ys)","rev (rev xs) == xs","rev (rev xs) == xs","rev (rev xs) == xs","zip xs (xs++xs) == zip xs xs","zip xs (xs++xs) == zip xs xs","zip xs (xs++xs) == zip xs xs","(xs++xs)++xs == xs++(xs++xs)","(xs++xs)++xs == xs++(xs++xs)","(xs++xs)++xs == xs++(xs++xs)","zip (xs++xs) xs == zip xs xs","zip (xs++xs) xs == zip xs xs","zip (xs++xs) xs == zip xs xs","[]++(x:xs) == x:xs","[]++(x:xs) == x:xs","[]++(x:xs) == x:xs","[]++(x:xs) == x:xs","[]++(x:xs) == x:xs","[]++(x:xs) == x:xs","[]++(x:xs) == x:xs","[]++(x:xs) == x:xs","[]++(x:xs) == x:xs","[]++(xs++ys) == xs++ys","[]++(xs++ys) == xs++ys","[]++(xs++ys) == xs++ys","[]++(xs++ys) == xs++ys","[]++(xs++ys) == xs++ys","[]++(xs++ys) == xs++ys","zip [] (x:xs) == zip xs []","zip [] (x:xs) == zip ys []","zip [] (x:xs) == zip ys []","zip [] (x:xs) == zip xs []","zip [] (x:xs) == zip ys []","zip [] (x:xs) == zip ys []","zip [] (x:xs) == zip xs []","zip [] (x:xs) == zip ys []","zip [] (x:xs) == zip ys []","zip [] (xs++ys) == zip xs []","zip [] (xs++ys) == zip xs []","zip [] (xs++ys) == zip ys []","zip [] (xs++ys) == zip zs []","zip [] (xs++ys) == zip ys []","zip [] (xs++ys) == zip zs []","(x:xs)++[] == x:xs","(x:xs)++[] == x:xs","(x:xs)++[] == x:xs","(x:xs)++[] == x:xs","(x:xs)++[] == x:xs","(x:xs)++[] == x:xs","(x:xs)++[] == x:xs","(x:xs)++[] == x:xs","(x:xs)++[] == x:xs","(xs++ys)++[] == xs++ys","(xs++ys)++[] == xs++ys","(xs++ys)++[] == xs++ys","(xs++ys)++[] == xs++ys","(xs++ys)++[] == xs++ys","(xs++ys)++[] == xs++ys","zip (x:xs) [] == zip xs []","zip (x:xs) [] == zip ys []","zip (x:xs) [] == zip ys []","zip (x:xs) [] == zip xs []","zip (x:xs) [] == zip ys []","zip (x:xs) [] == zip ys []","zip (x:xs) [] == zip xs []","zip (x:xs) [] == zip ys []","zip (x:xs) [] == zip ys []","zip (xs++ys) [] == zip xs []","zip (xs++ys) (rev xs) == zip xs (rev xs)","zip (xs++ys) [] == zip xs []","zip (xs++ys) (rev xs) == zip xs (rev xs)","zip (xs++ys) [] == zip ys []","zip (xs++ys) (rev xs) == zip xs (rev xs)","zip (xs++ys) [] == zip zs []","zip (xs++ys) (rev xs) == zip xs (rev xs)","zip (xs++ys) [] == zip ys []","zip (xs++ys) (rev xs) == zip xs (rev xs)","zip (xs++ys) [] == zip zs []","zip (xs++ys) (rev xs) == zip xs (rev xs)","rev xs++rev ys == rev (ys++xs)","rev xs++rev ys == rev (ys++xs)","rev xs++rev ys == rev (ys++xs)","rev xs++rev ys == rev (ys++xs)","rev xs++rev ys == rev (ys++xs)","rev xs++rev ys == rev (ys++xs)","zip (rev xs) (xs++ys) == zip (rev xs) xs","zip (rev xs) (xs++ys) == zip (rev xs) xs","zip (rev xs) (xs++ys) == zip (rev xs) xs","zip (rev xs) (xs++ys) == zip (rev xs) xs","zip (rev xs) (xs++ys) == zip (rev xs) xs","zip (rev xs) (xs++ys) == zip (rev xs) xs","(x:[])++xs == x:xs","(x:[])++xs == x:xs","(x:[])++xs == x:xs","(x:[])++xs == x:xs","(x:[])++xs == x:xs","(x:[])++xs == x:xs","(x:[])++xs == x:xs","(x:[])++xs == x:xs","(x:[])++xs == x:xs","rev (x:[]) == x:[]","rev (x:[]) == x:[]","rev (x:[]) == x:[]","[]++rev xs == rev xs","[]++rev xs == rev xs","[]++rev xs == rev xs","[]++(xs++xs) == xs++xs","[]++(xs++xs) == xs++xs","[]++(xs++xs) == xs++xs","zip [] (rev xs) == zip xs []","zip [] (rev xs) == zip ys []","zip [] (rev xs) == zip ys []","zip [] (xs++xs) == zip xs []","zip [] (xs++xs) == zip ys []","zip [] (xs++xs) == zip ys []","rev xs++[] == rev xs","rev xs++rev xs == rev (xs++xs)","rev xs++[] == rev xs","rev xs++rev xs == rev (xs++xs)","rev xs++[] == rev xs","rev xs++rev xs == rev (xs++xs)","(xs++xs)++[] == xs++xs","(xs++xs)++[] == xs++xs","(xs++xs)++[] == xs++xs","zip (rev xs) [] == zip xs []"]}}],[23.919126,{"InductiveProof":{"prop_name":"zip (x:[]) (xs++xs) == zip (x:[]) xs","lemmas":[]}}],[25.08763,{"FailedProof":{"prop_name":"zip (rev xs) (xs++xs) == zip (rev xs) xs"}}],[25.089261,{"Discard":{"discarded":["zip (rev xs) [] == zip ys []","zip (rev xs) (xs++xs) == zip (rev xs) xs","zip (rev xs) [] == zip ys []","zip (rev xs) (xs++xs) == zip (rev xs) xs","zip (xs++xs) [] == zip xs []","zip (xs++xs) [] == zip ys []","zip (xs++xs) (rev xs) == zip xs (rev xs)","zip (xs++xs) [] == zip ys []","zip (xs++xs) (rev xs) == zip xs (rev xs)","zip (x:xs) (y:[]) == zip (x:ys) (y:[])","zip (x:xs) (y:[]) == zip (x:ys) (y:[])","zip (x:xs) (y:[]) == zip (x:ys) (y:[])","zip (x:xs) (y:[]) == zip (x:ys) (y:[])","zip (x:xs) (y:[]) == zip (x:ys) (y:[])","zip (x:xs) (y:[]) == zip (x:ys) (y:[])","zip (x:xs) (y:[]) == zip (x:ys) (y:[])","zip (x:xs) (y:[]) == zip (x:ys) (y:[])","zip (x:xs) (y:[]) == zip (x:ys) (y:[])","zip (x:xs) (y:[]) == zip (x:ys) (y:[])","zip (x:xs) (y:[]) == zip (x:ys) (y:[])","zip (x:xs) (y:[]) == zip (x:ys) (y:[])","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(y:xs) == x:(y:xs)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","(x:[])++(xs++ys) == x:(xs++ys)","zip (x:[]) (y:xs) == zip (x:xs) (y:[])","zip (x:[]) (y:xs) == zip (x:ys) (y:[])","zip (x:[]) (y:xs) == zip (x:ys) (y:[])","zip (x:[]) (y:xs) == zip (x:xs) (y:[])","zip (x:[]) (y:xs) == zip (x:ys) (y:[])","zip (x:[]) (y:xs) == zip (x:ys) (y:[])","zip (x:[]) (y:xs) == zip (x:xs) (y:[])","zip (x:[]) (y:xs) == zip (x:ys) (y:[])","zip (x:[]) (y:xs) == zip (x:ys) (y:[])","zip (x:[]) (y:xs) == zip (x:xs) (y:[])","zip (x:[]) (y:xs) == zip (x:ys) (y:[])","zip (x:[]) (y:xs) == zip (x:ys) (y:[])","zip (x:[]) (y:xs) == zip (x:xs) (y:[])","zip (x:[]) (y:xs) == zip (x:ys) (y:[])","zip (x:[]) (y:xs) == zip (x:ys) (y:[])","zip (x:[]) (y:xs) == zip (x:xs) (y:[])","zip (x:[]) (y:xs) == zip (x:ys) (y:[])","zip (x:[]) (y:xs) == zip (x:ys) (y:[])","zip (x:xs) (x:[]) == zip (x:ys) (x:[])","zip (x:xs) (x:[]) == zip (x:ys) (x:[])","zip (x:xs) (x:[]) == zip (x:ys) (x:[])","zip (x:xs) (x:[]) == zip (x:ys) (x:[])","zip (x:xs) (x:[]) == zip (x:ys) (x:[])","zip (x:xs) (x:[]) == zip (x:ys) (x:[])","rev xs++(x:[]) == rev (x:xs)","rev xs++(x:[]) == rev (x:xs)","rev xs++(x:[]) == rev (x:xs)","rev xs++(x:[]) == rev (x:xs)","rev xs++(x:[]) == rev (x:xs)","rev xs++(x:[]) == rev (x:xs)","rev xs++(x:[]) == rev (x:xs)","rev xs++(x:[]) == rev (x:xs)","rev xs++(x:[]) == rev (x:xs)","zip (xs++xs) (x:[]) == zip xs (x:[])","zip (xs++xs) (x:[]) == zip xs (x:[])","zip (xs++xs) (x:[]) == zip xs (x:[])","zip (xs++xs) (x:[]) == zip xs (x:[])","zip (xs++xs) (x:[]) == zip xs (x:[])","zip (xs++xs) (x:[]) == zip xs (x:[])","zip (xs++xs) (x:[]) == zip xs (x:[])","zip (xs++xs) (x:[]) == zip xs (x:[])","zip (xs++xs) (x:[]) == zip xs (x:[])","(x:[])++(x:xs) == x:(x:xs)","(x:[])++(x:xs) == x:(x:xs)","(x:[])++(x:xs) == x:(x:xs)","(x:[])++rev xs == x:rev xs","(x:[])++rev xs == x:rev xs","(x:[])++rev xs == x:rev xs","(x:[])++(xs++xs) == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","(x:[])++(x:xs) == x:(x:xs)","(x:[])++(x:xs) == x:(x:xs)","(x:[])++(x:xs) == x:(x:xs)","(x:[])++rev xs == x:rev xs","(x:[])++rev xs == x:rev xs","(x:[])++rev xs == x:rev xs","(x:[])++(xs++xs) == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","(x:[])++(x:xs) == x:(x:xs)","(x:[])++(x:xs) == x:(x:xs)","(x:[])++(x:xs) == x:(x:xs)","(x:[])++rev xs == x:rev xs","(x:[])++rev xs == x:rev xs","(x:[])++rev xs == x:rev xs","(x:[])++(xs++xs) == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","(x:[])++(xs++xs) == x:(xs++xs)","zip (x:[]) (x:xs) == zip (x:xs) (x:[])","zip (x:[]) (x:xs) == zip (x:ys) (x:[])","zip (x:[]) (x:xs) == zip (x:ys) (x:[])","zip (x:[]) (xs++xs) == zip (x:[]) xs","zip (x:[]) (xs++xs) == zip (x:[]) xs","zip (x:[]) (xs++xs) == zip (x:[]) xs","zip (x:[]) (x:xs) == zip (x:xs) (x:[])","zip (x:[]) (x:xs) == zip (x:ys) (x:[])","zip (x:[]) (x:xs) == zip (x:ys) (x:[])","zip (x:[]) (xs++xs) == zip (x:[]) xs","zip (x:[]) (xs++xs) == zip (x:[]) xs","zip (x:[]) (xs++xs) == zip (x:[]) xs","zip (x:[]) (x:xs) == zip (x:xs) (x:[])","zip (x:[]) (x:xs) == zip (x:ys) (x:[])","zip (x:[]) (x:xs) == zip (x:ys) (x:[])","zip (x:[]) (xs++xs) == zip (x:[]) xs","zip (x:[]) (xs++xs) == zip (x:[]) xs","zip (x:[]) (xs++xs) == zip (x:[]) xs","[]++(x:[]) == x:[]","[]++(x:[]) == x:[]","[]++(x:[]) == x:[]","zip [] (x:[]) == zip xs []","zip [] (x:[]) == zip xs []","zip [] (x:[]) == zip xs []","(x:[])++[] == x:[]","(x:[])++[] == x:[]","(x:[])++[] == x:[]","zip (x:[]) [] == zip xs []","zip (x:[]) [] == zip xs []","zip (x:[]) [] == zip xs []","(x:[])++(y:[]) == x:(y:[])","(x:[])++(y:[]) == x:(y:[])","(x:[])++(y:[]) == x:(y:[])","(x:[])++(y:[]) == x:(y:[])","(x:[])++(y:[]) == x:(y:[])","(x:[])++(y:[]) == x:(y:[])","zip (x:[]) (y:[]) == zip (x:xs) (y:[])","zip (x:[]) (y:[]) == zip (x:xs) (y:[])","zip (x:[]) (y:[]) == zip (x:xs) (y:[])","zip (x:[]) (y:[]) == zip (x:xs) (y:[])","zip (x:[]) (y:[]) == zip (x:xs) (y:[])","zip (x:[]) (y:[]) == zip (x:xs) (y:[])","(x:[])++(x:[]) == x:(x:[])","(x:[])++(x:[]) == x:(x:[])","(x:[])++(x:[]) == x:(x:[])","zip (x:[]) (x:[]) == zip (x:xs) (x:[])","zip (x:[]) (x:[]) == zip (x:xs) (x:[])","zip (x:[]) (x:[]) == zip (x:xs) (x:[])"]}}],[27.152849,{"FailedProof":{"prop_name":"zip (xs++xs) (rev xs) == zip xs (rev xs)"}}],[28.177649,{"InductiveProof":{"prop_name":"rev (rev xs) == xs","lemmas":[]}}],[31.646101,{"FailedProof":{"prop_name":"zip (xs++ys) (rev xs) == zip xs (rev xs)"}}],[35.993321,{"FailedProof":{"prop_name":"zip (rev xs) (xs++ys) == zip (rev xs) xs"}}],[37.055164,{"FailedProof":{"prop_name":"zip (rev xs) (xs++xs) == zip (rev xs) xs"}}],[39.133545,{"FailedProof":{"prop_name":"zip (xs++xs) (rev xs) == zip xs (rev xs)"}}],[43.406403,{"FailedProof":{"prop_name":"zip (xs++ys) (rev xs) == zip xs (rev xs)"}}],[46.62766,{"FailedProof":{"prop_name":"zip (rev xs) (xs++ys) == zip (rev xs) xs"}}],[48.694788,{"FailedProof":{"prop_name":"zip (rev xs) (xs++xs) == zip (rev xs) xs"}}],[49.741017,{"FailedProof":{"prop_name":"zip (xs++xs) (rev xs) == zip xs (rev xs)"}}],[49.741033,{"StartingUserLemmas":[]}],[53.976789,{"FailedProof":{"prop_name":"prop_85"}}],[53.976799,{"Finished":{"qs_proved":["xs++[] == xs","zip ys [] == zip xs []","(xs++ys)++zs == xs++(ys++zs)","zip xs (xs++ys) == zip xs xs","zip (xs++ys) xs == zip xs xs","rev xs++rev ys == rev (ys++xs)","zip (xs++xs) (x:[]) == zip xs (x:[])","zip (x:[]) (xs++xs) == zip (x:[]) xs","rev (rev xs) == xs"],"unproved":["prop_85"],"proved":[],"qs_unproved":["zip (xs++ys) (rev xs) == zip xs (rev xs)","zip (rev xs) (xs++ys) == zip (rev xs) xs","zip (rev xs) (xs++xs) == zip (rev xs) xs","zip (xs++xs) (rev xs) == zip xs (rev xs)"]}}]]