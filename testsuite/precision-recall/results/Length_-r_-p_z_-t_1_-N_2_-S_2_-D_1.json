[[2.0e-6,{"Started":[]}],[7.9741,{"FileProcessed":[]}],[8.227841,{"QuickSpecDone":{"eqs":248,"classes":712}}],[9.403145,{"InductiveProof":{"lemmas":[],"prop_name":"xs++[] == xs"}}],[11.407445,{"InductiveProof":{"lemmas":[],"prop_name":"(xs++ys)++zs == xs++(ys++zs)"}}],[13.528084,{"InductiveProof":{"lemmas":[],"prop_name":"length (ys++xs) == length (xs++ys)"}}],[14.571362,{"FailedProof":{"prop_name":"length (reverse xs) == length xs"}}],[15.600242,{"FailedProof":{"prop_name":"reverse (reverse xs) == xs"}}],[16.579308,{"InductiveProof":{"lemmas":[],"prop_name":"reverse xs++reverse ys == reverse (ys++xs)"}}],[16.585492,{"Discard":{"discarded":["xs++[] == xs","xs++[] == xs","xs++[] == xs","(xs++ys)++zs == xs++(ys++zs)","(xs++ys)++zs == xs++(ys++zs)","(xs++ys)++zs == xs++(ys++zs)","(xs++ys)++zs == xs++(ys++zs)","(xs++ys)++zs == xs++(ys++zs)","(xs++ys)++zs == xs++(ys++zs)","length (xs++ys) == length (ys++xs)","length (xs++ys) == length (ys++xs)","length (xs++ys) == length (ys++xs)","(xs++ys)++xs == xs++(ys++xs)","(xs++ys)++ys == xs++(ys++ys)","(xs++ys)++xs == xs++(ys++xs)","(xs++ys)++ys == xs++(ys++ys)","(xs++ys)++ys == xs++(ys++ys)","(xs++ys)++xs == xs++(ys++xs)","(xs++ys)++xs == xs++(ys++xs)","(xs++ys)++ys == xs++(ys++ys)","(xs++ys)++ys == xs++(ys++ys)","(xs++ys)++xs == xs++(ys++xs)","(xs++ys)++ys == xs++(ys++ys)","(xs++ys)++xs == xs++(ys++xs)","(xs++xs)++ys == xs++(xs++ys)","(xs++xs)++ys == xs++(xs++ys)","(xs++xs)++ys == xs++(xs++ys)","(xs++xs)++ys == xs++(xs++ys)","(xs++xs)++ys == xs++(xs++ys)","(xs++xs)++ys == xs++(xs++ys)","length (reverse xs) == length xs","length (reverse xs) == length xs","length (reverse xs) == length xs","reverse (reverse xs) == xs","reverse (reverse xs) == xs","reverse (reverse xs) == xs","(xs++xs)++xs == xs++(xs++xs)","(xs++xs)++xs == xs++(xs++xs)","(xs++xs)++xs == xs++(xs++xs)","(x:xs)++[] == x:xs","(x:xs)++[] == x:xs","(x:xs)++[] == x:xs","(x:xs)++[] == x:xs","(x:xs)++[] == x:xs","(x:xs)++[] == x:xs","(x:xs)++[] == x:xs","(x:xs)++[] == x:xs","(x:xs)++[] == x:xs","(xs++ys)++[] == xs++ys","(xs++ys)++[] == xs++ys","(xs++ys)++[] == xs++ys","(xs++ys)++[] == xs++ys","(xs++ys)++[] == xs++ys","(xs++ys)++[] == xs++ys","reverse xs++reverse ys == reverse (ys++xs)","reverse xs++reverse ys == reverse (ys++xs)","reverse xs++reverse ys == reverse (ys++xs)","reverse xs++reverse ys == reverse (ys++xs)","reverse xs++reverse ys == reverse (ys++xs)","reverse xs++reverse ys == reverse (ys++xs)","reverse xs++[] == reverse xs","reverse xs++reverse xs == reverse (xs++xs)","reverse xs++[] == reverse xs","reverse xs++reverse xs == reverse (xs++xs)","reverse xs++[] == reverse xs","reverse xs++reverse xs == reverse (xs++xs)","(xs++xs)++[] == xs++xs","(xs++xs)++[] == xs++xs","(xs++xs)++[] == xs++xs"]}}],[17.610399,{"InductiveProof":{"lemmas":[],"prop_name":"length (reverse xs) == length xs"}}],[17.683084,{"InductiveProof":{"lemmas":[],"prop_name":"reverse (reverse xs) == xs"}}],[17.683121,{"ExploredTheory":{"equations":["xs++[] == xs","(xs++ys)++zs == xs++(ys++zs)","length (xs++ys) == length (ys++xs)","length (reverse xs) == length xs","reverse (reverse xs) == xs","reverse xs++reverse ys == reverse (ys++xs)"]}}],[17.75572,{"StartingUserLemmas":[]}],[17.755784,{"Finished":{"qs_proved":["xs++[] == xs","(xs++ys)++zs == xs++(ys++zs)","length (ys++xs) == length (xs++ys)","reverse xs++reverse ys == reverse (ys++xs)","length (reverse xs) == length xs","reverse (reverse xs) == xs"],"proved":[],"qs_unproved":[],"unproved":[]}}]]