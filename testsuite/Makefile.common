ifndef RESULT_PREFIX
RESULT_PREFIX=results/
endif

ifndef RESULT_SUFFIX
RESULT_SUFFIX=.json
endif

ifndef OUTPUT
OUTPUT=--json=
endif

ifndef HIPSPEC_BASE_FLAGS
HIPSPEC_BASE_FLAGS = --verbosity=85
endif

ifndef HIPSPEC_FLAGS
HIPSPEC_FLAGS = --isolate --only-user-stated --expand-boolprops
endif

define make_target
$(RESULT_PREFIX)$(1)$(RESULT_SUFFIX):
	hipspec Properties --auto --only=$(prop_prefix)$(1) $(HIPSPEC_BASE_FLAGS) $(HIPSPEC_FLAGS) $(OUTPUT)$$@
targets += $(RESULT_PREFIX)$(1)$(RESULT_SUFFIX)
endef

$(foreach prop,$(props),$(eval $(call make_target,$(prop))))

define make_expensive_target
$(RESULT_PREFIX)$(1)$(RESULT_SUFFIX):
	hipspec Properties --auto --only=$(prop_prefix)$(1) $(HIPSPEC_EXPENSIVE_FLAGS) $(HIPSPEC_BASE_FLAGS) $(HIPSPEC_FLAGS) $(OUTPUT)$$@
targets += $(RESULT_PREFIX)$(1)$(RESULT_SUFFIX)
endef

$(foreach prop,$(expensive_props),$(eval $(call make_expensive_target,$(prop))))

targets: $(targets)

results:
	mkdir -p results

result.json: results $(targets)
	echo "{" >> $@
	for i in $(targets); do echo "\"$$i\":" >> $@; cat $$i >> $@; echo "," >> $@; done
	echo "\"dummy\":null}" >> $@

all: result.json

clean:
	rm -rf $(targets)
	rm result.json
	rm -rf *.hi *.o
	rmdir results

.PHONY: all clean targets

